%------------------------------------------------------------------------------%
% Copyright (C) 1999 INRIA/INSA.
--- /soft/eclipse/eclipse4.1/lib_pd/opium_light/scenario.op	Sat Feb 20 16:09:16 1999
+++ scenario.op	Thu Nov  4 09:02:35 1999
@@ -87,11 +87,11 @@
 be used to generate all the opium modules on backtracking."
 	).
 
-opium_module_Op(opium_kernel).
-	/* to get opium_kernel as first module always (manual) */
+opium_module_Op(morphine).
+	/* to get morphine as first module always (manual) */
 opium_module_Op(M) :-
 	current_module(M),
-	M \== opium_kernel,
+	M \== morphine,
 	not is_locked(M),
 	call(is_predicate(opium_module/0), M).
 
@@ -128,8 +128,8 @@
 	implementation	: set_default_Op,
 	parameters	: [],
 	message		:
- "Commands which sets the object Pred (eg next/1) of type ObjectType \n\
-(eg command) in Scenario and Module to its default value. If used with \n\
+ "Commands which sets the object Pred (e.g. next/1) of type ObjectType \n\
+(e.g. command) in Scenario and Module to its default value. If used with \n\
 variables it will set to default the matching objects on backtracking. \n\
 For parameters use set_default/1."
 	).
@@ -152,10 +152,10 @@
 	implementation	: rebuild_object_Op,
 	parameters	: [],
 	message		:
- "Commands which links Pred (eg next/1) of ObjectType (eg command) in \n\
+ "Commands which links Pred (e.g. next/1) of ObjectType (e.g. command) in \n\
 Scenario and Module to the given Implementation.  Pred must be the \n\
 name of an existing object with same arity. Implementation must be the \n\
-name of a predicate (eg mynext). This predicate must have the same \n\
+name of a predicate (e.g. mynext). This predicate must have the same \n\
 arity as the object to rebuild (except for tools commands where the \n\
 implementation must be of arity +1). The existence of such a predicate \n\
 is not checked by Opium."
@@ -251,7 +251,7 @@
 	!,
 	concat_atom([Name, '_np'], Name_np),
 	BuiltPred = 
-		([(Name :- Name_np, print_line), 
+		([(Name :- Name_np, print_event), 
 		  (Name_np :- Impl)]).
 build_pred_command(BuiltPred, trace, Name, ArgList, TypeList, Impl) :-
 	Cmd1 =.. [Name | ArgList],
@@ -264,7 +264,7 @@
 			check_arg_type(ArgList, ArgNameList, TypeList, NewList),
 			Cmd2 =.. [Name_np | NewList],
 			Cmd2,
-			print_line),
+			print_event),
 		  (Cmd_np :- ImplGoal)]).
 build_pred_command(BuiltPred, tool, Name, [], [], Impl) :-
 	!,
@@ -321,7 +321,7 @@
 	implementation	: implementation_link_Op,
 	message		:
  "Primitive which retrieves the link between Pred, an Opium objects \n\
-(eg next/0) of ObjectType and its default implementation visible in \n\
+(e.g. next/0) of ObjectType and its default implementation visible in \n\
 Module. This is useful when you want to customize an object and you \n\
 want to re-use the default implementation.  Only commands, primitives, \n\
 procedures and types can be customized. For parameters see \n\
