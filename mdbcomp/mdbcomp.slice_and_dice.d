# vim: ts=8 sw=8 noexpandtab ft=make

# Automatically generated module dependencies for
# module `mdbcomp.slice_and_dice' in source file `slice_and_dice.m'.
# Generated by Mercury compiler version rotd-2024-06-05
# configured for x86_64-pc-linux-gnu.

# RULE date_file_deps
# target group names:
#   dates_and_err
# source group names:
#   source
#   ancestors
#   long deps
#   short deps
#   type_repn self dep
#   type_repn ancestor dep
mdbcomp.slice_and_dice.optdate mdbcomp.slice_and_dice.trans_opt_date slice_and_dice.err mdbcomp.slice_and_dice.c_date mdbcomp.slice_and_dice.java_date : \
		slice_and_dice.m \
	\
		mdbcomp.int0 \
	\
		builtin.int \
		cord.int \
		float.int \
		int.int \
		io.int \
		list.int \
		map.int \
		maybe.int \
		pair.int \
		private_builtin.int \
		require.int \
		set.int \
		stream.int \
		string.int \
		mdbcomp.goal_path.int \
		mdbcomp.prim_data.int \
		mdbcomp.rtti_access.int \
		mdbcomp.sym_name.int \
		mdbcomp.trace_counts.int \
		string.format.int \
		string.parse_util.int \
	\
		array.int2 \
		assoc_list.int2 \
		bimap.int2 \
		bitmap.int2 \
		bool.int2 \
		char.int2 \
		construct.int2 \
		deconstruct.int2 \
		enum.int2 \
		ops.int2 \
		pretty_printer.int2 \
		set_ordlist.int2 \
		term.int2 \
		term_context.int2 \
		time.int2 \
		tree234.int2 \
		type_desc.int2 \
		univ.int2 \
	\
		mdbcomp.slice_and_dice.int \
	\
		mdbcomp.int

# RULE objs_on_mihs
mdbcomp.slice_and_dice.pic_o mdbcomp.slice_and_dice.$O : \
		array.mih \
		assoc_list.mih \
		bimap.mih \
		bitmap.mih \
		bool.mih \
		builtin.mih \
		char.mih \
		construct.mih \
		cord.mih \
		deconstruct.mih \
		enum.mih \
		float.mih \
		int.mih \
		io.mih \
		list.mih \
		map.mih \
		maybe.mih \
		mdbcomp.mih \
		ops.mih \
		pair.mih \
		pretty_printer.mih \
		private_builtin.mih \
		require.mih \
		set.mih \
		set_ordlist.mih \
		stream.mih \
		string.mih \
		term.mih \
		term_context.mih \
		time.mih \
		tree234.mih \
		type_desc.mih \
		univ.mih \
		mdbcomp.goal_path.mih \
		mdbcomp.prim_data.mih \
		mdbcomp.rtti_access.mih \
		mdbcomp.sym_name.mih \
		mdbcomp.trace_counts.mih \
		string.format.mih \
		string.parse_util.mih

# RULE mh_and_mih_on_c
mdbcomp.slice_and_dice.mh mdbcomp.slice_and_dice.mih : mdbcomp.slice_and_dice.c

ifeq ($(findstring java,$(GRADE)),java)

# RULE module_dep_on_java
mdbcomp.slice_and_dice.module_dep : jmercury/mdbcomp__slice_and_dice.java

else

# RULE module_dep_on_c
mdbcomp.slice_and_dice.module_dep : mdbcomp.slice_and_dice.c

endif # conditional fragment

# RULE self_and_parent_date_deps
# target group names:
#   date files
# source group names:
#   source
#   ancestor int0
#   long dep int3s
#   short dep int3s
mdbcomp.slice_and_dice.date mdbcomp.slice_and_dice.date0 mdbcomp.date : \
		slice_and_dice.m \
	\
		mdbcomp.int0 \
	\
		builtin.int3 \
		cord.int3 \
		float.int3 \
		int.int3 \
		io.int3 \
		list.int3 \
		map.int3 \
		maybe.int3 \
		pair.int3 \
		private_builtin.int3 \
		require.int3 \
		set.int3 \
		stream.int3 \
		string.int3 \
		mdbcomp.goal_path.int3 \
		mdbcomp.prim_data.int3 \
		mdbcomp.rtti_access.int3 \
		mdbcomp.sym_name.int3 \
		mdbcomp.trace_counts.int3 \
		string.format.int3 \
		string.parse_util.int3 \
	\
		array.int3 \
		assoc_list.int3 \
		bimap.int3 \
		bitmap.int3 \
		bool.int3 \
		char.int3 \
		construct.int3 \
		deconstruct.int3 \
		enum.int3 \
		ops.int3 \
		pretty_printer.int3 \
		set_ordlist.int3 \
		term.int3 \
		term_context.int3 \
		time.int3 \
		tree234.int3 \
		type_desc.int3 \
		univ.int3

# RULE self_and_parent_date0_deps
# target group names:
#   date0s
# source group names:
#   source
#   long dep int3s
#   short dep int3s
mdbcomp.slice_and_dice.date0 mdbcomp.date0 : \
		slice_and_dice.m \
	\
		builtin.int3 \
		cord.int3 \
		float.int3 \
		int.int3 \
		io.int3 \
		list.int3 \
		map.int3 \
		maybe.int3 \
		pair.int3 \
		private_builtin.int3 \
		require.int3 \
		set.int3 \
		stream.int3 \
		string.int3 \
		mdbcomp.goal_path.int3 \
		mdbcomp.prim_data.int3 \
		mdbcomp.rtti_access.int3 \
		mdbcomp.sym_name.int3 \
		mdbcomp.trace_counts.int3 \
		string.format.int3 \
		string.parse_util.int3 \
	\
		array.int3 \
		assoc_list.int3 \
		bimap.int3 \
		bitmap.int3 \
		bool.int3 \
		char.int3 \
		construct.int3 \
		deconstruct.int3 \
		enum.int3 \
		ops.int3 \
		pretty_printer.int3 \
		set_ordlist.int3 \
		term.int3 \
		term_context.int3 \
		time.int3 \
		tree234.int3 \
		type_desc.int3 \
		univ.int3

# RULE foreign_deps_for_mh
mdbcomp.slice_and_dice.$O mdbcomp.slice_and_dice.pic_o : \
		array.mh \
		bitmap.mh \
		io.mh \
		mdbcomp.mh \
		string.mh \
		time.mh \
		io.stream_ops.mh \
		mdbcomp.rtti_access.mh \
		mdbcomp.slice_and_dice.mh

# RULE int0_on_date0
mdbcomp.slice_and_dice.int0 : mdbcomp.slice_and_dice.date0
	@:

# RULE int_on_date
mdbcomp.slice_and_dice.int : mdbcomp.slice_and_dice.date
	@:

# RULE int2_on_date
mdbcomp.slice_and_dice.int2 : mdbcomp.slice_and_dice.date
	@:

# RULE int3_on_date3
mdbcomp.slice_and_dice.int3 : mdbcomp.slice_and_dice.date3
	@:

# RULE opt_on_opt_date
mdbcomp.slice_and_dice.opt : mdbcomp.slice_and_dice.optdate
	@:

# RULE trans_opt_on_trans_opt_date
mdbcomp.slice_and_dice.trans_opt : mdbcomp.slice_and_dice.trans_opt_date
	@:

# RULE date0_on_src
mdbcomp.slice_and_dice.date0 : slice_and_dice.m
	$(MCPI) $(ALL_GRADEFLAGS) $(ALL_MCPIFLAGS) mdbcomp.slice_and_dice

# RULE date_on_src
mdbcomp.slice_and_dice.date : slice_and_dice.m
	$(MCI) $(ALL_GRADEFLAGS) $(ALL_MCIFLAGS) mdbcomp.slice_and_dice

# RULE date3_on_src
mdbcomp.slice_and_dice.date3 : slice_and_dice.m
	$(MCSI) $(ALL_GRADEFLAGS) $(ALL_MCSIFLAGS) mdbcomp.slice_and_dice

# RULE opt_date_on_src
mdbcomp.slice_and_dice.optdate : slice_and_dice.m
	$(MCOI) $(ALL_GRADEFLAGS) $(ALL_MCOIFLAGS) mdbcomp.slice_and_dice

# RULE trans_opt_date_on_src
mdbcomp.slice_and_dice.trans_opt_date : slice_and_dice.m
	$(MCTOI) $(ALL_GRADEFLAGS) $(ALL_MCTOIFLAGS) mdbcomp.slice_and_dice

# RULE c_date_on_src
mdbcomp.slice_and_dice.c_date : slice_and_dice.m
	$(MCG) $(ALL_GRADEFLAGS) $(ALL_MCGFLAGS) mdbcomp.slice_and_dice $(ERR_REDIRECT)

# RULE java_date_on_src
mdbcomp.slice_and_dice.java_date : slice_and_dice.m
	$(MCG) $(ALL_GRADEFLAGS) $(ALL_MCGFLAGS) --java-only mdbcomp.slice_and_dice $(ERR_REDIRECT)

