:- module grade_lib.grade_spec.
:- interface.
:- type if_spec
    --->    being(grade_lib.grade_spec.solver_var_id, grade_lib.grade_spec.solver_var_value_id).
:- type implication_spec
    --->    implies_that(grade_lib.grade_spec.if_spec, grade_lib.grade_spec.then_spec).
:- type requirement_spec
    --->    requirement_spec((grade_lib.grade_spec).rs_explanation :: string, (grade_lib.grade_spec).rs_implication :: grade_lib.grade_spec.implication_spec).
:- type solver_var_id
    --->    svar_ac_gcc_regs_avail 
    ;       svar_ac_gcc_gotos_avail 
    ;       svar_ac_gcc_labels_avail 
    ;       svar_ac_low_tag_bits_avail 
    ;       svar_ac_size_of_double 
    ;       svar_ac_merc_file 
    ;       svar_backend 
    ;       svar_target 
    ;       svar_gcc_conf 
    ;       svar_low_tag_bits_use 
    ;       svar_stack_len 
    ;       svar_trail 
    ;       svar_minmodel 
    ;       svar_thread_safe 
    ;       svar_gc 
    ;       svar_deep_prof 
    ;       svar_mprof_call 
    ;       svar_mprof_time 
    ;       svar_mprof_memory 
    ;       svar_tscope_prof 
    ;       svar_term_size_prof 
    ;       svar_debug 
    ;       svar_ssdebug 
    ;       svar_target_debug 
    ;       svar_rbmm 
    ;       svar_rbmm_debug 
    ;       svar_rbmm_prof 
    ;       svar_pregen 
    ;       svar_request_single_prec_float 
    ;       svar_merc_float .
:- type solver_var_spec
    --->    solver_var_spec((grade_lib.grade_spec).svs_var :: grade_lib.grade_spec.solver_var_id, (grade_lib.grade_spec).svs_values :: list.list(grade_lib.grade_spec.solver_var_value_id)).
:- type solver_var_value_id
    --->    svalue_ac_gcc_regs_avail_no 
    ;       svalue_ac_gcc_regs_avail_yes 
    ;       svalue_ac_gcc_gotos_avail_no 
    ;       svalue_ac_gcc_gotos_avail_yes 
    ;       svalue_ac_gcc_labels_avail_no 
    ;       svalue_ac_gcc_labels_avail_yes 
    ;       svalue_ac_low_tag_bits_avail_0 
    ;       svalue_ac_low_tag_bits_avail_2 
    ;       svalue_ac_low_tag_bits_avail_3 
    ;       svalue_ac_size_of_double_eq_ptr 
    ;       svalue_ac_size_of_double_ne_ptr 
    ;       svalue_ac_merc_file_no 
    ;       svalue_ac_merc_file_yes 
    ;       svalue_backend_mlds 
    ;       svalue_backend_llds 
    ;       svalue_target_c 
    ;       svalue_target_csharp 
    ;       svalue_target_java 
    ;       svalue_gcc_conf_none 
    ;       svalue_gcc_conf_reg 
    ;       svalue_gcc_conf_jump 
    ;       svalue_gcc_conf_fast 
    ;       svalue_gcc_conf_asm_jump 
    ;       svalue_gcc_conf_asm_fast 
    ;       svalue_low_tag_bits_use_0 
    ;       svalue_low_tag_bits_use_2 
    ;       svalue_low_tag_bits_use_3 
    ;       svalue_stack_len_std 
    ;       svalue_stack_len_segments 
    ;       svalue_stack_len_extend 
    ;       svalue_trail_no 
    ;       svalue_trail_yes 
    ;       svalue_minmodel_no 
    ;       svalue_minmodel_stack_copy 
    ;       svalue_minmodel_stack_copy_debug 
    ;       svalue_minmodel_own_stack 
    ;       svalue_minmodel_own_stack_debug 
    ;       svalue_thread_safe_c_no 
    ;       svalue_thread_safe_c_yes 
    ;       svalue_thread_safe_target_native 
    ;       svalue_gc_none 
    ;       svalue_gc_bdw 
    ;       svalue_gc_bdw_debug 
    ;       svalue_gc_target_native 
    ;       svalue_gc_accurate 
    ;       svalue_gc_history 
    ;       svalue_deep_prof_no 
    ;       svalue_deep_prof_yes 
    ;       svalue_mprof_call_no 
    ;       svalue_mprof_call_yes 
    ;       svalue_mprof_time_no 
    ;       svalue_mprof_time_yes 
    ;       svalue_mprof_memory_no 
    ;       svalue_mprof_memory_yes 
    ;       svalue_tscope_prof_no 
    ;       svalue_tscope_prof_yes 
    ;       svalue_term_size_prof_no 
    ;       svalue_term_size_prof_cells 
    ;       svalue_term_size_prof_words 
    ;       svalue_debug_none 
    ;       svalue_debug_debug 
    ;       svalue_debug_decldebug 
    ;       svalue_ssdebug_no 
    ;       svalue_ssdebug_yes 
    ;       svalue_target_debug_no 
    ;       svalue_target_debug_yes 
    ;       svalue_rbmm_no 
    ;       svalue_rbmm_yes 
    ;       svalue_rbmm_debug_no 
    ;       svalue_rbmm_debug_yes 
    ;       svalue_rbmm_prof_no 
    ;       svalue_rbmm_prof_yes 
    ;       svalue_pregen_no 
    ;       svalue_pregen_yes 
    ;       svalue_request_single_prec_float_no 
    ;       svalue_request_single_prec_float_yes 
    ;       svalue_merc_float_is_boxed_c_double 
    ;       svalue_merc_float_is_unboxed_c_double 
    ;       svalue_merc_float_is_unboxed_c_float .
:- type specs_version
    --->    specs_version_0 
    ;       specs_version_1 .
:- type then_spec
    --->    is_one_of(grade_lib.grade_spec.solver_var_id, list.list(grade_lib.grade_spec.solver_var_value_id)).
