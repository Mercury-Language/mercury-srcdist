:- module (mdb.name_mangle).
:- interface.
:- type arity == int.
:- type is_pred_or_func
    --->    predicate 
    ;       function .
:- type mercury_proc
    --->    mercury_proc(mdb.name_mangle.is_pred_or_func, mdb.name_mangle.module_name, mdb.name_mangle.pred_name, mdb.name_mangle.arity, mdb.name_mangle.mode_num).
:- type mode_num == int.
:- type module_name == mdb.name_mangle.sym_name.
:- type pred_name == string.
:- type sym_name
    --->    qualified(mdb.name_mangle.sym_name, string)
    ;       unqualified(string).
:- type_representation(arity, is_eqv_to(int)).
:- type_representation(is_pred_or_func, du_repn(enum("predicate", "function", [],  no_c_j_cs_e))).
:- type_representation(mercury_proc, is_word_aligned_ptr).
:- type_representation(mode_num, is_eqv_to(int)).
:- type_representation(module_name, is_eqv_to(mdb.name_mangle.sym_name)).
:- type_representation(pred_name, is_eqv_to(string)).
