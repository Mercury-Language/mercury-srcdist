/*
** Automatically generated from `declarative_debugger.m'
** by the Mercury compiler,
** version rotd-2023-06-07
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module mdb.declarative_debugger.
// :- interface.

#ifndef MR_HEADER_GUARD_mdb__declarative_debugger
#define MR_HEADER_GUARD_mdb__declarative_debugger

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef MDB__DECLARATIVE_DEBUGGER_DECL_GUARD
#define MDB__DECLARATIVE_DEBUGGER_DECL_GUARD
#include "mdb.mih"

extern  int MR_DD_debug_origin;


#endif



extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_answer_1;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_bug_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_confirmation_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_contour_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_e_bug_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_evidence_1;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_exception_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_i_bug_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_position_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_question_1;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_decl_truth_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_diagnoser_exception_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_diagnoser_response_1;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_diagnoser_state_1;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_final_decl_atom_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_init_decl_atom_0;

extern const MR_TypeCtorInfo_Struct mdb__declarative_debugger__mdb__declarative_debugger__type_ctor_info_some_decl_atom_0;

void MR_CALL 
mdb__declarative_debugger__f_85_110_117_115_101_100_65_114_103_115_95_95_112_114_101_100_95_95_95_95_67_111_109_112_97_114_101_95_95_95_109_100_98_95_95_100_101_99_108_97_114_97_116_105_118_101_95_100_101_98_117_103_103_101_114_95_95_100_101_99_108_95_112_111_115_105_116_105_111_110_95_48_95_95_91_50_44_32_51_93_95_48_3_p_0(
  MR_Word * param_1);

void MR_CALL 
mdb__declarative_debugger__diagnoser_state_init_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
mdb__declarative_debugger__diagnosis_9_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word param_7,
  MR_Word * param_8);

void MR_CALL 
mdb__declarative_debugger__unravel_decl_atom_3_p_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word * param_3);

MR_Word MR_CALL 
mdb__declarative_debugger__get_decl_question_atom_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Box MR_CALL 
mdb__declarative_debugger__get_decl_question_node_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_answer_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_bug_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_confirmation_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_contour_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_e_bug_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_evidence_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_exception_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_i_bug_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_position_0_0(
  MR_Word * param_1);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_question_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mdb__declarative_debugger____Compare____decl_truth_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____diagnoser_exception_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____diagnoser_response_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mdb__declarative_debugger____Compare____diagnoser_state_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mdb__declarative_debugger____Compare____final_decl_atom_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____init_decl_atom_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mdb__declarative_debugger____Compare____some_decl_atom_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_answer_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_bug_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_confirmation_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_contour_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_e_bug_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_evidence_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_exception_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_i_bug_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_position_0_0(void);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_question_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____decl_truth_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____diagnoser_exception_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____diagnoser_response_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____diagnoser_state_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____final_decl_atom_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____init_decl_atom_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mdb__declarative_debugger____Unify____some_decl_atom_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__mdb__declarative_debugger__init(void);
void mercury__mdb__declarative_debugger__init_type_tables(void);
void mercury__mdb__declarative_debugger__init_debugger(void);
const char *mercury__mdb__declarative_debugger__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_mdb.declarative_debugger

// :- end_interface mdb.declarative_debugger.
