# vim: ts=8 sw=8 noexpandtab ft=make

# Automatically generated program dependencies for
# module `mtc_diff' in source file `mtc_diff.m'.
# Generated by Mercury compiler version rotd-2020-04-11
# configured for x86_64-pc-linux-gnu.

ifneq ($(EXT_FOR_EXE),)

# RULE ext_for_exe
.PHONY: mtc_diff
mtc_diff : mtc_diff$(EXT_FOR_EXE)

endif # conditional fragment

ifeq ($(findstring java,$(GRADE)),java)

# RULE executable_java
mtc_diff : $(mtc_diff.classes)

else

# RULE executable_non_java
mtc_diff$(EXT_FOR_EXE) : \
		$(mtc_diff.os) \
		mtc_diff_init.$O \
		$(foreach @,mtc_diff,$(ALL_MLOBJS)) \
		$(foreach @,mtc_diff,$(ALL_MLLIBS_DEP))
	$(ML) $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) -- $(ALL_LDFLAGS) $(EXEFILE_OPT)mtc_diff$(EXT_FOR_EXE) mtc_diff_init.$O \
		$(mtc_diff.os) \
		$(foreach @,mtc_diff,$(ALL_MLOBJS)) $(ALL_MLLIBS)

endif # conditional fragment

ifeq ($(findstring java,$(GRADE)),java)

# RULE lib_target_java
.PHONY: libmtc_diff
libmtc_diff : \
		mtc_diff.jar \
		$(mtc_diff.ints) \
		$(mtc_diff.int3s) \
		mtc_diff.init

else

# RULE lib_target_non_java
.PHONY: libmtc_diff
libmtc_diff : \
		libmtc_diff.$A \
		libmtc_diff.$(EXT_FOR_SHARED_LIB) \
		$(mtc_diff.ints) \
		$(mtc_diff.int3s) \
		mtc_diff.init

endif # conditional fragment

ifneq ($(EXT_FOR_SHARED_LIB),$(A))

# RULE shared_lib
libmtc_diff.$(EXT_FOR_SHARED_LIB) : \
		$(mtc_diff.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mtc_diff,$(ALL_MLOBJS))) \
		$(foreach @,mtc_diff,$(ALL_MLLIBS_DEP))
	$(ML) --make-shared-lib $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) --  $(ALL_LD_LIBFLAGS) -o libmtc_diff.$(EXT_FOR_SHARED_LIB) \
		$(mtc_diff.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mtc_diff,$(ALL_MLOBJS))) $(ALL_MLLIBS)

endif # conditional fragment

# RULE lib
libmtc_diff.$A : \
		$(mtc_diff.os) \
		$(foreach @,mtc_diff,$(ALL_MLOBJS))
	rm -f libmtc_diff.$A
	$(AR) $(ALL_ARFLAGS) $(AR_LIBFILE_OPT)libmtc_diff.$A $(mtc_diff.os) \
		$(foreach @,mtc_diff,$(ALL_MLOBJS))
	$(RANLIB) $(ALL_RANLIBFLAGS) libmtc_diff.$A

# RULE jar
mtc_diff.jar : $(mtc_diff.classes)
	$(JAR) $(JAR_CREATE_FLAGS) mtc_diff.jar $(mtc_diff.classes)

# RULE init_file
mtc_diff.init : \
		mtc_diff.dep \
		$(mtc_diff.cs)
	echo > mtc_diff.init
	$(MKLIBINIT) $(mtc_diff.cs) >> mtc_diff.init
	$(EXTRA_INIT_COMMAND) >> mtc_diff.init

# RULE force_init_c_file
force-mtc_diff_init :

# RULE init_c_file
mtc_diff_init.c : \
		force-mtc_diff_init \
		$(mtc_diff.cs)
	@$(C2INIT) $(ALL_GRADEFLAGS) $(ALL_C2INITFLAGS) --init-c-file mtc_diff_init.c.tmp $(mtc_diff.init_cs) $(ALL_C2INITARGS)
	@mercury_update_interface mtc_diff_init.c

# RULE lib_install_ints
.PHONY: libmtc_diff.install_ints
libmtc_diff.install_ints : \
		$(mtc_diff.ints) \
		$(mtc_diff.int3s) \
		install_lib_dirs
	files="$(mtc_diff.ints) $(mtc_diff.int3s) "; \
	for file in $$files; do \
		target="$(INSTALL_INT_DIR)/`basename $$file`"; \
		if cmp -s "$$file" "$$target"; then \
			echo "$$target unchanged"; \
		else \
			echo "installing $$target"; \
			$(INSTALL) "$$file" "$$target"; \
		fi; \
	done
	# The following is needed to support the `--use-subdirs' option.
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	for ext in int int2 int3; do \
		dir="$(INSTALL_INT_DIR)/Mercury/$${ext}s"; \
		rm -rf "$$dir"; \
		$(LN_S) .. "$$dir" || { \
			{ [ -d "$$dir" ] || \
			$(INSTALL_MKDIR) "$$dir"; } && \
			$(INSTALL) "$(INSTALL_INT_DIR)"/*.$$ext "$$dir"; \
		} || exit 1; \
	done

# RULE lib_install_opts
.PHONY: libmtc_diff.install_opts
libmtc_diff.install_opts :
	@:

ifeq ($(mtc_diff.mhs),)

# RULE install_lib_hdrs_nomhs
.PHONY: libmtc_diff.install_hdrs
libmtc_diff.install_hdrs : \
		$(mtc_diff.mhs) \
		install_lib_dirs
	@:

else

# RULE install_lib_hdrs_mhs
.PHONY: libmtc_diff.install_hdrs
libmtc_diff.install_hdrs : \
		$(mtc_diff.mhs) \
		install_lib_dirs
	for hdr in $(mtc_diff.mhs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_INC_DIR); \
	done

endif # conditional fragment

ifeq ($(mtc_diff.mihs),)

# RULE install_grade_hdrs_no_mihs
.PHONY: libmtc_diff.install_grade_hdrs
libmtc_diff.install_grade_hdrs : \
		$(mtc_diff.mihs) \
		install_grade_dirs
	@:

else

# RULE install_grade_hdrs_mihs
.PHONY: libmtc_diff.install_grade_hdrs
libmtc_diff.install_grade_hdrs : \
		$(mtc_diff.mihs) \
		install_grade_dirs
	for hdr in $(mtc_diff.mihs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_GRADE_INC_DIR); \
	done
	# The following is needed to support the `--use-subdirs' option.
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	rm -rf $(INSTALL_GRADE_INC_SUBDIR)
	$(LN_S) .. $(INSTALL_GRADE_INC_SUBDIR) || { \
		{ [ -d $(INSTALL_GRADE_INC_SUBDIR) ] || \
			$(INSTALL_MKDIR) $(INSTALL_GRADE_INC_SUBDIR); \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_GRADE_INC_SUBDIR); \
	} || exit 1
	rm -rf $(INSTALL_INT_DIR)/Mercury/mihs
	$(LN_S) .. $(INSTALL_INT_DIR)/Mercury/mihs || { \
		{ [ -d $(INSTALL_INT_DIR)/Mercury/mihs ] || \
			$(INSTALL_MKDIR) \
			$(INSTALL_INT_DIR)/Mercury/mihs; \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_INT_DIR); \
	} || exit 1

endif # conditional fragment

# RULE collective_target_.check.errs
.PHONY: mtc_diff.check
mtc_diff.check : $(mtc_diff.errs)

# RULE collective_target_.ints.dates
.PHONY: mtc_diff.ints
mtc_diff.ints : $(mtc_diff.dates)

# RULE collective_target_.int3s.date3s
.PHONY: mtc_diff.int3s
mtc_diff.int3s : $(mtc_diff.date3s)

# RULE collective_target_.opts.optdates
.PHONY: mtc_diff.opts
mtc_diff.opts : $(mtc_diff.optdates)

# RULE collective_target_.trans_opts.trans_opt_dates
.PHONY: mtc_diff.trans_opts
mtc_diff.trans_opts : $(mtc_diff.trans_opt_dates)

# RULE collective_target_.javas.javas
.PHONY: mtc_diff.javas
mtc_diff.javas : $(mtc_diff.javas)

# RULE collective_target_.classes.classes
.PHONY: mtc_diff.classes
mtc_diff.classes : $(mtc_diff.classes)

# RULE collective_target_.all_ints.dates
.PHONY: mtc_diff.all_ints
mtc_diff.all_ints : $(mtc_diff.dates)

# RULE collective_target_.all_int3s.date3s
.PHONY: mtc_diff.all_int3s
mtc_diff.all_int3s : $(mtc_diff.date3s)

# RULE collective_target_.all_opts.optdates
.PHONY: mtc_diff.all_opts
mtc_diff.all_opts : $(mtc_diff.optdates)

# RULE collective_target_.all_trans_opts.trans_opt_dates
.PHONY: mtc_diff.all_trans_opts
mtc_diff.all_trans_opts : $(mtc_diff.trans_opt_dates)

# RULE clean_local
clean_local : mtc_diff.clean

# RULE clean_target
.PHONY: mtc_diff.clean
mtc_diff.clean :
	-echo $(mtc_diff.dirs) | xargs rm -f
	-echo $(mtc_diff.cs) | xargs rm -f
	-echo $(mtc_diff.mihs) | xargs rm -f
	-echo $(mtc_diff.all_os) | xargs rm -f
	-echo $(mtc_diff.all_pic_os) | xargs rm -f
	-echo $(mtc_diff.c_dates) | xargs rm -f
	-echo $(mtc_diff.java_dates) | xargs rm -f
	-echo $(mtc_diff.useds) | xargs rm -f
	-echo $(mtc_diff.javas) | xargs rm -f
	-echo $(mtc_diff.profs) | xargs rm -f
	-echo $(mtc_diff.errs) | xargs rm -f
	-echo $(mtc_diff.foreign_cs) | xargs rm -f
	-rm -f mtc_diff_init.c mtc_diff_init.$O mtc_diff_init.pic_o

# RULE realclean_local
realclean_local : mtc_diff.realclean

# RULE realclean_target
.PHONY: mtc_diff.realclean
mtc_diff.realclean : mtc_diff.clean
	-echo $(mtc_diff.dates) | xargs rm -f
	-echo $(mtc_diff.date0s) | xargs rm -f
	-echo $(mtc_diff.date3s) | xargs rm -f
	-echo $(mtc_diff.optdates) | xargs rm -f
	-echo $(mtc_diff.trans_opt_dates) | xargs rm -f
	-echo $(mtc_diff.ints) | xargs rm -f
	-echo $(mtc_diff.all_int0s) | xargs rm -f
	-echo $(mtc_diff.int3s) | xargs rm -f
	-echo $(mtc_diff.opts) | xargs rm -f
	-echo $(mtc_diff.trans_opts) | xargs rm -f
	-echo $(mtc_diff.analysiss) | xargs rm -f
	-echo $(mtc_diff.requests) | xargs rm -f
	-echo $(mtc_diff.imdgs) | xargs rm -f
	-echo $(mtc_diff.ds) | xargs rm -f
	-echo $(mtc_diff.module_deps) | xargs rm -f
	-echo $(mtc_diff.all_mhs) | xargs rm -f
	-echo $(mtc_diff.all_mihs) | xargs rm -f
	-echo $(mtc_diff.dlls) | xargs rm -f
	-echo $(mtc_diff.foreign_dlls) | xargs rm -f
	-echo $(mtc_diff.classes) | xargs rm -f
	-rm -f mtc_diff$(EXT_FOR_EXE)  mtc_diff.init libmtc_diff.$A libmtc_diff.$(EXT_FOR_SHARED_LIB) mtc_diff.jar mtc_diff.dep mtc_diff.dv

