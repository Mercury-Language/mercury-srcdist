# Automatically generated dependencies for module `mtc_union'
# generated from source file `mtc_union.m'
# Generated by the Mercury compiler, version 11.07-beta-2011-07-20, configured for x86_64-unknown-linux-gnu.

ifneq ($(EXT_FOR_EXE),)
.PHONY : mtc_union
mtc_union : mtc_union$(EXT_FOR_EXE)
endif
ifeq ($(findstring il,$(GRADE)),il)
mtc_union : mtc_union.exe
mtc_union.exe : $(mtc_union.dlls) $(mtc_union.foreign_dlls)
else
 ifeq ($(findstring java,$(GRADE)),java)
mtc_union : $(mtc_union.classes)
 else
mtc_union$(EXT_FOR_EXE) : $(mtc_union.cs_or_ss) $(mtc_union.os) mtc_union_init.$O \
		$(foreach @,mtc_union,$(ALL_MLOBJS)) \
		$(foreach @,mtc_union,$(ALL_MLLIBS_DEP))
	$(ML) $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) -- $(ALL_LDFLAGS) -o mtc_union$(EXT_FOR_EXE) mtc_union_init.$O \
		$(mtc_union.os) \
		$(foreach @,mtc_union,$(ALL_MLOBJS)) $(ALL_MLLIBS)
 endif
endif
.PHONY : libmtc_union
ifeq ($(findstring il,$(GRADE)),il)
libmtc_union : $(mtc_union.dlls) $(mtc_union.foreign_dlls) \
		$(mtc_union.ints) $(mtc_union.int3s) mtc_union.init

else
 ifeq ($(findstring java,$(GRADE)),java)
libmtc_union : mtc_union.jar \
		$(mtc_union.ints) $(mtc_union.int3s) mtc_union.init

 else
libmtc_union : libmtc_union.$A libmtc_union.$(EXT_FOR_SHARED_LIB) \
		$(mtc_union.ints) $(mtc_union.int3s) mtc_union.init

 endif
endif
ifneq ($(EXT_FOR_SHARED_LIB),$A)
libmtc_union.$(EXT_FOR_SHARED_LIB) : $(mtc_union.cs_or_ss) $(mtc_union.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mtc_union,$(ALL_MLOBJS))) \
		$(foreach @,mtc_union,$(ALL_MLLIBS_DEP))
	$(ML) --make-shared-lib $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) --  $(ALL_LD_LIBFLAGS) -o libmtc_union.$(EXT_FOR_SHARED_LIB) \
		$(mtc_union.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mtc_union,$(ALL_MLOBJS))) $(ALL_MLLIBS)
endif

libmtc_union.$A : $(mtc_union.cs_or_ss) $(mtc_union.os) \
		$(foreach @,mtc_union,$(ALL_MLOBJS))
	rm -f libmtc_union.$A
	$(AR) $(ALL_ARFLAGS) $(AR_LIBFILE_OPT)libmtc_union.$A $(mtc_union.os) \
		$(foreach @,mtc_union,$(ALL_MLOBJS))
	$(RANLIB) $(ALL_RANLIBFLAGS) libmtc_union.$A

mtc_union.jar : $(mtc_union.classes)
	$(JAR) $(JAR_CREATE_FLAGS) mtc_union.jar $(mtc_union.classes)

mtc_union.init : mtc_union.dep $(mtc_union.cs)
	echo > mtc_union.init
	$(MKLIBINIT) $(mtc_union.cs) >> mtc_union.init
	$(EXTRA_INIT_COMMAND) >> mtc_union.init
force-mtc_union_init :

mtc_union_init.c : force-mtc_union_init $(mtc_union.cs)
	@$(C2INIT) $(ALL_GRADEFLAGS) $(ALL_C2INITFLAGS) --init-c-file mtc_union_init.c.tmp $(mtc_union.init_cs) $(ALL_C2INITARGS)
	@mercury_update_interface mtc_union_init.c

.PHONY : libmtc_union.install_ints
libmtc_union.install_ints : $(mtc_union.ints) $(mtc_union.int3s)  install_lib_dirs
	files="$(mtc_union.ints) $(mtc_union.int3s) "; \
	for file in $$files; do \
		target="$(INSTALL_INT_DIR)/`basename $$file`"; \
		if cmp -s "$$file" "$$target"; then \
			echo "$$target unchanged"; \
		else \
			echo "installing $$target"; \
			$(INSTALL) "$$file" "$$target"; \
		fi; \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	for ext in int int2 int3; do \
		dir="$(INSTALL_INT_DIR)/Mercury/$${ext}s"; \
		rm -rf "$$dir"; \
		$(LN_S) .. "$$dir" || { \
			{ [ -d "$$dir" ] || \
			$(INSTALL_MKDIR) "$$dir"; } && \
			$(INSTALL) "$(INSTALL_INT_DIR)"/*.$$ext "$$dir"; \
		} || exit 1; \
	done

.PHONY : libmtc_union.install_opts
libmtc_union.install_opts : 
	@:

.PHONY : libmtc_union.install_hdrs
libmtc_union.install_hdrs : $(mtc_union.mhs) install_lib_dirs
ifeq ($(mtc_union.mhs),)
	@:
else
	for hdr in $(mtc_union.mhs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_INC_DIR); \
	done
endif

.PHONY : libmtc_union.install_grade_hdrs
libmtc_union.install_grade_hdrs : $(mtc_union.mihs) install_grade_dirs
ifeq ($(mtc_union.mihs),)
	@:
else
	for hdr in $(mtc_union.mihs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_GRADE_INC_DIR); \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	rm -rf $(INSTALL_GRADE_INC_SUBDIR)
	$(LN_S) .. $(INSTALL_GRADE_INC_SUBDIR) || { \
		{ [ -d $(INSTALL_GRADE_INC_SUBDIR) ] || \
			$(INSTALL_MKDIR) $(INSTALL_GRADE_INC_SUBDIR); \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_GRADE_INC_SUBDIR); \
	} || exit 1
	rm -rf $(INSTALL_INT_DIR)/Mercury/mihs
	$(LN_S) .. $(INSTALL_INT_DIR)/Mercury/mihs || { \
		{ [ -d $(INSTALL_INT_DIR)/Mercury/mihs ] || \
			$(INSTALL_MKDIR) \
			$(INSTALL_INT_DIR)/Mercury/mihs; \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_INT_DIR); \
	} || exit 1
endif

.PHONY : mtc_union.check
mtc_union.check : $(mtc_union.errs)

.PHONY : mtc_union.ints
mtc_union.ints : $(mtc_union.dates)

.PHONY : mtc_union.int3s
mtc_union.int3s : $(mtc_union.date3s)

.PHONY : mtc_union.opts
mtc_union.opts : $(mtc_union.optdates)

.PHONY : mtc_union.trans_opts
mtc_union.trans_opts : $(mtc_union.trans_opt_dates)

.PHONY : mtc_union.ss
mtc_union.ss : $(mtc_union.ss)

.PHONY : mtc_union.pic_ss
mtc_union.pic_ss : $(mtc_union.pic_ss)

.PHONY : mtc_union.ils
mtc_union.ils : $(mtc_union.ils)

.PHONY : mtc_union.javas
mtc_union.javas : $(mtc_union.javas)

.PHONY : mtc_union.classes
mtc_union.classes : $(mtc_union.classes)

.PHONY : mtc_union.all_ints
mtc_union.all_ints : $(mtc_union.dates)

.PHONY : mtc_union.all_int3s
mtc_union.all_int3s : $(mtc_union.date3s)

.PHONY : mtc_union.all_opts
mtc_union.all_opts : $(mtc_union.optdates)

.PHONY : mtc_union.all_trans_opts
mtc_union.all_trans_opts : $(mtc_union.trans_opt_dates)

.PHONY : mtc_union.all_ss
mtc_union.all_ss : $(mtc_union.ss)

.PHONY : mtc_union.all_pic_ss
mtc_union.all_pic_ss : $(mtc_union.pic_ss)

clean_local : mtc_union.clean
.PHONY : mtc_union.clean
mtc_union.clean :
	-echo $(mtc_union.dirs) | xargs rm -rf 
	-echo $(mtc_union.cs) mtc_union_init.c | xargs rm -f
	-echo $(mtc_union.mihs) | xargs rm -f
	-echo $(mtc_union.all_ss) mtc_union_init.s | xargs rm -f
	-echo $(mtc_union.all_pic_ss) mtc_union_init.s | xargs rm -f
	-echo $(mtc_union.all_os) mtc_union_init.$O | xargs rm -f
	-echo $(mtc_union.all_pic_os) mtc_union_init.pic_o | xargs rm -f
	-echo $(mtc_union.c_dates) | xargs rm -f
	-echo $(mtc_union.il_dates) | xargs rm -f
	-echo $(mtc_union.java_dates) | xargs rm -f
	-echo $(mtc_union.all_s_dates) | xargs rm -f
	-echo $(mtc_union.all_pic_s_dates) | xargs rm -f
	-echo $(mtc_union.useds) | xargs rm -f
	-echo $(mtc_union.ils) | xargs rm -f
	-echo $(mtc_union.javas) | xargs rm -f
	-echo $(mtc_union.profs) | xargs rm -f
	-echo $(mtc_union.errs) | xargs rm -f
	-echo $(mtc_union.foreign_cs) | xargs rm -f

realclean_local : mtc_union.realclean
.PHONY : mtc_union.realclean
mtc_union.realclean : mtc_union.clean
	-echo $(mtc_union.dates) | xargs rm -f
	-echo $(mtc_union.date0s) | xargs rm -f
	-echo $(mtc_union.date3s) | xargs rm -f
	-echo $(mtc_union.optdates) | xargs rm -f
	-echo $(mtc_union.trans_opt_dates) | xargs rm -f
	-echo $(mtc_union.ints) | xargs rm -f
	-echo $(mtc_union.all_int0s) | xargs rm -f
	-echo $(mtc_union.int3s) | xargs rm -f
	-echo $(mtc_union.opts) | xargs rm -f
	-echo $(mtc_union.trans_opts) | xargs rm -f
	-echo $(mtc_union.analysiss) | xargs rm -f
	-echo $(mtc_union.requests) | xargs rm -f
	-echo $(mtc_union.imdgs) | xargs rm -f
	-echo $(mtc_union.ds) | xargs rm -f
	-echo $(mtc_union.module_deps) | xargs rm -f
	-echo $(mtc_union.all_mhs) | xargs rm -f
	-echo $(mtc_union.all_mihs) | xargs rm -f
	-echo $(mtc_union.dlls) | xargs rm -f
	-echo $(mtc_union.foreign_dlls) | xargs rm -f
	-echo $(mtc_union.classes) | xargs rm -f
	-rm -f mtc_union$(EXT_FOR_EXE) mtc_union.init libmtc_union.$A libmtc_union.$(EXT_FOR_SHARED_LIB) mtc_union.jar mtc_union.dep mtc_union.dv

