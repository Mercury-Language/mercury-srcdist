# Automatically generated dependencies for module `mdice'
# generated from source file `mdice.m'
# Generated by the Mercury compiler, version DEV
# configured for x86_64-apple-darwin13.4.0.

ifneq ($(EXT_FOR_EXE),)
.PHONY : mdice
mdice : mdice$(EXT_FOR_EXE)
endif
ifeq ($(findstring il,$(GRADE)),il)
mdice : mdice.exe
mdice.exe : $(mdice.dlls) $(mdice.foreign_dlls)
else
 ifeq ($(findstring java,$(GRADE)),java)
mdice : $(mdice.classes)
 else
mdice$(EXT_FOR_EXE) : $(mdice.cs_or_ss) $(mdice.os) mdice_init.$O \
		$(foreach @,mdice,$(ALL_MLOBJS)) \
		$(foreach @,mdice,$(ALL_MLLIBS_DEP))
	$(ML) $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) -- $(ALL_LDFLAGS) $(EXEFILE_OPT)mdice$(EXT_FOR_EXE) mdice_init.$O \
		$(mdice.os) \
		$(foreach @,mdice,$(ALL_MLOBJS)) $(ALL_MLLIBS)
 endif
endif
.PHONY : libmdice
ifeq ($(findstring il,$(GRADE)),il)
libmdice : $(mdice.dlls) $(mdice.foreign_dlls) \
		$(mdice.ints) $(mdice.int3s) mdice.init

else
 ifeq ($(findstring java,$(GRADE)),java)
libmdice : mdice.jar \
		$(mdice.ints) $(mdice.int3s) mdice.init

 else
libmdice : libmdice.$A libmdice.$(EXT_FOR_SHARED_LIB) \
		$(mdice.ints) $(mdice.int3s) mdice.init

 endif
endif
ifneq ($(EXT_FOR_SHARED_LIB),$A)
libmdice.$(EXT_FOR_SHARED_LIB) : $(mdice.cs_or_ss) $(mdice.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mdice,$(ALL_MLOBJS))) \
		$(foreach @,mdice,$(ALL_MLLIBS_DEP))
	$(ML) --make-shared-lib $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) -- -install_name /usr/local/mercury-rotd-2015-08-25/lib/mercury/lib/hlc.gc.pregen/libmdice.$(EXT_FOR_SHARED_LIB) $(ALL_LD_LIBFLAGS) -o libmdice.$(EXT_FOR_SHARED_LIB) \
		$(mdice.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mdice,$(ALL_MLOBJS))) $(ALL_MLLIBS)
endif

libmdice.$A : $(mdice.cs_or_ss) $(mdice.os) \
		$(foreach @,mdice,$(ALL_MLOBJS))
	rm -f libmdice.$A
	$(AR) $(ALL_ARFLAGS) $(AR_LIBFILE_OPT)libmdice.$A $(mdice.os) \
		$(foreach @,mdice,$(ALL_MLOBJS))
	$(RANLIB) $(ALL_RANLIBFLAGS) libmdice.$A

mdice.jar : $(mdice.classes)
	$(JAR) $(JAR_CREATE_FLAGS) mdice.jar $(mdice.classes)

mdice.init : mdice.dep $(mdice.cs)
	echo > mdice.init
	$(MKLIBINIT) $(mdice.cs) >> mdice.init
	$(EXTRA_INIT_COMMAND) >> mdice.init
force-mdice_init :

mdice_init.c : force-mdice_init $(mdice.cs)
	@$(C2INIT) $(ALL_GRADEFLAGS) $(ALL_C2INITFLAGS) --init-c-file mdice_init.c.tmp $(mdice.init_cs) $(ALL_C2INITARGS)
	@mercury_update_interface mdice_init.c

.PHONY : libmdice.install_ints
libmdice.install_ints : $(mdice.ints) $(mdice.int3s)  install_lib_dirs
	files="$(mdice.ints) $(mdice.int3s) "; \
	for file in $$files; do \
		target="$(INSTALL_INT_DIR)/`basename $$file`"; \
		if cmp -s "$$file" "$$target"; then \
			echo "$$target unchanged"; \
		else \
			echo "installing $$target"; \
			$(INSTALL) "$$file" "$$target"; \
		fi; \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	for ext in int int2 int3; do \
		dir="$(INSTALL_INT_DIR)/Mercury/$${ext}s"; \
		rm -rf "$$dir"; \
		$(LN_S) .. "$$dir" || { \
			{ [ -d "$$dir" ] || \
			$(INSTALL_MKDIR) "$$dir"; } && \
			$(INSTALL) "$(INSTALL_INT_DIR)"/*.$$ext "$$dir"; \
		} || exit 1; \
	done

.PHONY : libmdice.install_opts
libmdice.install_opts : 
	@:

.PHONY : libmdice.install_hdrs
libmdice.install_hdrs : $(mdice.mhs) install_lib_dirs
ifeq ($(mdice.mhs),)
	@:
else
	for hdr in $(mdice.mhs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_INC_DIR); \
	done
endif

.PHONY : libmdice.install_grade_hdrs
libmdice.install_grade_hdrs : $(mdice.mihs) install_grade_dirs
ifeq ($(mdice.mihs),)
	@:
else
	for hdr in $(mdice.mihs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_GRADE_INC_DIR); \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	rm -rf $(INSTALL_GRADE_INC_SUBDIR)
	$(LN_S) .. $(INSTALL_GRADE_INC_SUBDIR) || { \
		{ [ -d $(INSTALL_GRADE_INC_SUBDIR) ] || \
			$(INSTALL_MKDIR) $(INSTALL_GRADE_INC_SUBDIR); \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_GRADE_INC_SUBDIR); \
	} || exit 1
	rm -rf $(INSTALL_INT_DIR)/Mercury/mihs
	$(LN_S) .. $(INSTALL_INT_DIR)/Mercury/mihs || { \
		{ [ -d $(INSTALL_INT_DIR)/Mercury/mihs ] || \
			$(INSTALL_MKDIR) \
			$(INSTALL_INT_DIR)/Mercury/mihs; \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_INT_DIR); \
	} || exit 1
endif

.PHONY : mdice.check
mdice.check : $(mdice.errs)

.PHONY : mdice.ints
mdice.ints : $(mdice.dates)

.PHONY : mdice.int3s
mdice.int3s : $(mdice.date3s)

.PHONY : mdice.opts
mdice.opts : $(mdice.optdates)

.PHONY : mdice.trans_opts
mdice.trans_opts : $(mdice.trans_opt_dates)

.PHONY : mdice.ils
mdice.ils : $(mdice.ils)

.PHONY : mdice.javas
mdice.javas : $(mdice.javas)

.PHONY : mdice.classes
mdice.classes : $(mdice.classes)

.PHONY : mdice.all_ints
mdice.all_ints : $(mdice.dates)

.PHONY : mdice.all_int3s
mdice.all_int3s : $(mdice.date3s)

.PHONY : mdice.all_opts
mdice.all_opts : $(mdice.optdates)

.PHONY : mdice.all_trans_opts
mdice.all_trans_opts : $(mdice.trans_opt_dates)

clean_local : mdice.clean
.PHONY : mdice.clean
mdice.clean :
	-echo $(mdice.dirs) | xargs rm -rf 
	-echo $(mdice.cs) mdice_init.c | xargs rm -f
	-echo $(mdice.mihs) | xargs rm -f
	-echo $(mdice.all_os) mdice_init.$O | xargs rm -f
	-echo $(mdice.all_pic_os) mdice_init.pic_o | xargs rm -f
	-echo $(mdice.c_dates) | xargs rm -f
	-echo $(mdice.il_dates) | xargs rm -f
	-echo $(mdice.java_dates) | xargs rm -f
	-echo $(mdice.useds) | xargs rm -f
	-echo $(mdice.ils) | xargs rm -f
	-echo $(mdice.javas) | xargs rm -f
	-echo $(mdice.profs) | xargs rm -f
	-echo $(mdice.errs) | xargs rm -f
	-echo $(mdice.foreign_cs) | xargs rm -f

realclean_local : mdice.realclean
.PHONY : mdice.realclean
mdice.realclean : mdice.clean
	-echo $(mdice.dates) | xargs rm -f
	-echo $(mdice.date0s) | xargs rm -f
	-echo $(mdice.date3s) | xargs rm -f
	-echo $(mdice.optdates) | xargs rm -f
	-echo $(mdice.trans_opt_dates) | xargs rm -f
	-echo $(mdice.ints) | xargs rm -f
	-echo $(mdice.all_int0s) | xargs rm -f
	-echo $(mdice.int3s) | xargs rm -f
	-echo $(mdice.opts) | xargs rm -f
	-echo $(mdice.trans_opts) | xargs rm -f
	-echo $(mdice.analysiss) | xargs rm -f
	-echo $(mdice.requests) | xargs rm -f
	-echo $(mdice.imdgs) | xargs rm -f
	-echo $(mdice.ds) | xargs rm -f
	-echo $(mdice.module_deps) | xargs rm -f
	-echo $(mdice.all_mhs) | xargs rm -f
	-echo $(mdice.all_mihs) | xargs rm -f
	-echo $(mdice.dlls) | xargs rm -f
	-echo $(mdice.foreign_dlls) | xargs rm -f
	-echo $(mdice.classes) | xargs rm -f
	-rm -f mdice$(EXT_FOR_EXE) mdice.init libmdice.$A libmdice.$(EXT_FOR_SHARED_LIB) mdice.jar mdice.dep mdice.dv

