# Automatically generated dependencies for module `mcov'
# generated from source file `mcov.m'
# Generated by the Mercury compiler, version rotd-2009-09-15, configured for i686-pc-linux-gnu.

ifneq ($(EXT_FOR_EXE),)
.PHONY : mcov
mcov : mcov$(EXT_FOR_EXE)
endif
ifeq ($(findstring il,$(GRADE)),il)
mcov : mcov.exe
mcov.exe : $(mcov.dlls) $(mcov.foreign_dlls)
else
 ifeq ($(findstring java,$(GRADE)),java)
mcov : $(mcov.classes)
 else
mcov$(EXT_FOR_EXE) : $(mcov.cs_or_ss) $(mcov.os) mcov_init.$O \
		$(foreach @,mcov,$(ALL_MLOBJS)) \
		$(foreach @,mcov,$(ALL_MLLIBS_DEP))
	$(ML) $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) -- $(ALL_LDFLAGS) -o mcov$(EXT_FOR_EXE) mcov_init.$O \
		$(mcov.os) \
		$(foreach @,mcov,$(ALL_MLOBJS)) $(ALL_MLLIBS)
 endif
endif
.PHONY : libmcov
ifeq ($(findstring il,$(GRADE)),il)
libmcov : $(mcov.dlls) $(mcov.foreign_dlls) \
		$(mcov.ints) $(mcov.int3s) mcov.init

else
 ifeq ($(findstring java,$(GRADE)),java)
libmcov : mcov.jar \
		$(mcov.ints) $(mcov.int3s) mcov.init

 else
libmcov : libmcov.$A libmcov.$(EXT_FOR_SHARED_LIB) \
		$(mcov.ints) $(mcov.int3s) mcov.init

 endif
endif
ifneq ($(EXT_FOR_SHARED_LIB),$A)
libmcov.$(EXT_FOR_SHARED_LIB) : $(mcov.cs_or_ss) $(mcov.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mcov,$(ALL_MLOBJS))) \
		$(foreach @,mcov,$(ALL_MLLIBS_DEP))
	$(ML) --make-shared-lib $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) --  $(ALL_LD_LIBFLAGS) -o libmcov.$(EXT_FOR_SHARED_LIB) \
		$(mcov.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mcov,$(ALL_MLOBJS))) $(ALL_MLLIBS)
endif

libmcov.$A : $(mcov.cs_or_ss) $(mcov.os) \
		$(foreach @,mcov,$(ALL_MLOBJS))
	rm -f libmcov.$A
	$(AR) $(ALL_ARFLAGS) $(AR_LIBFILE_OPT)libmcov.$A $(mcov.os) \
		$(foreach @,mcov,$(ALL_MLOBJS))
	$(RANLIB) $(ALL_RANLIBFLAGS) libmcov.$A

mcov.jar : $(mcov.classes)
	$(JAR) $(JAR_CREATE_FLAGS) mcov.jar $(mcov.classes)

mcov.init : mcov.dep $(mcov.cs)
	echo > mcov.init
	$(MKLIBINIT) $(mcov.cs) >> mcov.init
	$(EXTRA_INIT_COMMAND) >> mcov.init
force-mcov_init :

mcov_init.c : force-mcov_init $(mcov.cs)
	@$(C2INIT) $(ALL_GRADEFLAGS) $(ALL_C2INITFLAGS) --init-c-file mcov_init.c.tmp $(mcov.init_cs) $(ALL_C2INITARGS)
	@mercury_update_interface mcov_init.c

.PHONY : libmcov.install_ints
libmcov.install_ints : $(mcov.ints) $(mcov.int3s)  install_lib_dirs
	files="$(mcov.ints) $(mcov.int3s) "; \
	for file in $$files; do \
		target="$(INSTALL_INT_DIR)/`basename $$file`"; \
		if cmp -s "$$file" "$$target"; then \
			echo "$$target unchanged"; \
		else \
			echo "installing $$target"; \
			$(INSTALL) "$$file" "$$target"; \
		fi; \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	for ext in int int2 int3; do \
		dir="$(INSTALL_INT_DIR)/Mercury/$${ext}s"; \
		rm -rf "$$dir"; \
		$(LN_S) .. "$$dir" || { \
			{ [ -d "$$dir" ] || \
			$(INSTALL_MKDIR) "$$dir"; } && \
			$(INSTALL) "$(INSTALL_INT_DIR)"/*.$$ext "$$dir"; \
		} || exit 1; \
	done

.PHONY : libmcov.install_opts
libmcov.install_opts : 
	@:

.PHONY : libmcov.install_hdrs
libmcov.install_hdrs : $(mcov.mhs) install_lib_dirs
ifeq ($(mcov.mhs),)
	@:
else
	for hdr in $(mcov.mhs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_INC_DIR); \
	done
endif

.PHONY : libmcov.install_grade_hdrs
libmcov.install_grade_hdrs : $(mcov.mihs) install_grade_dirs
ifeq ($(mcov.mihs),)
	@:
else
	for hdr in $(mcov.mihs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_GRADE_INC_DIR); \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	rm -rf $(INSTALL_GRADE_INC_SUBDIR)
	$(LN_S) .. $(INSTALL_GRADE_INC_SUBDIR) || { \
		{ [ -d $(INSTALL_GRADE_INC_SUBDIR) ] || \
			$(INSTALL_MKDIR) $(INSTALL_GRADE_INC_SUBDIR); \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_GRADE_INC_SUBDIR); \
	} || exit 1
	rm -rf $(INSTALL_INT_DIR)/Mercury/mihs
	$(LN_S) .. $(INSTALL_INT_DIR)/Mercury/mihs || { \
		{ [ -d $(INSTALL_INT_DIR)/Mercury/mihs ] || \
			$(INSTALL_MKDIR) \
			$(INSTALL_INT_DIR)/Mercury/mihs; \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_INT_DIR); \
	} || exit 1
endif

.PHONY : mcov.check
mcov.check : $(mcov.errs)

.PHONY : mcov.ints
mcov.ints : $(mcov.dates)

.PHONY : mcov.int3s
mcov.int3s : $(mcov.date3s)

.PHONY : mcov.opts
mcov.opts : $(mcov.optdates)

.PHONY : mcov.trans_opts
mcov.trans_opts : $(mcov.trans_opt_dates)

.PHONY : mcov.ss
mcov.ss : $(mcov.ss)

.PHONY : mcov.pic_ss
mcov.pic_ss : $(mcov.pic_ss)

.PHONY : mcov.ils
mcov.ils : $(mcov.ils)

.PHONY : mcov.javas
mcov.javas : $(mcov.javas)

.PHONY : mcov.classes
mcov.classes : $(mcov.classes)

clean_local : mcov.clean
.PHONY : mcov.clean
mcov.clean :
	-echo $(mcov.dirs) | xargs rm -rf 
	-echo $(mcov.cs) mcov_init.c | xargs rm -f
	-echo $(mcov.mihs) | xargs rm -f
	-echo $(mcov.all_ss) mcov_init.s | xargs rm -f
	-echo $(mcov.all_pic_ss) mcov_init.s | xargs rm -f
	-echo $(mcov.all_os) mcov_init.$O | xargs rm -f
	-echo $(mcov.all_pic_os) mcov_init.pic_o | xargs rm -f
	-echo $(mcov.c_dates) | xargs rm -f
	-echo $(mcov.il_dates) | xargs rm -f
	-echo $(mcov.java_dates) | xargs rm -f
	-echo $(mcov.all_s_dates) | xargs rm -f
	-echo $(mcov.all_pic_s_dates) | xargs rm -f
	-echo $(mcov.useds) | xargs rm -f
	-echo $(mcov.ils) | xargs rm -f
	-echo $(mcov.javas) | xargs rm -f
	-echo $(mcov.profs) | xargs rm -f
	-echo $(mcov.errs) | xargs rm -f
	-echo $(mcov.foreign_cs) | xargs rm -f

realclean_local : mcov.realclean
.PHONY : mcov.realclean
mcov.realclean : mcov.clean
	-echo $(mcov.dates) | xargs rm -f
	-echo $(mcov.date0s) | xargs rm -f
	-echo $(mcov.date3s) | xargs rm -f
	-echo $(mcov.optdates) | xargs rm -f
	-echo $(mcov.trans_opt_dates) | xargs rm -f
	-echo $(mcov.ints) | xargs rm -f
	-echo $(mcov.all_int0s) | xargs rm -f
	-echo $(mcov.int3s) | xargs rm -f
	-echo $(mcov.opts) | xargs rm -f
	-echo $(mcov.trans_opts) | xargs rm -f
	-echo $(mcov.analysiss) | xargs rm -f
	-echo $(mcov.requests) | xargs rm -f
	-echo $(mcov.imdgs) | xargs rm -f
	-echo $(mcov.ds) | xargs rm -f
	-echo $(mcov.module_deps) | xargs rm -f
	-echo $(mcov.all_mhs) | xargs rm -f
	-echo $(mcov.all_mihs) | xargs rm -f
	-echo $(mcov.dlls) | xargs rm -f
	-echo $(mcov.foreign_dlls) | xargs rm -f
	-echo $(mcov.classes) | xargs rm -f
	-rm -f mcov$(EXT_FOR_EXE) mcov.init libmcov.$A libmcov.$(EXT_FOR_SHARED_LIB) mcov.jar mcov.dep mcov.dv

