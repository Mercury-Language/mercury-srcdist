# vim: ts=8 sw=8 noexpandtab ft=make

# Automatically generated dependency variables for module `mcov'
# generated from source file `mcov.m'
# Generated by the Mercury compiler, version rotd-2017-06-22,
# configured for x86_64-apple-darwin13.4.0.

ifeq (x,y)
# Automatically generated dependency variables for module `mcov'
# generated from source file `mcov.m'
# Generated by the Mercury compiler, version rotd-2017-06-22,
# configured for x86_64-apple-darwin13.4.0.
endif

mcov.ms = \
	builtin_modules.m \
	feedback.m \
	feedback.automatic_parallelism.m \
	mcov.m \
	mdbcomp.m \
	mdbcomp.goal_path.m \
	prim_data.m \
	program_representation.m \
	rtti_access.m \
	shared_utilities.m \
	slice_and_dice.m \
	sym_name.m \
	trace_counts.m
ifeq (x,y)
mcov.ms = \
	builtin_modules.m \
	feedback.m \
	feedback.automatic_parallelism.m \
	mcov.m \
	mdbcomp.m \
	mdbcomp.goal_path.m \
	prim_data.m \
	program_representation.m \
	rtti_access.m \
	shared_utilities.m \
	slice_and_dice.m \
	sym_name.m \
	trace_counts.m
endif

mcov.errs = \
	builtin_modules.err \
	feedback.err \
	feedback.automatic_parallelism.err \
	mcov.err \
	mdbcomp.err \
	mdbcomp.goal_path.err \
	prim_data.err \
	program_representation.err \
	rtti_access.err \
	shared_utilities.err \
	slice_and_dice.err \
	sym_name.err \
	trace_counts.err
ifeq (x,y)
mcov.errs = \
	builtin_modules.err \
	feedback.err \
	feedback.automatic_parallelism.err \
	mcov.err \
	mdbcomp.err \
	mdbcomp.goal_path.err \
	prim_data.err \
	program_representation.err \
	rtti_access.err \
	shared_utilities.err \
	slice_and_dice.err \
	sym_name.err \
	trace_counts.err
endif

mcov.mods = \
	mcov \
	mdbcomp \
	mdbcomp.builtin_modules \
	mdbcomp.feedback \
	mdbcomp.feedback.automatic_parallelism \
	mdbcomp.goal_path \
	mdbcomp.prim_data \
	mdbcomp.program_representation \
	mdbcomp.rtti_access \
	mdbcomp.shared_utilities \
	mdbcomp.slice_and_dice \
	mdbcomp.sym_name \
	mdbcomp.trace_counts
ifeq (x,y)
mcov.mods = \
	mcov \
	mdbcomp \
	mdbcomp.builtin_modules \
	mdbcomp.feedback \
	mdbcomp.feedback.automatic_parallelism \
	mdbcomp.goal_path \
	mdbcomp.prim_data \
	mdbcomp.program_representation \
	mdbcomp.rtti_access \
	mdbcomp.shared_utilities \
	mdbcomp.slice_and_dice \
	mdbcomp.sym_name \
	mdbcomp.trace_counts
endif

mcov.parent_mods = \
	mdbcomp \
	mdbcomp.feedback
ifeq (x,y)
mcov.parent_mods = \
	mdbcomp \
	mdbcomp.feedback
endif

mcov.foreign =

ifeq (x,y)
mcov.foreign =
endif

mcov.foreign_cs = 
ifeq (x,y)
mcov.foreign_cs =
endif

mcov.foreign_dlls = $(mcov.foreign:%=$(dlls_subdir)%.dll)
ifeq (x,y)
mcov.foreign_dlls = $(mcov.foreign:%=$(dlls_subdir)%.dll)
endif

mcov.init_cs = $(mcov.mods:%=$(cs_subdir)%.c)
ifeq (x,y)
mcov.init_cs = $(mcov.mods:%=$(cs_subdir)%.c)
endif

mcov.cs = $(mcov.init_cs) 
ifeq (x,y)
mcov.cs = $(mcov.init_cs)
endif

mcov.dlls = $(mcov.mods:%=$(dlls_subdir)%.dll)
ifeq (x,y)
mcov.dlls = $(mcov.mods:%=$(dlls_subdir)%.dll)
endif

mcov.all_os = $(mcov.mods:%=$(os_subdir)%.$O)
ifeq (x,y)
mcov.all_os = $(mcov.mods:%=$(os_subdir)%.$O)
endif

mcov.all_pic_os = $(mcov.mods:%=$(os_subdir)%.$(EXT_FOR_PIC_OBJECTS))
ifeq (x,y)
mcov.all_pic_os = $(mcov.mods:%=$(os_subdir)%.$(EXT_FOR_PIC_OBJECTS))
endif

mcov.os = $(mcov.all_os)
ifeq (x,y)
mcov.os = $(mcov.all_os)
endif

mcov.pic_os = $(mcov.all_pic_os)
ifeq (x,y)
mcov.pic_os = $(mcov.all_pic_os)
endif

mcov.useds = $(mcov.mods:%=$(useds_subdir)%.used)
ifeq (x,y)
mcov.useds = $(mcov.mods:%=$(used_subdir)%.used)
endif

mcov.javas = $(mcov.mods:%=$(javas_subdir)%.java)
ifeq (x,y)
mcov.javas = $(mcov.mods:%=$(javas_subdir)%.java)
endif

mcov.classes = $(mcov.mods:%=$(classes_subdir)%.class) $(wildcard $(mcov.mods:%=$(classes_subdir)%\$$*.class))
ifeq (x,y)
mcov.classes = \
	$(mcov.mods:%=$(classes_subdir)%.class) \
	$(wildcard $(mcov.mods:%=$(classes_subdir)%\$$*.class))
endif

mcov.dirs = $(mcov.mods:%=$(dirs_subdir)%.dir)
ifeq (x,y)
mcov.dirs = $(mcov.mods:%=$(dirs_subdir)%.dir)
endif

mcov.dir_os = $(mcov.mods:%=$(dirs_subdir)%.dir/*.$O)
ifeq (x,y)
mcov.dir_os = $(mcov.mods:%=$(dirs_subdir)%.dir/*.$O)
endif

mcov.dates = $(mcov.mods:%=$(dates_subdir)%.date)
ifeq (x,y)
mcov.dates = $(mcov.mods:%=$(dates_subdir)%.date)
endif

mcov.date0s = $(mcov.mods:%=$(date0s_subdir)%.date0)
ifeq (x,y)
mcov.date0s = $(mcov.mods:%=$(date0s_subdir)%.date0)
endif

mcov.date3s = $(mcov.mods:%=$(date3s_subdir)%.date3)
ifeq (x,y)
mcov.date3s = $(mcov.mods:%=$(date3s_subdir)%.date3)
endif

mcov.optdates = $(mcov.mods:%=$(optdates_subdir)%.optdate)
ifeq (x,y)
mcov.optdates = $(mcov.mods:%=$(optdates_subdir)%.optdate)
endif

mcov.trans_opt_dates = $(mcov.mods:%=$(trans_opt_dates_subdir)%.trans_opt_date)
ifeq (x,y)
mcov.trans_opt_dates = $(mcov.mods:%=$(trans_opt_dates_subdir)%.trans_opt_date)
endif

mcov.c_dates = $(mcov.mods:%=$(c_dates_subdir)%.c_date)
ifeq (x,y)
mcov.c_dates = $(mcov.mods:%=$(c_dates_subdir)%.c_date)
endif

mcov.java_dates = $(mcov.mods:%=$(java_dates_subdir)%.java_date)
ifeq (x,y)
mcov.java_dates = $(mcov.mods:%=$(java_dates_subdir)%.java_date)
endif

mcov.ds = $(mcov.mods:%=$(ds_subdir)%.d)
ifeq (x,y)
mcov.ds = $(mcov.mods:%=$(ds_subdir)%.d)
endif

mcov.module_deps = $(mcov.mods:%=$(module_deps_subdir)%.module_dep)
ifeq (x,y)
mcov.module_deps = $(mcov.mods:%=$(module_deps_subdir)%.module_dep)
endif

mcov.mihs = $(mcov.mods:%=$(mihs_subdir)%.mih)
ifeq (x,y)
mcov.mihs = $(mcov.mods:%=$(mihs_subdir)%.mih)
endif

mcov.mhs = $(mcov.mods:%=%.mh)
ifeq (x,y)
mcov.mhs = $(mcov.mods:%=%.mh)
endif

mcov.all_mihs = $(mcov.mods:%=$(mihs_subdir)%.mih)
ifeq (x,y)
mcov.all_mihs = $(mcov.mods:%=$(mihs_subdir)%.mih)
endif

mcov.all_mhs = $(mcov.mods:%=%.mh)
ifeq (x,y)
mcov.all_mhs = $(mcov.mods:%=%.mh)
endif

mcov.ints = $(mcov.mods:%=$(ints_subdir)%.int) $(mcov.mods:%=$(int2s_subdir)%.int2)
ifeq (x,y)
mcov.ints = \
	$(mcov.mods:%=$(ints_subdir)%.int) \
	$(mcov.mods:%=$(int2s_subdir)%.int2)
endif

mcov.int0s = $(mcov.parent_mods:%=$(int0s_subdir)%.int0)
ifeq (x,y)
mcov.int0s = $(mcov.parent_mods:%=$(int0s_subdir)%.int0)
endif

mcov.all_int0s = $(mcov.mods:%=$(int0s_subdir)%.int0)
ifeq (x,y)
mcov.all_int0s = $(mcov.mods:%=$(int0s_subdir)%.int0)
endif

mcov.int3s = $(mcov.mods:%=$(int3s_subdir)%.int3)
ifeq (x,y)
mcov.int3s = $(mcov.mods:%=$(int3s_subdir)%.int3)
endif

mcov.opts = $(mcov.mods:%=$(opts_subdir)%.opt)
ifeq (x,y)
mcov.opts = $(mcov.mods:%=$(opts_subdir)%.opt)
endif

mcov.trans_opts = $(mcov.mods:%=$(trans_opts_subdir)%.trans_opt)
ifeq (x,y)
mcov.trans_opts = $(mcov.mods:%=$(trans_opts_subdir)%.trans_opt)
endif

mcov.analysiss = $(mcov.mods:%=$(analysiss_subdir)%.analysis)
ifeq (x,y)
mcov.analysiss = $(mcov.mods:%=$(analysiss_subdir)%.analysis)
endif

mcov.requests = $(mcov.mods:%=$(requests_subdir)%.request)
ifeq (x,y)
mcov.requests = $(mcov.mods:%=$(requests_subdir)%.request)
endif

mcov.imdgs = $(mcov.mods:%=$(imdgs_subdir)%.imdg)
ifeq (x,y)
mcov.imdgs = $(mcov.mods:%=$(imdgs_subdir)%.imdg)
endif

mcov.profs = $(mcov.mods:%=%.prof)

ifeq (x,y)
mcov.profs = $(mcov.mods:%=%.prof)
endif

