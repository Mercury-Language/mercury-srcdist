# vim: ts=8 sw=8 noexpandtab ft=make

# Automatically generated dependency variables for
# module `mslice' in source file `mslice.m'.
# Generated by Mercury compiler version rotd-2024-05-18
# configured for x86_64-pc-linux-gnu.

mslice.ms = \
	builtin_modules.m \
	feedback.m \
	feedback.automatic_parallelism.m \
	mdbcomp.m \
	mdbcomp.goal_path.m \
	mslice.m \
	prim_data.m \
	program_representation.m \
	rtti_access.m \
	shared_utilities.m \
	slice_and_dice.m \
	sym_name.m \
	trace_counts.m

mslice.dep_errs = \
	builtin_modules.dep_err \
	feedback.dep_err \
	feedback.automatic_parallelism.dep_err \
	mdbcomp.dep_err \
	mdbcomp.goal_path.dep_err \
	mslice.dep_err \
	prim_data.dep_err \
	program_representation.dep_err \
	rtti_access.dep_err \
	shared_utilities.dep_err \
	slice_and_dice.dep_err \
	sym_name.dep_err \
	trace_counts.dep_err

mslice.errs = \
	builtin_modules.err \
	feedback.err \
	feedback.automatic_parallelism.err \
	mdbcomp.err \
	mdbcomp.goal_path.err \
	mslice.err \
	prim_data.err \
	program_representation.err \
	rtti_access.err \
	shared_utilities.err \
	slice_and_dice.err \
	sym_name.err \
	trace_counts.err

mslice.mods = \
	mdbcomp \
	mdbcomp.builtin_modules \
	mdbcomp.feedback \
	mdbcomp.feedback.automatic_parallelism \
	mdbcomp.goal_path \
	mdbcomp.prim_data \
	mdbcomp.program_representation \
	mdbcomp.rtti_access \
	mdbcomp.shared_utilities \
	mdbcomp.slice_and_dice \
	mdbcomp.sym_name \
	mdbcomp.trace_counts \
	mslice

mslice.parent_mods = \
	mdbcomp \
	mdbcomp.feedback

mslice.foreign =

mslice.foreign_cs =

mslice.foreign_dlls = $(mslice.foreign:%=$(dlls_subdir)%.dll)

mslice.init_cs = $(mslice.mods:%=$(cs_subdir)%.c)

mslice.all_cs = $(mslice.mods:%=$(cs_subdir)%.c)

mslice.dlls = $(mslice.mods:%=$(dlls_subdir)%.dll)

mslice.all_os = $(mslice.mods:%=$(os_subdir)%.$O)

mslice.all_pic_os = $(mslice.mods:%=$(os_subdir)%.$(EXT_FOR_PIC_OBJECTS))

mslice.useds = $(mslice.mods:%=$(useds_subdir)%.used)

mslice.all_javas = $(mslice.mods:%=$(javas_subdir)%.java)

ifeq ($(findstring java,$(GRADE)),java)

mslice.classes = \
	$(mslice.mods:%=$(classes_subdir)%.class) \
	$(wildcard $(mslice.mods:%=$(classes_subdir)%\$$*.class))

else

mslice.classes = 

endif # conditional fragment

mslice.all_css = $(mslice.mods:%=$(css_subdir)%.cs)

mslice.dates = $(mslice.mods:%=$(dates_subdir)%.date)

mslice.date0s = $(mslice.mods:%=$(date0s_subdir)%.date0)

mslice.date3s = $(mslice.mods:%=$(date3s_subdir)%.date3)

mslice.optdates = $(mslice.mods:%=$(optdates_subdir)%.optdate)

mslice.trans_opt_dates = $(mslice.mods:%=$(trans_opt_dates_subdir)%.trans_opt_date)

mslice.c_dates = $(mslice.mods:%=$(c_dates_subdir)%.c_date)

mslice.java_dates = $(mslice.mods:%=$(java_dates_subdir)%.java_date)

mslice.cs_dates = $(mslice.mods:%=$(cs_dates_subdir)%.cs_date)

mslice.ds = $(mslice.mods:%=$(ds_subdir)%.d)

mslice.module_deps = $(mslice.mods:%=$(module_deps_subdir)%.module_dep)

mslice.mihs = $(mslice.mods:%=$(mihs_subdir)%.mih)

mslice.mhs = $(mslice.mods:%=%.mh)

mslice.mihs_to_clean = $(mslice.mods:%=$(mihs_subdir)%.mih)

mslice.all_mihs = $(mslice.mods:%=$(mihs_subdir)%.mih)

mslice.mhs_to_clean = $(mslice.mods:%=%.mh)

mslice.all_mhs = $(mslice.mods:%=%.mh)

mslice.ints = \
	$(mslice.mods:%=$(ints_subdir)%.int) \
	$(mslice.mods:%=$(int2s_subdir)%.int2)

mslice.int0s = $(mslice.parent_mods:%=$(int0s_subdir)%.int0)

mslice.int0s_to_clean = $(mslice.mods:%=$(int0s_subdir)%.int0)

mslice.all_int0s = $(mslice.mods:%=$(int0s_subdir)%.int0)

mslice.int3s = $(mslice.mods:%=$(int3s_subdir)%.int3)

mslice.all_opts = $(mslice.mods:%=$(opts_subdir)%.opt)

mslice.opts = $(mslice.mods:%=$(opts_subdir)%.opt)

mslice.all_trans_opts = $(mslice.mods:%=$(trans_opts_subdir)%.trans_opt)

mslice.trans_opts = $(mslice.mods:%=$(trans_opts_subdir)%.trans_opt)

mslice.analyses = $(mslice.mods:%=$(analyses_subdir)%.analysis)

mslice.requests = $(mslice.mods:%=$(requests_subdir)%.request)

mslice.imdgs = $(mslice.mods:%=$(imdgs_subdir)%.imdg)

mslice.profs = $(mslice.mods:%=%.prof)

