# vim: ts=8 sw=8 noexpandtab ft=make

# Automatically generated dependency variables for module `mdprof_cgi'
# generated from source file `mdprof_cgi.m'
# Generated by the Mercury compiler, version rotd-2017-06-12,
# configured for x86_64-apple-darwin13.4.0.

ifeq (x,y)
# Automatically generated dependency variables for module `mdprof_cgi'
# generated from source file `mdprof_cgi.m'
# Generated by the Mercury compiler, version rotd-2017-06-12,
# configured for x86_64-apple-darwin13.4.0.
endif

mdprof_cgi.ms = \
	analysis_utils.m \
	apply_exclusion.m \
	array_util.m \
	builtin_modules.m \
	callgraph.m \
	canonical.m \
	cliques.m \
	conf.m \
	coverage.m \
	create_report.m \
	dense_bitset.m \
	display.m \
	display_report.m \
	dump.m \
	exclude.m \
	feedback.m \
	feedback.automatic_parallelism.m \
	html_format.m \
	interface.m \
	io_combinator.m \
	mdbcomp.m \
	mdbcomp.goal_path.m \
	mdprof_cgi.m \
	measurement_units.m \
	measurements.m \
	message.m \
	prim_data.m \
	profile.m \
	program_representation.m \
	program_representation_utils.m \
	query.m \
	read_profile.m \
	recursion_patterns.m \
	report.m \
	rtti_access.m \
	shared_utilities.m \
	slice_and_dice.m \
	startup.m \
	sym_name.m \
	timeout.m \
	top_procs.m \
	trace_counts.m \
	util.m \
	var_use_analysis.m
ifeq (x,y)
mdprof_cgi.ms = \
	analysis_utils.m \
	apply_exclusion.m \
	array_util.m \
	builtin_modules.m \
	callgraph.m \
	canonical.m \
	cliques.m \
	conf.m \
	coverage.m \
	create_report.m \
	dense_bitset.m \
	display.m \
	display_report.m \
	dump.m \
	exclude.m \
	feedback.m \
	feedback.automatic_parallelism.m \
	html_format.m \
	interface.m \
	io_combinator.m \
	mdbcomp.m \
	mdbcomp.goal_path.m \
	mdprof_cgi.m \
	measurement_units.m \
	measurements.m \
	message.m \
	prim_data.m \
	profile.m \
	program_representation.m \
	program_representation_utils.m \
	query.m \
	read_profile.m \
	recursion_patterns.m \
	report.m \
	rtti_access.m \
	shared_utilities.m \
	slice_and_dice.m \
	startup.m \
	sym_name.m \
	timeout.m \
	top_procs.m \
	trace_counts.m \
	util.m \
	var_use_analysis.m
endif

mdprof_cgi.errs = \
	analysis_utils.err \
	apply_exclusion.err \
	array_util.err \
	builtin_modules.err \
	callgraph.err \
	canonical.err \
	cliques.err \
	conf.err \
	coverage.err \
	create_report.err \
	dense_bitset.err \
	display.err \
	display_report.err \
	dump.err \
	exclude.err \
	feedback.err \
	feedback.automatic_parallelism.err \
	html_format.err \
	interface.err \
	io_combinator.err \
	mdbcomp.err \
	mdbcomp.goal_path.err \
	mdprof_cgi.err \
	measurement_units.err \
	measurements.err \
	message.err \
	prim_data.err \
	profile.err \
	program_representation.err \
	program_representation_utils.err \
	query.err \
	read_profile.err \
	recursion_patterns.err \
	report.err \
	rtti_access.err \
	shared_utilities.err \
	slice_and_dice.err \
	startup.err \
	sym_name.err \
	timeout.err \
	top_procs.err \
	trace_counts.err \
	util.err \
	var_use_analysis.err
ifeq (x,y)
mdprof_cgi.errs = \
	analysis_utils.err \
	apply_exclusion.err \
	array_util.err \
	builtin_modules.err \
	callgraph.err \
	canonical.err \
	cliques.err \
	conf.err \
	coverage.err \
	create_report.err \
	dense_bitset.err \
	display.err \
	display_report.err \
	dump.err \
	exclude.err \
	feedback.err \
	feedback.automatic_parallelism.err \
	html_format.err \
	interface.err \
	io_combinator.err \
	mdbcomp.err \
	mdbcomp.goal_path.err \
	mdprof_cgi.err \
	measurement_units.err \
	measurements.err \
	message.err \
	prim_data.err \
	profile.err \
	program_representation.err \
	program_representation_utils.err \
	query.err \
	read_profile.err \
	recursion_patterns.err \
	report.err \
	rtti_access.err \
	shared_utilities.err \
	slice_and_dice.err \
	startup.err \
	sym_name.err \
	timeout.err \
	top_procs.err \
	trace_counts.err \
	util.err \
	var_use_analysis.err
endif

mdprof_cgi.mods = \
	analysis_utils \
	apply_exclusion \
	array_util \
	callgraph \
	canonical \
	cliques \
	conf \
	coverage \
	create_report \
	dense_bitset \
	display \
	display_report \
	dump \
	exclude \
	html_format \
	interface \
	io_combinator \
	mdbcomp \
	mdbcomp.builtin_modules \
	mdbcomp.feedback \
	mdbcomp.feedback.automatic_parallelism \
	mdbcomp.goal_path \
	mdbcomp.prim_data \
	mdbcomp.program_representation \
	mdbcomp.rtti_access \
	mdbcomp.shared_utilities \
	mdbcomp.slice_and_dice \
	mdbcomp.sym_name \
	mdbcomp.trace_counts \
	mdprof_cgi \
	measurement_units \
	measurements \
	message \
	profile \
	program_representation_utils \
	query \
	read_profile \
	recursion_patterns \
	report \
	startup \
	timeout \
	top_procs \
	util \
	var_use_analysis
ifeq (x,y)
mdprof_cgi.mods = \
	analysis_utils \
	apply_exclusion \
	array_util \
	callgraph \
	canonical \
	cliques \
	conf \
	coverage \
	create_report \
	dense_bitset \
	display \
	display_report \
	dump \
	exclude \
	html_format \
	interface \
	io_combinator \
	mdbcomp \
	mdbcomp.builtin_modules \
	mdbcomp.feedback \
	mdbcomp.feedback.automatic_parallelism \
	mdbcomp.goal_path \
	mdbcomp.prim_data \
	mdbcomp.program_representation \
	mdbcomp.rtti_access \
	mdbcomp.shared_utilities \
	mdbcomp.slice_and_dice \
	mdbcomp.sym_name \
	mdbcomp.trace_counts \
	mdprof_cgi \
	measurement_units \
	measurements \
	message \
	profile \
	program_representation_utils \
	query \
	read_profile \
	recursion_patterns \
	report \
	startup \
	timeout \
	top_procs \
	util \
	var_use_analysis
endif

mdprof_cgi.parent_mods = \
	mdbcomp \
	mdbcomp.feedback
ifeq (x,y)
mdprof_cgi.parent_mods = \
	mdbcomp \
	mdbcomp.feedback
endif

mdprof_cgi.foreign =

ifeq (x,y)
mdprof_cgi.foreign =
endif

mdprof_cgi.foreign_cs = 
ifeq (x,y)
mdprof_cgi.foreign_cs =
endif

mdprof_cgi.foreign_dlls = $(mdprof_cgi.foreign:%=$(dlls_subdir)%.dll)
ifeq (x,y)
mdprof_cgi.foreign_dlls = $(mdprof_cgi.foreign:%=$(dlls_subdir)%.dll)
endif

mdprof_cgi.init_cs = $(mdprof_cgi.mods:%=$(cs_subdir)%.c)
ifeq (x,y)
mdprof_cgi.init_cs = $(mdprof_cgi.mods:%=$(cs_subdir)%.c)
endif

mdprof_cgi.cs = $(mdprof_cgi.init_cs) 
ifeq (x,y)
mdprof_cgi.cs = $(mdprof_cgi.init_cs)
endif

mdprof_cgi.dlls = $(mdprof_cgi.mods:%=$(dlls_subdir)%.dll)
ifeq (x,y)
mdprof_cgi.dlls = $(mdprof_cgi.mods:%=$(dlls_subdir)%.dll)
endif

mdprof_cgi.all_os = $(mdprof_cgi.mods:%=$(os_subdir)%.$O)
ifeq (x,y)
mdprof_cgi.all_os = $(mdprof_cgi.mods:%=$(os_subdir)%.$O)
endif

mdprof_cgi.all_pic_os = $(mdprof_cgi.mods:%=$(os_subdir)%.$(EXT_FOR_PIC_OBJECTS))
ifeq (x,y)
mdprof_cgi.all_pic_os = $(mdprof_cgi.mods:%=$(os_subdir)%.$(EXT_FOR_PIC_OBJECTS))
endif

mdprof_cgi.os = $(mdprof_cgi.all_os)
ifeq (x,y)
mdprof_cgi.os = $(mdprof_cgi.all_os)
endif

mdprof_cgi.pic_os = $(mdprof_cgi.all_pic_os)
ifeq (x,y)
mdprof_cgi.pic_os = $(mdprof_cgi.all_pic_os)
endif

mdprof_cgi.useds = $(mdprof_cgi.mods:%=$(useds_subdir)%.used)
ifeq (x,y)
mdprof_cgi.useds = $(mdprof_cgi.mods:%=$(used_subdir)%.used)
endif

mdprof_cgi.javas = $(mdprof_cgi.mods:%=$(javas_subdir)%.java)
ifeq (x,y)
mdprof_cgi.javas = $(mdprof_cgi.mods:%=$(javas_subdir)%.java)
endif

mdprof_cgi.classes = $(mdprof_cgi.mods:%=$(classes_subdir)%.class) $(wildcard $(mdprof_cgi.mods:%=$(classes_subdir)%\$$*.class))
ifeq (x,y)
mdprof_cgi.classes = \
	$(mdprof_cgi.mods:%=$(classes_subdir)%.class) \
	$(wildcard $(mdprof_cgi.mods:%=$(classes_subdir)%\$$*.class))
endif

mdprof_cgi.dirs = $(mdprof_cgi.mods:%=$(dirs_subdir)%.dir)
ifeq (x,y)
mdprof_cgi.dirs = $(mdprof_cgi.mods:%=$(dirs_subdir)%.dir)
endif

mdprof_cgi.dir_os = $(mdprof_cgi.mods:%=$(dirs_subdir)%.dir/*.$O)
ifeq (x,y)
mdprof_cgi.dir_os = $(mdprof_cgi.mods:%=$(dirs_subdir)%.dir/*.$O)
endif

mdprof_cgi.dates = $(mdprof_cgi.mods:%=$(dates_subdir)%.date)
ifeq (x,y)
mdprof_cgi.dates = $(mdprof_cgi.mods:%=$(dates_subdir)%.date)
endif

mdprof_cgi.date0s = $(mdprof_cgi.mods:%=$(date0s_subdir)%.date0)
ifeq (x,y)
mdprof_cgi.date0s = $(mdprof_cgi.mods:%=$(date0s_subdir)%.date0)
endif

mdprof_cgi.date3s = $(mdprof_cgi.mods:%=$(date3s_subdir)%.date3)
ifeq (x,y)
mdprof_cgi.date3s = $(mdprof_cgi.mods:%=$(date3s_subdir)%.date3)
endif

mdprof_cgi.optdates = $(mdprof_cgi.mods:%=$(optdates_subdir)%.optdate)
ifeq (x,y)
mdprof_cgi.optdates = $(mdprof_cgi.mods:%=$(optdates_subdir)%.optdate)
endif

mdprof_cgi.trans_opt_dates = $(mdprof_cgi.mods:%=$(trans_opt_dates_subdir)%.trans_opt_date)
ifeq (x,y)
mdprof_cgi.trans_opt_dates = $(mdprof_cgi.mods:%=$(trans_opt_dates_subdir)%.trans_opt_date)
endif

mdprof_cgi.c_dates = $(mdprof_cgi.mods:%=$(c_dates_subdir)%.c_date)
ifeq (x,y)
mdprof_cgi.c_dates = $(mdprof_cgi.mods:%=$(c_dates_subdir)%.c_date)
endif

mdprof_cgi.java_dates = $(mdprof_cgi.mods:%=$(java_dates_subdir)%.java_date)
ifeq (x,y)
mdprof_cgi.java_dates = $(mdprof_cgi.mods:%=$(java_dates_subdir)%.java_date)
endif

mdprof_cgi.ds = $(mdprof_cgi.mods:%=$(ds_subdir)%.d)
ifeq (x,y)
mdprof_cgi.ds = $(mdprof_cgi.mods:%=$(ds_subdir)%.d)
endif

mdprof_cgi.module_deps = $(mdprof_cgi.mods:%=$(module_deps_subdir)%.module_dep)
ifeq (x,y)
mdprof_cgi.module_deps = $(mdprof_cgi.mods:%=$(module_deps_subdir)%.module_dep)
endif

mdprof_cgi.mihs = $(mdprof_cgi.mods:%=$(mihs_subdir)%.mih)
ifeq (x,y)
mdprof_cgi.mihs = $(mdprof_cgi.mods:%=$(mihs_subdir)%.mih)
endif

mdprof_cgi.mhs = $(mdprof_cgi.mods:%=%.mh)
ifeq (x,y)
mdprof_cgi.mhs = $(mdprof_cgi.mods:%=%.mh)
endif

mdprof_cgi.all_mihs = $(mdprof_cgi.mods:%=$(mihs_subdir)%.mih)
ifeq (x,y)
mdprof_cgi.all_mihs = $(mdprof_cgi.mods:%=$(mihs_subdir)%.mih)
endif

mdprof_cgi.all_mhs = $(mdprof_cgi.mods:%=%.mh)
ifeq (x,y)
mdprof_cgi.all_mhs = $(mdprof_cgi.mods:%=%.mh)
endif

mdprof_cgi.ints = $(mdprof_cgi.mods:%=$(ints_subdir)%.int) $(mdprof_cgi.mods:%=$(int2s_subdir)%.int2)
ifeq (x,y)
mdprof_cgi.ints = \
	$(mdprof_cgi.mods:%=$(ints_subdir)%.int) \
	$(mdprof_cgi.mods:%=$(int2s_subdir)%.int2)
endif

mdprof_cgi.int0s = $(mdprof_cgi.parent_mods:%=$(int0s_subdir)%.int0)
ifeq (x,y)
mdprof_cgi.int0s = $(mdprof_cgi.parent_mods:%=$(int0s_subdir)%.int0)
endif

mdprof_cgi.all_int0s = $(mdprof_cgi.mods:%=$(int0s_subdir)%.int0)
ifeq (x,y)
mdprof_cgi.all_int0s = $(mdprof_cgi.mods:%=$(int0s_subdir)%.int0)
endif

mdprof_cgi.int3s = $(mdprof_cgi.mods:%=$(int3s_subdir)%.int3)
ifeq (x,y)
mdprof_cgi.int3s = $(mdprof_cgi.mods:%=$(int3s_subdir)%.int3)
endif

mdprof_cgi.opts = $(mdprof_cgi.mods:%=$(opts_subdir)%.opt)
ifeq (x,y)
mdprof_cgi.opts = $(mdprof_cgi.mods:%=$(opts_subdir)%.opt)
endif

mdprof_cgi.trans_opts = $(mdprof_cgi.mods:%=$(trans_opts_subdir)%.trans_opt)
ifeq (x,y)
mdprof_cgi.trans_opts = $(mdprof_cgi.mods:%=$(trans_opts_subdir)%.trans_opt)
endif

mdprof_cgi.analysiss = $(mdprof_cgi.mods:%=$(analysiss_subdir)%.analysis)
ifeq (x,y)
mdprof_cgi.analysiss = $(mdprof_cgi.mods:%=$(analysiss_subdir)%.analysis)
endif

mdprof_cgi.requests = $(mdprof_cgi.mods:%=$(requests_subdir)%.request)
ifeq (x,y)
mdprof_cgi.requests = $(mdprof_cgi.mods:%=$(requests_subdir)%.request)
endif

mdprof_cgi.imdgs = $(mdprof_cgi.mods:%=$(imdgs_subdir)%.imdg)
ifeq (x,y)
mdprof_cgi.imdgs = $(mdprof_cgi.mods:%=$(imdgs_subdir)%.imdg)
endif

mdprof_cgi.profs = $(mdprof_cgi.mods:%=%.prof)

ifeq (x,y)
mdprof_cgi.profs = $(mdprof_cgi.mods:%=%.prof)
endif

