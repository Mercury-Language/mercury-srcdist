:- module program_representation_utils.
:- interface.
:- use_module cord.
:- use_module list.
:- use_module mdbcomp.
:- use_module set.
:- use_module unit.
:- use_module (mdbcomp.goal_path).
:- use_module (mdbcomp.program_representation).
:- type atomic_goal_is_call
    --->    atomic_goal_is_call(list.list(mdbcomp.program_representation.var_rep))
    ;       atomic_goal_is_trivial .
:- type inst_map.
:- type inst_map_delta.
:- type print_goal_info(Key, GoalAnn)
    --->    print_goal_info((program_representation_utils.pgi_lookup_annotation) :: ((func Key) = GoalAnn), (program_representation_utils.pgi_var_name_table) :: mdbcomp.program_representation.var_name_table).
:- type seen_duplicate_instantiation
    --->    seen_duplicate_instantiation 
    ;       have_not_seen_duplicate_instantiation .
:- typeclass goal_annotation(T) where [
	pred print_goal_annotation_to_strings(mdbcomp.program_representation.var_name_table, T, cord.cord(cord.cord(string))),
	mode print_goal_annotation_to_strings((builtin.in), (builtin.in), (builtin.out)) is det
].
:- instance (program_representation_utils.goal_annotation(unit.unit)).
:- pred atomic_goal_get_vars(mdbcomp.program_representation.atomic_goal_rep, set.set(mdbcomp.program_representation.var_rep)).
:- mode atomic_goal_get_vars((builtin.in), (builtin.out)) is det.
:- pred atomic_goal_is_call(mdbcomp.program_representation.atomic_goal_rep, program_representation_utils.atomic_goal_is_call).
:- mode atomic_goal_is_call((builtin.in), (builtin.out)) is det.
:- pred calc_inst_map_delta(program_representation_utils.inst_map, program_representation_utils.inst_map, program_representation_utils.inst_map_delta).
:- mode calc_inst_map_delta((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred empty_inst_map_delta(program_representation_utils.inst_map_delta).
:- mode empty_inst_map_delta((builtin.out)) is det.
:- func empty_inst_map_delta = program_representation_utils.inst_map_delta.
:- func initial_inst_map(mdbcomp.program_representation.proc_defn_rep(T)) = program_representation_utils.inst_map.
:- pred inst_map_delta_get_var_set(program_representation_utils.inst_map_delta, set.set(mdbcomp.program_representation.var_rep)).
:- mode inst_map_delta_get_var_set((builtin.in), (builtin.out)) is det.
:- pred inst_map_get(program_representation_utils.inst_map, mdbcomp.program_representation.var_rep, mdbcomp.program_representation.inst_rep, set.set(mdbcomp.program_representation.var_rep)).
:- mode inst_map_get((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred inst_map_get_var_deps(program_representation_utils.inst_map, mdbcomp.program_representation.var_rep, set.set(mdbcomp.program_representation.var_rep)).
:- mode inst_map_get_var_deps((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred inst_map_ground_vars(list.list(mdbcomp.program_representation.var_rep), set.set(mdbcomp.program_representation.var_rep), program_representation_utils.inst_map, program_representation_utils.inst_map, program_representation_utils.seen_duplicate_instantiation).
:- mode inst_map_ground_vars((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred label_goals(mdbcomp.goal_path.goal_id, mdbcomp.goal_path.containing_goal_map, mdbcomp.program_representation.goal_rep(T), mdbcomp.program_representation.goal_rep(mdbcomp.goal_path.goal_id)).
:- mode label_goals((builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func merge_inst_map(program_representation_utils.inst_map, mdbcomp.program_representation.detism_rep, program_representation_utils.inst_map, mdbcomp.program_representation.detism_rep) = program_representation_utils.inst_map.
:- func merge_seen_duplicate_instantiation(program_representation_utils.seen_duplicate_instantiation, program_representation_utils.seen_duplicate_instantiation) = program_representation_utils.seen_duplicate_instantiation.
:- pred print_goal_to_strings(program_representation_utils.print_goal_info(T, GoalAnn), int, mdbcomp.goal_path.reverse_goal_path, mdbcomp.program_representation.goal_rep(T), cord.cord(string)) <= (program_representation_utils.goal_annotation(GoalAnn)).
:- mode print_goal_to_strings((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred print_module_to_strings(mdbcomp.program_representation.module_rep, cord.cord(string)).
:- mode print_module_to_strings((builtin.in), (builtin.out)) is det.
:- pred print_proc_label_to_string(mdbcomp.program_representation.string_proc_label, string).
:- mode print_proc_label_to_string((builtin.in), (builtin.out)) is det.
:- pred print_proc_to_strings(mdbcomp.program_representation.proc_rep(GoalAnn), cord.cord(string)) <= (program_representation_utils.goal_annotation(GoalAnn)).
:- mode print_proc_to_strings((builtin.in), (builtin.out)) is det.
:- pred print_proc_to_strings(((func mdbcomp.goal_path.goal_id) = GoalAnn), mdbcomp.program_representation.proc_rep(mdbcomp.goal_path.goal_id), cord.cord(string)) <= (program_representation_utils.goal_annotation(GoalAnn)).
:- mode print_proc_to_strings((func((builtin.in)) = (builtin.out) is det), (builtin.in), (builtin.out)) is det.
:- pred progrep_search_proc(mdbcomp.program_representation.prog_rep, mdbcomp.program_representation.string_proc_label, mdbcomp.program_representation.proc_rep).
:- mode progrep_search_proc((builtin.in), (builtin.in), (builtin.out)) is semidet.
