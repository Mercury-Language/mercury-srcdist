ifeq (x,y)

# vim: ts=8 sw=8 noexpandtab ft=make


endif # ifeq(x,y)

# vim: ts=8 sw=8 noexpandtab ft=make

# Automatically generated module dependencies for
# module `interface' in source file `interface.m'.
# Generated by Mercury compiler version rotd-2017-07-11
# configured for x86_64-apple-darwin13.4.0.

ifeq (x,y)



interface.optdate interface.trans_opt_date interface.err interface.c_date interface.java_date : interface.m \
	bool.int \
	builtin.int \
	char.int \
	conf.int \
	io.int \
	list.int \
	private_builtin.int \
	require.int \
	string.int \
	string.format.int \
	string.parse_util.int \
	array.int2 \
	assoc_list.int2 \
	bitmap.int2 \
	construct.int2 \
	deconstruct.int2 \
	enum.int2 \
	integer.int2 \
	map.int2 \
	maybe.int2 \
	ops.int2 \
	pair.int2 \
	pretty_printer.int2 \
	random.int2 \
	rtti_implementation.int2 \
	set.int2 \
	set_ordlist.int2 \
	stream.int2 \
	term.int2 \
	time.int2 \
	tree234.int2 \
	type_desc.int2 \
	univ.int2


endif # ifeq(x,y)

# RULE date_file_deps
# source group names:
#   (unnamed)
#   long deps
#   short deps
interface.optdate interface.trans_opt_date interface.err interface.c_date interface.java_date : \
		interface.m \
	\
		bool.int \
		builtin.int \
		char.int \
		conf.int \
		io.int \
		list.int \
		private_builtin.int \
		require.int \
		string.int \
		string.format.int \
		string.parse_util.int \
	\
		array.int2 \
		assoc_list.int2 \
		bitmap.int2 \
		construct.int2 \
		deconstruct.int2 \
		enum.int2 \
		integer.int2 \
		map.int2 \
		maybe.int2 \
		ops.int2 \
		pair.int2 \
		pretty_printer.int2 \
		random.int2 \
		rtti_implementation.int2 \
		set.int2 \
		set_ordlist.int2 \
		stream.int2 \
		term.int2 \
		time.int2 \
		tree234.int2 \
		type_desc.int2 \
		univ.int2

ifeq (x,y)



interface.pic_o interface.$O : \
	array.mih \
	assoc_list.mih \
	bitmap.mih \
	bool.mih \
	builtin.mih \
	char.mih \
	conf.mih \
	construct.mih \
	deconstruct.mih \
	enum.mih \
	integer.mih \
	io.mih \
	list.mih \
	map.mih \
	maybe.mih \
	ops.mih \
	pair.mih \
	pretty_printer.mih \
	private_builtin.mih \
	random.mih \
	require.mih \
	rtti_implementation.mih \
	set.mih \
	set_ordlist.mih \
	stream.mih \
	string.mih \
	term.mih \
	time.mih \
	tree234.mih \
	type_desc.mih \
	univ.mih \
	string.format.mih \
	string.parse_util.mih


endif # ifeq(x,y)

# RULE objs_on_mihs
interface.pic_o interface.$O : \
		array.mih \
		assoc_list.mih \
		bitmap.mih \
		bool.mih \
		builtin.mih \
		char.mih \
		conf.mih \
		construct.mih \
		deconstruct.mih \
		enum.mih \
		integer.mih \
		io.mih \
		list.mih \
		map.mih \
		maybe.mih \
		ops.mih \
		pair.mih \
		pretty_printer.mih \
		private_builtin.mih \
		random.mih \
		require.mih \
		rtti_implementation.mih \
		set.mih \
		set_ordlist.mih \
		stream.mih \
		string.mih \
		term.mih \
		time.mih \
		tree234.mih \
		type_desc.mih \
		univ.mih \
		string.format.mih \
		string.parse_util.mih

ifeq (x,y)



interface.mh interface.mih : interface.c


endif # ifeq(x,y)

# RULE mh_and_mih_on_c
interface.mh interface.mih : interface.c

ifeq (x,y)



ifeq ($(findstring java,$(GRADE)),java)
interface.module_dep : jmercury/mr_interface.java
else
interface.module_dep : interface.c
endif


endif # ifeq(x,y)

ifeq ($(findstring java,$(GRADE)),java)

# RULE module_dep_on_java
interface.module_dep : jmercury/mr_interface.java

else

# RULE module_dep_on_c
interface.module_dep : interface.c

endif # conditional fragment

ifeq (x,y)



interface.date interface.date0 : interface.m \
	bool.int3 \
	builtin.int3 \
	char.int3 \
	conf.int3 \
	io.int3 \
	list.int3 \
	private_builtin.int3 \
	require.int3 \
	string.int3 \
	string.format.int3 \
	string.parse_util.int3 \
	array.int3 \
	assoc_list.int3 \
	bitmap.int3 \
	construct.int3 \
	deconstruct.int3 \
	enum.int3 \
	integer.int3 \
	map.int3 \
	maybe.int3 \
	ops.int3 \
	pair.int3 \
	pretty_printer.int3 \
	random.int3 \
	rtti_implementation.int3 \
	set.int3 \
	set_ordlist.int3 \
	stream.int3 \
	term.int3 \
	time.int3 \
	tree234.int3 \
	type_desc.int3 \
	univ.int3


endif # ifeq(x,y)

# RULE self_and_parent_date_deps
# source group names:
#   (unnamed)
#   long dep int3s
#   short dep int3s
interface.date interface.date0 : \
		interface.m \
	\
		bool.int3 \
		builtin.int3 \
		char.int3 \
		conf.int3 \
		io.int3 \
		list.int3 \
		private_builtin.int3 \
		require.int3 \
		string.int3 \
		string.format.int3 \
		string.parse_util.int3 \
	\
		array.int3 \
		assoc_list.int3 \
		bitmap.int3 \
		construct.int3 \
		deconstruct.int3 \
		enum.int3 \
		integer.int3 \
		map.int3 \
		maybe.int3 \
		ops.int3 \
		pair.int3 \
		pretty_printer.int3 \
		random.int3 \
		rtti_implementation.int3 \
		set.int3 \
		set_ordlist.int3 \
		stream.int3 \
		term.int3 \
		time.int3 \
		tree234.int3 \
		type_desc.int3 \
		univ.int3

ifeq (x,y)



interface.date0 : interface.m \
	bool.int3 \
	builtin.int3 \
	char.int3 \
	conf.int3 \
	io.int3 \
	list.int3 \
	private_builtin.int3 \
	require.int3 \
	string.int3 \
	string.format.int3 \
	string.parse_util.int3 \
	array.int3 \
	assoc_list.int3 \
	bitmap.int3 \
	construct.int3 \
	deconstruct.int3 \
	enum.int3 \
	integer.int3 \
	map.int3 \
	maybe.int3 \
	ops.int3 \
	pair.int3 \
	pretty_printer.int3 \
	random.int3 \
	rtti_implementation.int3 \
	set.int3 \
	set_ordlist.int3 \
	stream.int3 \
	term.int3 \
	time.int3 \
	tree234.int3 \
	type_desc.int3 \
	univ.int3


endif # ifeq(x,y)

# RULE self_and_parent_date0_deps
# source group names:
#   (unnamed)
#   long dep int3s
#   short dep int3s
interface.date0 : \
		interface.m \
	\
		bool.int3 \
		builtin.int3 \
		char.int3 \
		conf.int3 \
		io.int3 \
		list.int3 \
		private_builtin.int3 \
		require.int3 \
		string.int3 \
		string.format.int3 \
		string.parse_util.int3 \
	\
		array.int3 \
		assoc_list.int3 \
		bitmap.int3 \
		construct.int3 \
		deconstruct.int3 \
		enum.int3 \
		integer.int3 \
		map.int3 \
		maybe.int3 \
		ops.int3 \
		pair.int3 \
		pretty_printer.int3 \
		random.int3 \
		rtti_implementation.int3 \
		set.int3 \
		set_ordlist.int3 \
		stream.int3 \
		term.int3 \
		time.int3 \
		tree234.int3 \
		type_desc.int3 \
		univ.int3

ifeq (x,y)



interface.$O :  \
	io.mh \
	string.mh \
	time.mh



interface.pic_o :  \
	io.mh \
	string.mh \
	time.mh


endif # ifeq(x,y)

# RULE foreign_deps_for_.mh
interface.$O : \
		io.mh \
		string.mh \
		time.mh

# RULE foreign_deps_for_.mh
interface.pic_o : \
		io.mh \
		string.mh \
		time.mh

ifeq (x,y)


interface.int0 : interface.date0
	@:
interface.int : interface.date
	@:
interface.int2 : interface.date
	@:
interface.int3 : interface.date3
	@:
interface.opt : interface.optdate
	@:
interface.trans_opt : interface.trans_opt_date
	@:


endif # ifeq(x,y)

interface.int0 : interface.date0
	@:

interface.int : interface.date
	@:

interface.int2 : interface.date
	@:

interface.int3 : interface.date3
	@:

interface.opt : interface.optdate
	@:

interface.trans_opt : interface.trans_opt_date
	@:

ifeq (x,y)


endif # ifeq(x,y)

