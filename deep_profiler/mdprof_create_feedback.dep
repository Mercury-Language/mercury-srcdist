# Automatically generated dependencies for module `mdprof_create_feedback'
# generated from source file `mdprof_create_feedback.m'
# Generated by the Mercury compiler, version 14.01-beta-2014-02-06, configured for x86_64-apple-darwin13.0.0.

ifneq ($(EXT_FOR_EXE),)
.PHONY : mdprof_create_feedback
mdprof_create_feedback : mdprof_create_feedback$(EXT_FOR_EXE)
endif
ifeq ($(findstring il,$(GRADE)),il)
mdprof_create_feedback : mdprof_create_feedback.exe
mdprof_create_feedback.exe : $(mdprof_create_feedback.dlls) $(mdprof_create_feedback.foreign_dlls)
else
 ifeq ($(findstring java,$(GRADE)),java)
mdprof_create_feedback : $(mdprof_create_feedback.classes)
 else
mdprof_create_feedback$(EXT_FOR_EXE) : $(mdprof_create_feedback.cs_or_ss) $(mdprof_create_feedback.os) mdprof_create_feedback_init.$O \
		$(foreach @,mdprof_create_feedback,$(ALL_MLOBJS)) \
		$(foreach @,mdprof_create_feedback,$(ALL_MLLIBS_DEP))
	$(ML) $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) -- $(ALL_LDFLAGS) $(EXEFILE_OPT)mdprof_create_feedback$(EXT_FOR_EXE) mdprof_create_feedback_init.$O \
		$(mdprof_create_feedback.os) \
		$(foreach @,mdprof_create_feedback,$(ALL_MLOBJS)) $(ALL_MLLIBS)
 endif
endif
.PHONY : libmdprof_create_feedback
ifeq ($(findstring il,$(GRADE)),il)
libmdprof_create_feedback : $(mdprof_create_feedback.dlls) $(mdprof_create_feedback.foreign_dlls) \
		$(mdprof_create_feedback.ints) $(mdprof_create_feedback.int3s) mdprof_create_feedback.init

else
 ifeq ($(findstring java,$(GRADE)),java)
libmdprof_create_feedback : mdprof_create_feedback.jar \
		$(mdprof_create_feedback.ints) $(mdprof_create_feedback.int3s) mdprof_create_feedback.init

 else
libmdprof_create_feedback : libmdprof_create_feedback.$A libmdprof_create_feedback.$(EXT_FOR_SHARED_LIB) \
		$(mdprof_create_feedback.ints) $(mdprof_create_feedback.int3s) mdprof_create_feedback.init

 endif
endif
ifneq ($(EXT_FOR_SHARED_LIB),$A)
libmdprof_create_feedback.$(EXT_FOR_SHARED_LIB) : $(mdprof_create_feedback.cs_or_ss) $(mdprof_create_feedback.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mdprof_create_feedback,$(ALL_MLOBJS))) \
		$(foreach @,mdprof_create_feedback,$(ALL_MLLIBS_DEP))
	$(ML) --make-shared-lib $(ALL_GRADEFLAGS) $(ALL_MLFLAGS) -- -install_name /usr/local/mercury-14.01/lib/mercury/lib/hlc.gc.pregen/libmdprof_create_feedback.$(EXT_FOR_SHARED_LIB) $(ALL_LD_LIBFLAGS) -o libmdprof_create_feedback.$(EXT_FOR_SHARED_LIB) \
		$(mdprof_create_feedback.pic_os) \
		$(patsubst %.o,%.$(EXT_FOR_PIC_OBJECTS),$(foreach @,mdprof_create_feedback,$(ALL_MLOBJS))) $(ALL_MLLIBS)
endif

libmdprof_create_feedback.$A : $(mdprof_create_feedback.cs_or_ss) $(mdprof_create_feedback.os) \
		$(foreach @,mdprof_create_feedback,$(ALL_MLOBJS))
	rm -f libmdprof_create_feedback.$A
	$(AR) $(ALL_ARFLAGS) $(AR_LIBFILE_OPT)libmdprof_create_feedback.$A $(mdprof_create_feedback.os) \
		$(foreach @,mdprof_create_feedback,$(ALL_MLOBJS))
	$(RANLIB) $(ALL_RANLIBFLAGS) libmdprof_create_feedback.$A

mdprof_create_feedback.jar : $(mdprof_create_feedback.classes)
	$(JAR) $(JAR_CREATE_FLAGS) mdprof_create_feedback.jar $(mdprof_create_feedback.classes)

mdprof_create_feedback.init : mdprof_create_feedback.dep $(mdprof_create_feedback.cs)
	echo > mdprof_create_feedback.init
	$(MKLIBINIT) $(mdprof_create_feedback.cs) >> mdprof_create_feedback.init
	$(EXTRA_INIT_COMMAND) >> mdprof_create_feedback.init
force-mdprof_create_feedback_init :

mdprof_create_feedback_init.c : force-mdprof_create_feedback_init $(mdprof_create_feedback.cs)
	@$(C2INIT) $(ALL_GRADEFLAGS) $(ALL_C2INITFLAGS) --init-c-file mdprof_create_feedback_init.c.tmp $(mdprof_create_feedback.init_cs) $(ALL_C2INITARGS)
	@mercury_update_interface mdprof_create_feedback_init.c

.PHONY : libmdprof_create_feedback.install_ints
libmdprof_create_feedback.install_ints : $(mdprof_create_feedback.ints) $(mdprof_create_feedback.int3s)  install_lib_dirs
	files="$(mdprof_create_feedback.ints) $(mdprof_create_feedback.int3s) "; \
	for file in $$files; do \
		target="$(INSTALL_INT_DIR)/`basename $$file`"; \
		if cmp -s "$$file" "$$target"; then \
			echo "$$target unchanged"; \
		else \
			echo "installing $$target"; \
			$(INSTALL) "$$file" "$$target"; \
		fi; \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	for ext in int int2 int3; do \
		dir="$(INSTALL_INT_DIR)/Mercury/$${ext}s"; \
		rm -rf "$$dir"; \
		$(LN_S) .. "$$dir" || { \
			{ [ -d "$$dir" ] || \
			$(INSTALL_MKDIR) "$$dir"; } && \
			$(INSTALL) "$(INSTALL_INT_DIR)"/*.$$ext "$$dir"; \
		} || exit 1; \
	done

.PHONY : libmdprof_create_feedback.install_opts
libmdprof_create_feedback.install_opts : 
	@:

.PHONY : libmdprof_create_feedback.install_hdrs
libmdprof_create_feedback.install_hdrs : $(mdprof_create_feedback.mhs) install_lib_dirs
ifeq ($(mdprof_create_feedback.mhs),)
	@:
else
	for hdr in $(mdprof_create_feedback.mhs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_INC_DIR); \
	done
endif

.PHONY : libmdprof_create_feedback.install_grade_hdrs
libmdprof_create_feedback.install_grade_hdrs : $(mdprof_create_feedback.mihs) install_grade_dirs
ifeq ($(mdprof_create_feedback.mihs),)
	@:
else
	for hdr in $(mdprof_create_feedback.mihs); do \
		$(INSTALL) $$hdr $(INSTALL_INT_DIR); \
		$(INSTALL) $$hdr $(INSTALL_GRADE_INC_DIR); \
	done
	# The following is needed to support the `--use-subdirs' option
	# We try using `$(LN_S)', but if that fails, then we just use
	# `$(INSTALL)'.
	rm -rf $(INSTALL_GRADE_INC_SUBDIR)
	$(LN_S) .. $(INSTALL_GRADE_INC_SUBDIR) || { \
		{ [ -d $(INSTALL_GRADE_INC_SUBDIR) ] || \
			$(INSTALL_MKDIR) $(INSTALL_GRADE_INC_SUBDIR); \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_GRADE_INC_SUBDIR); \
	} || exit 1
	rm -rf $(INSTALL_INT_DIR)/Mercury/mihs
	$(LN_S) .. $(INSTALL_INT_DIR)/Mercury/mihs || { \
		{ [ -d $(INSTALL_INT_DIR)/Mercury/mihs ] || \
			$(INSTALL_MKDIR) \
			$(INSTALL_INT_DIR)/Mercury/mihs; \
		} && \
		$(INSTALL) $(INSTALL_GRADE_INC_DIR)/*.mih \
			$(INSTALL_INT_DIR); \
	} || exit 1
endif

.PHONY : mdprof_create_feedback.check
mdprof_create_feedback.check : $(mdprof_create_feedback.errs)

.PHONY : mdprof_create_feedback.ints
mdprof_create_feedback.ints : $(mdprof_create_feedback.dates)

.PHONY : mdprof_create_feedback.int3s
mdprof_create_feedback.int3s : $(mdprof_create_feedback.date3s)

.PHONY : mdprof_create_feedback.opts
mdprof_create_feedback.opts : $(mdprof_create_feedback.optdates)

.PHONY : mdprof_create_feedback.trans_opts
mdprof_create_feedback.trans_opts : $(mdprof_create_feedback.trans_opt_dates)

.PHONY : mdprof_create_feedback.ils
mdprof_create_feedback.ils : $(mdprof_create_feedback.ils)

.PHONY : mdprof_create_feedback.javas
mdprof_create_feedback.javas : $(mdprof_create_feedback.javas)

.PHONY : mdprof_create_feedback.classes
mdprof_create_feedback.classes : $(mdprof_create_feedback.classes)

.PHONY : mdprof_create_feedback.all_ints
mdprof_create_feedback.all_ints : $(mdprof_create_feedback.dates)

.PHONY : mdprof_create_feedback.all_int3s
mdprof_create_feedback.all_int3s : $(mdprof_create_feedback.date3s)

.PHONY : mdprof_create_feedback.all_opts
mdprof_create_feedback.all_opts : $(mdprof_create_feedback.optdates)

.PHONY : mdprof_create_feedback.all_trans_opts
mdprof_create_feedback.all_trans_opts : $(mdprof_create_feedback.trans_opt_dates)

clean_local : mdprof_create_feedback.clean
.PHONY : mdprof_create_feedback.clean
mdprof_create_feedback.clean :
	-echo $(mdprof_create_feedback.dirs) | xargs rm -rf 
	-echo $(mdprof_create_feedback.cs) mdprof_create_feedback_init.c | xargs rm -f
	-echo $(mdprof_create_feedback.mihs) | xargs rm -f
	-echo $(mdprof_create_feedback.all_os) mdprof_create_feedback_init.$O | xargs rm -f
	-echo $(mdprof_create_feedback.all_pic_os) mdprof_create_feedback_init.pic_o | xargs rm -f
	-echo $(mdprof_create_feedback.c_dates) | xargs rm -f
	-echo $(mdprof_create_feedback.il_dates) | xargs rm -f
	-echo $(mdprof_create_feedback.java_dates) | xargs rm -f
	-echo $(mdprof_create_feedback.useds) | xargs rm -f
	-echo $(mdprof_create_feedback.ils) | xargs rm -f
	-echo $(mdprof_create_feedback.javas) | xargs rm -f
	-echo $(mdprof_create_feedback.profs) | xargs rm -f
	-echo $(mdprof_create_feedback.errs) | xargs rm -f
	-echo $(mdprof_create_feedback.foreign_cs) | xargs rm -f

realclean_local : mdprof_create_feedback.realclean
.PHONY : mdprof_create_feedback.realclean
mdprof_create_feedback.realclean : mdprof_create_feedback.clean
	-echo $(mdprof_create_feedback.dates) | xargs rm -f
	-echo $(mdprof_create_feedback.date0s) | xargs rm -f
	-echo $(mdprof_create_feedback.date3s) | xargs rm -f
	-echo $(mdprof_create_feedback.optdates) | xargs rm -f
	-echo $(mdprof_create_feedback.trans_opt_dates) | xargs rm -f
	-echo $(mdprof_create_feedback.ints) | xargs rm -f
	-echo $(mdprof_create_feedback.all_int0s) | xargs rm -f
	-echo $(mdprof_create_feedback.int3s) | xargs rm -f
	-echo $(mdprof_create_feedback.opts) | xargs rm -f
	-echo $(mdprof_create_feedback.trans_opts) | xargs rm -f
	-echo $(mdprof_create_feedback.analysiss) | xargs rm -f
	-echo $(mdprof_create_feedback.requests) | xargs rm -f
	-echo $(mdprof_create_feedback.imdgs) | xargs rm -f
	-echo $(mdprof_create_feedback.ds) | xargs rm -f
	-echo $(mdprof_create_feedback.module_deps) | xargs rm -f
	-echo $(mdprof_create_feedback.all_mhs) | xargs rm -f
	-echo $(mdprof_create_feedback.all_mihs) | xargs rm -f
	-echo $(mdprof_create_feedback.dlls) | xargs rm -f
	-echo $(mdprof_create_feedback.foreign_dlls) | xargs rm -f
	-echo $(mdprof_create_feedback.classes) | xargs rm -f
	-rm -f mdprof_create_feedback$(EXT_FOR_EXE) mdprof_create_feedback.init libmdprof_create_feedback.$A libmdprof_create_feedback.$(EXT_FOR_SHARED_LIB) mdprof_create_feedback.jar mdprof_create_feedback.dep mdprof_create_feedback.dv

