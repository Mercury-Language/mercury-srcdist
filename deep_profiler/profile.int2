:- module profile.
:- interface.
:- import_module array.
:- import_module bool.
:- import_module exclude.
:- import_module list.
:- import_module map.
:- import_module maybe.
:- import_module mdbcomp.
:- import_module measurements.
:- import_module (mdbcomp.goal_path).
:- import_module (mdbcomp.program_representation).
:- type call_site_array_slot
	--->	slot_normal(profile.call_site_dynamic_ptr)
	;	slot_multi(profile.is_zeroed, array.array(profile.call_site_dynamic_ptr)).
:- type call_site_callees
	--->	call_site_callees(list.list(profile.proc_dynamic_ptr)).
:- type call_site_caller
	--->	call_site_caller(profile.call_site_static_ptr).
:- type call_site_dynamic
	--->	call_site_dynamic((profile.csd_caller) :: profile.proc_dynamic_ptr, (profile.csd_callee) :: profile.proc_dynamic_ptr, (profile.csd_own_prof) :: measurements.own_prof_info).
:- type call_site_dynamic_ptr
	--->	call_site_dynamic_ptr(int).
:- type call_site_dynamics == array.array(profile.call_site_dynamic).
:- type call_site_kind
	--->	normal_call 
	;	special_call 
	;	higher_order_call 
	;	method_call 
	;	callback .
:- type call_site_kind_and_callee == profile.call_site_kind_and_callee(profile.proc_static_ptr).
:- type call_site_kind_and_callee(T)
	--->	normal_call_and_callee(T, string)
	;	special_call_and_no_callee 
	;	higher_order_call_and_no_callee 
	;	method_call_and_no_callee 
	;	callback_and_no_callee .
:- type call_site_kind_and_info(T)
	--->	normal_call_and_info(T)
	;	special_call_and_no_info 
	;	higher_order_call_and_no_info 
	;	method_call_and_no_info 
	;	callback_and_no_info .
:- type call_site_static
	--->	call_site_static((profile.css_container) :: profile.proc_static_ptr, (profile.css_slot_num) :: int, (profile.css_kind) :: profile.call_site_kind_and_callee, (profile.css_line_num) :: int, (profile.css_goal_path) :: mdbcomp.goal_path.reverse_goal_path).
:- type call_site_static_map == array.array(profile.call_site_static_ptr).
:- type call_site_static_ptr
	--->	call_site_static_ptr(int).
:- type call_site_statics == array.array(profile.call_site_static).
:- type canonical_flag
	--->	is_canonical 
	;	maybe_not_canonical .
:- type clique_ptr
	--->	clique_ptr(int).
:- type compensation_table == map.map(profile.proc_static_ptr, measurements.inherit_prof_info).
:- type coverage_data_type
	--->	no_coverage_data 
	;	static_coverage_data 
	;	dynamic_coverage_data .
:- type deep
	--->	deep((profile.profile_stats) :: profile.profile_stats, (profile.server_name_port) :: string, (profile.script_name) :: string, (profile.data_file_name) :: string, (profile.root) :: profile.proc_dynamic_ptr, (profile.call_site_dynamics) :: profile.call_site_dynamics, (profile.proc_dynamics) :: profile.proc_dynamics, (profile.call_site_statics) :: profile.call_site_statics, (profile.proc_statics) :: profile.proc_statics, (profile.clique_index) :: array.array(profile.clique_ptr), (profile.clique_members) :: array.array(list.list(profile.proc_dynamic_ptr)), (profile.clique_parents) :: array.array(profile.call_site_dynamic_ptr), (profile.clique_maybe_child) :: array.array(maybe.maybe(profile.clique_ptr)), (profile.proc_callers) :: array.array(list.list(profile.call_site_dynamic_ptr)), (profile.call_site_static_map) :: profile.call_site_static_map, (profile.call_site_calls) :: array.array(map.map(profile.proc_static_ptr, list.list(profile.call_site_dynamic_ptr))), (profile.pd_own) :: array.array(measurements.own_prof_info), (profile.pd_desc) :: array.array(measurements.inherit_prof_info), (profile.csd_desc) :: array.array(measurements.inherit_prof_info), (profile.ps_own) :: array.array(measurements.own_prof_info), (profile.ps_desc) :: array.array(measurements.inherit_prof_info), (profile.css_own) :: array.array(measurements.own_prof_info), (profile.css_desc) :: array.array(measurements.inherit_prof_info), (profile.pd_comp_table) :: array.array(profile.compensation_table), (profile.csd_comp_table) :: array.array(profile.compensation_table), (profile.module_data) :: map.map(string, profile.module_data), (profile.maybe_static_coverage) :: maybe.maybe(array.array(measurements.static_coverage_info)), (profile.exclude_contour_file) :: exclude.exclude_file, (profile.procrep_file) :: maybe.maybe(maybe.maybe_error(mdbcomp.program_representation.prog_rep))).
:- type deep_compression_flag
	--->	no_compression .
:- type deep_flags
	--->	deep_flags((profile.df_bytes_per_int) :: int, (profile.df_canonical_flag) :: profile.canonical_flag, (profile.df_compression_flag) :: profile.deep_compression_flag, (profile.df_coverage_data_type) :: profile.coverage_data_type).
:- type initial_deep
	--->	initial_deep((profile.init_profile_stats) :: profile.profile_stats, (profile.init_root) :: profile.proc_dynamic_ptr, (profile.init_call_site_dynamics) :: profile.call_site_dynamics, (profile.init_proc_dynamics) :: profile.proc_dynamics, (profile.init_call_site_statics) :: profile.call_site_statics, (profile.init_proc_statics) :: profile.proc_statics).
:- type is_zeroed
	--->	zeroed 
	;	not_zeroed .
:- type module_data
	--->	module_data((profile.module_own) :: measurements.own_prof_info, (profile.module_desc) :: measurements.inherit_prof_info, (profile.module_procs) :: list.list(profile.proc_static_ptr)).
:- type proc_dynamic
	--->	proc_dynamic((profile.pd_proc_static) :: profile.proc_static_ptr, (profile.pd_sites) :: array.array(profile.call_site_array_slot), (profile.pd_maybe_coverage_points) :: maybe.maybe(array.array(int))).
:- type proc_dynamic_ptr
	--->	proc_dynamic_ptr(int).
:- type proc_dynamics == array.array(profile.proc_dynamic).
:- type proc_static
	--->	proc_static((profile.ps_id) :: mdbcomp.program_representation.string_proc_label, (profile.ps_decl_module) :: string, (profile.ps_uq_refined_id) :: string, (profile.ps_q_refined_id) :: string, (profile.ps_raw_id) :: string, (profile.ps_file_name) :: string, (profile.ps_line_number) :: int, (profile.ps_in_interface) :: bool.bool, (profile.ps_sites) :: array.array(profile.call_site_static_ptr), (profile.ps_coverage_point_infos) :: array.array(mdbcomp.program_representation.coverage_point_info), (profile.ps_maybe_coverage_points) :: maybe.maybe(array.array(int)), (profile.ps_is_zeroed) :: profile.is_zeroed).
:- type proc_static_ptr
	--->	proc_static_ptr(int).
:- type proc_statics == array.array(profile.proc_static).
:- type profile_stats
	--->	profile_stats((profile.prs_program_name) :: string, (profile.prs_num_csd) :: int, (profile.prs_num_css) :: int, (profile.prs_num_pd) :: int, (profile.prs_num_ps) :: int, (profile.prs_ticks_per_sec) :: int, (profile.prs_instrument_quanta) :: int, (profile.prs_user_quanta) :: int, (profile.prs_num_callseqs) :: int, (profile.prs_deep_flags) :: profile.deep_flags).
