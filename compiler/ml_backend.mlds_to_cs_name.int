:- module (ml_backend.mlds_to_cs_name).
:- interface.
:- use_module io.
:- use_module mdbcomp.
:- use_module parse_tree.
:- use_module (mdbcomp.sym_name).
:- use_module (ml_backend.mlds).
:- use_module (ml_backend.mlds_to_cs_util).
:- use_module (parse_tree.prog_data).
:- pred global_var_name_to_string_for_csharp(ml_backend.mlds.mlds_global_var_name, string).
:- mode global_var_name_to_string_for_csharp((builtin.in), (builtin.out)) is det.
:- pred local_var_name_to_string_for_csharp(ml_backend.mlds.mlds_local_var_name, string).
:- mode local_var_name_to_string_for_csharp((builtin.in), (builtin.out)) is det.
:- pred mlds_output_proc_label(io.text_output_stream, string, ml_backend.mlds.mlds_proc_label, io.io, io.io).
:- mode mlds_output_proc_label((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_class_name_arity_for_csharp(io.text_output_stream, ml_backend.mlds.mlds_class_name, parse_tree.prog_data.arity, io.io, io.io).
:- mode output_class_name_arity_for_csharp((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_field_var_name_for_csharp(io.text_output_stream, ml_backend.mlds.mlds_field_var_name, io.io, io.io).
:- mode output_field_var_name_for_csharp((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_function_name_for_csharp(io.text_output_stream, ml_backend.mlds.mlds_function_name, io.io, io.io).
:- mode output_function_name_for_csharp((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_global_var_name_for_csharp(io.text_output_stream, ml_backend.mlds.mlds_global_var_name, io.io, io.io).
:- mode output_global_var_name_for_csharp((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_local_var_name_for_csharp(io.text_output_stream, ml_backend.mlds.mlds_local_var_name, io.io, io.io).
:- mode output_local_var_name_for_csharp((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_maybe_qualified_function_name_for_csharp(ml_backend.mlds_to_cs_util.csharp_out_info, io.text_output_stream, ml_backend.mlds.qual_function_name, io.io, io.io).
:- mode output_maybe_qualified_function_name_for_csharp((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_maybe_qualified_global_var_name_for_csharp(ml_backend.mlds_to_cs_util.csharp_out_info, io.text_output_stream, ml_backend.mlds.qual_global_var_name, io.io, io.io).
:- mode output_maybe_qualified_global_var_name_for_csharp((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_qual_name_prefix_cs(io.text_output_stream, ml_backend.mlds.mlds_module_name, ml_backend.mlds.mlds_qual_kind, io.io, io.io).
:- mode output_qual_name_prefix_cs((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_unqual_class_name_for_csharp(io.text_output_stream, ml_backend.mlds.mlds_class_name, parse_tree.prog_data.arity, io.io, io.io).
:- mode output_unqual_class_name_for_csharp((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred qual_class_name_to_string_for_csharp(ml_backend.mlds.qual_class_name, parse_tree.prog_data.arity, string).
:- mode qual_class_name_to_string_for_csharp((builtin.in), (builtin.in), (builtin.out)) is det.
:- func strip_mercury_and_mangle_sym_name_for_csharp(mdbcomp.sym_name.sym_name) = string.
:- pred write_identifier_string_for_csharp(io.text_output_stream, string, io.io, io.io).
:- mode write_identifier_string_for_csharp((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
