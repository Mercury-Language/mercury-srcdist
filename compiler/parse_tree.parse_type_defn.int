:- module (parse_tree.parse_type_defn).
:- interface.
:- import_module cord.
:- import_module list.
:- import_module maybe.
:- import_module term.
:- import_module varset.
:- import_module (mdbcomp.sym_name).
:- import_module (parse_tree.error_util).
:- import_module (parse_tree.maybe_error).
:- import_module (parse_tree.parse_types).
:- import_module (parse_tree.prog_data).
:- type type_defn_head_parse_context
    --->    tdhpc_type_defn 
    ;       tdhpc_foreign_type_pragma(cord.cord(parse_tree.error_util.format_component)).
:- pred parse_solver_type_defn_item(mdbcomp.sym_name.module_name, varset.varset, list.list(term.term), parse_tree.prog_data.prog_context, int, parse_tree.maybe_error.maybe1(parse_tree.parse_types.item_or_marker)).
:- mode parse_solver_type_defn_item((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred parse_type_defn_head(parse_tree.parse_type_defn.type_defn_head_parse_context, mdbcomp.sym_name.module_name, varset.varset, term.term, parse_tree.maybe_error.maybe2(mdbcomp.sym_name.sym_name, list.list(parse_tree.prog_data.type_param))).
:- mode parse_type_defn_head((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred parse_type_defn_item(mdbcomp.sym_name.module_name, varset.varset, list.list(term.term), parse_tree.prog_data.prog_context, int, parse_tree.prog_data.is_solver_type, parse_tree.maybe_error.maybe1(parse_tree.parse_types.item_or_marker)).
:- mode parse_type_defn_item((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred parse_where_unify_compare(mdbcomp.sym_name.module_name, varset.varset, term.term, parse_tree.maybe_error.maybe1(maybe.maybe(parse_tree.prog_data.unify_compare))).
:- mode parse_where_unify_compare((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
