:- module (parse_tree.parse_tree_out_info).
:- interface.
:- import_module char.
:- import_module io.
:- import_module libs.
:- import_module list.
:- import_module mdbcomp.
:- import_module string.
:- import_module term.
:- import_module (libs.globals).
:- import_module (mdbcomp.sym_name).
:- import_module (parse_tree.prog_data).
:- import_module (parse_tree.prog_data_pragma).
:- type maybe_output_line_numbers
	where	type_is_abstract_enum(1).
:- type maybe_qualified_item_names
	where	type_is_abstract_enum(1).
:- type merc_out_info.
:- type output_lang
	where	type_is_abstract_enum(1).
:- typeclass output(U).
:- instance ((parse_tree.parse_tree_out_info).output(io.state)).
:- instance ((parse_tree.parse_tree_out_info).output(string)).
:- type_representation((parse_tree.parse_tree_out_info).maybe_output_line_numbers, du_repn(enum("dont_output_line_numbers", "do_output_line_numbers", [], []))).
:- type_representation((parse_tree.parse_tree_out_info).maybe_qualified_item_names, du_repn(enum("unqualified_item_names", "qualified_item_names", [], []))).
:- type_representation((parse_tree.parse_tree_out_info).merc_out_info, is_word_aligned_ptr).
:- type_representation((parse_tree.parse_tree_out_info).output_lang, du_repn(enum("output_mercury", "output_debug", [], []))).
