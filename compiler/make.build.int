:- module (make.build).
:- interface.
:- use_module libs.
:- use_module (libs.globals).
:- pragma foreign_import_module("C", (make.build)).
:- pragma foreign_import_module("C#", (make.build)).
:- pragma foreign_import_module("Java", (make.build)).
:- pragma foreign_import_module("Erlang", (make.build)).
:- type build(T) == make.build.build(T, make.make_info).
:- type build(T, Info) == make.build.build(T, Info, Info).
:- type build(T, Info1, Info2) == pred(libs.globals.globals, T, bool.bool, Info1, Info2, io.io, io.io).
:- type build2(T, U) == pred(libs.globals.globals, T, U, bool.bool, make.make_info, make.make_info, io.io, io.io).
:- type foldl2_pred_with_status(T, Info, IO) == pred(libs.globals.globals, T, bool.bool, Info, Info, IO, IO).
:- type foldl3_pred_with_status(T, Acc, Info, IO) == pred(libs.globals.globals, T, bool.bool, Acc, Acc, Info, Info, IO, IO).
:- type stdout_lock.
:- inst (build) == (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det).
:- inst (build2) == (pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det).
:- inst (foldl2_pred_with_status) == (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det).
:- inst (foldl3_pred_with_status) == (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det).
:- pred build_with_module_options(libs.globals.globals, mdbcomp.sym_name.module_name, list.list(string), make.build.build(list.list(string)), bool.bool, make.make_info, make.make_info, io.io, io.io).
:- mode build_with_module_options((builtin.in), (builtin.in), (builtin.in), builtin.in(((make.build).build)), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred build_with_module_options_and_output_redirect(libs.globals.globals, mdbcomp.sym_name.module_name, list.list(string), make.build.build2(list.list(string), io.output_stream), bool.bool, make.make_info, make.make_info, io.io, io.io).
:- mode build_with_module_options_and_output_redirect((builtin.in), (builtin.in), (builtin.in), builtin.in(((make.build).build2)), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred build_with_module_options_args(libs.globals.globals, mdbcomp.sym_name.module_name, list.list(string), make.options_file.options_variables, list.list(string), list.list(string), make.build.build(list.list(string), Info1, Info2), bool.bool, Info1, maybe.maybe(Info2), io.io, io.io).
:- mode build_with_module_options_args((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), builtin.in(((make.build).build)), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred build_with_output_redirect(libs.globals.globals, mdbcomp.sym_name.module_name, make.build.build(io.output_stream), bool.bool, make.make_info, make.make_info, io.io, io.io).
:- mode build_with_output_redirect((builtin.in), (builtin.in), builtin.in(((make.build).build)), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred foldl2_maybe_stop_at_error(bool.bool, make.build.foldl2_pred_with_status(T, Info, IO), libs.globals.globals, list.list(T), bool.bool, Info, Info, IO, IO).
:- mode foldl2_maybe_stop_at_error((builtin.in), builtin.in(((make.build).foldl2_pred_with_status)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred foldl2_maybe_stop_at_error_maybe_parallel(bool.bool, make.build.foldl2_pred_with_status(T, make.make_info, io.io), libs.globals.globals, list.list(T), bool.bool, make.make_info, make.make_info, io.io, io.io).
:- mode foldl2_maybe_stop_at_error_maybe_parallel((builtin.in), builtin.in(((make.build).foldl2_pred_with_status)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred foldl3_maybe_stop_at_error(bool.bool, make.build.foldl3_pred_with_status(T, Acc, Info, IO), libs.globals.globals, list.list(T), bool.bool, Acc, Acc, Info, Info, IO, IO).
:- mode foldl3_maybe_stop_at_error((builtin.in), builtin.in(((make.build).foldl3_pred_with_status)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred redirect_output(mdbcomp.sym_name.module_name, maybe.maybe(io.output_stream), make.make_info, make.make_info, io.io, io.io).
:- mode redirect_output((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred unredirect_output(libs.globals.globals, mdbcomp.sym_name.module_name, io.output_stream, make.make_info, make.make_info, io.io, io.io).
:- mode unredirect_output((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred with_locked_stdout(make.make_info, pred(io.io, io.io), io.io, io.io).
:- mode with_locked_stdout((builtin.in), builtin.in((pred((builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- implementation.
:- type job_ctl.
:- pragma foreign_type(c, job_ctl, "MC_JobCtl *").
:- pragma foreign_type(java, job_ctl, "java.lang.Object").
:- pragma foreign_type(csharp, job_ctl, "object").
:- pragma foreign_type(erlang, job_ctl, "").
:- type stdout_lock == make.build.job_ctl.
