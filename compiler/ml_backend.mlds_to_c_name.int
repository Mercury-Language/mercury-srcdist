:- module (ml_backend.mlds_to_c_name).
:- interface.
:- use_module backend_libs.
:- use_module bool.
:- use_module parse_tree.
:- use_module (backend_libs.rtti).
:- use_module (ml_backend.mlds).
:- use_module (parse_tree.prog_data).
:- func class_name_arity_to_string_for_c(ml_backend.mlds.mlds_class_name, parse_tree.prog_data.arity) = string.
:- func field_var_name_to_string_for_c(ml_backend.mlds.mlds_field_var_name) = string.
:- func global_var_ref_to_string(ml_backend.mlds.global_var_ref) = string.
:- func local_var_name_to_string_for_c(ml_backend.mlds.mlds_local_var_name) = string.
:- func maybe_qual_global_var_name_to_string_for_c(ml_backend.mlds.mlds_module_name, ml_backend.mlds.mlds_global_var_name) = string.
:- func qual_field_var_name_to_string_for_c(ml_backend.mlds.qual_field_var_name) = string.
:- func qual_function_name_to_string_for_c(ml_backend.mlds.qual_function_name) = string.
:- func qual_proc_label_to_string_for_c(ml_backend.mlds.qual_proc_label) = string.
:- func qualifier_to_string_for_c(ml_backend.mlds.mlds_module_name) = string.
:- func should_module_qualify_global_var_name(ml_backend.mlds.mlds_global_var_name) = bool.bool.
:- func tabling_struct_id_to_string(ml_backend.mlds.mlds_proc_label, backend_libs.rtti.proc_tabling_struct_id) = string.
