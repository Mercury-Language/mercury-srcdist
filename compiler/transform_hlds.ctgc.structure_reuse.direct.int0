:- module (((transform_hlds.ctgc).structure_reuse).direct).
:- interface.
:- import_module (hlds.hlds_module).
:- import_module (((transform_hlds.ctgc).structure_reuse).domain).
:- import_module (((transform_hlds.ctgc).structure_sharing).domain).
:- import_module io.
:- pred direct_reuse_pass(((((transform_hlds.ctgc).structure_sharing).domain).sharing_as_table), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_as_table), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_as_table), (io.io), (io.io)).
:- mode direct_reuse_pass((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- import_module (hlds.hlds_goal).
:- import_module (hlds.hlds_pred).
:- import_module (hlds.passes_aux).
:- import_module (libs.globals).
:- import_module (libs.options).
:- import_module (mdbcomp.program_representation).
:- import_module (parse_tree.error_util).
:- import_module (parse_tree.prog_out).
:- import_module ((((transform_hlds.ctgc).structure_reuse).direct).choose_reuse).
:- import_module ((((transform_hlds.ctgc).structure_reuse).direct).detect_garbage).
:- import_module ((transform_hlds.ctgc).util).
:- import_module bool.
:- import_module list.
:- import_module map.
:- import_module svmap.
:- import_module term.
:- include_module ((((transform_hlds.ctgc).structure_reuse).direct).detect_garbage).
:- include_module ((((transform_hlds.ctgc).structure_reuse).direct).choose_reuse).
:- type reuse_strategy
	--->	same_cons_id 
	;	within_n_cells_difference(int).
:- pred get_strategy(((((transform_hlds.ctgc).structure_reuse).direct).reuse_strategy), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), (io.io), (io.io)).
:- mode get_strategy((builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred direct_reuse_process_pred(((((transform_hlds.ctgc).structure_reuse).direct).reuse_strategy), ((((transform_hlds.ctgc).structure_sharing).domain).sharing_as_table), ((hlds.hlds_pred).pred_id), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_as_table), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_as_table), (io.io), (io.io)).
:- mode direct_reuse_process_pred((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred direct_reuse_process_proc(((((transform_hlds.ctgc).structure_reuse).direct).reuse_strategy), ((((transform_hlds.ctgc).structure_sharing).domain).sharing_as_table), ((hlds.hlds_pred).pred_id), ((hlds.hlds_pred).proc_id), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_as_table), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_as_table), (io.io), (io.io)).
:- mode direct_reuse_process_proc((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred direct_reuse_process_procedure(((((transform_hlds.ctgc).structure_reuse).direct).reuse_strategy), ((((transform_hlds.ctgc).structure_sharing).domain).sharing_as_table), ((hlds.hlds_pred).pred_id), ((hlds.hlds_pred).proc_id), ((hlds.hlds_module).module_info), ((hlds.hlds_pred).pred_info), ((hlds.hlds_pred).proc_info), ((hlds.hlds_pred).proc_info), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_as), (io.io), (io.io)).
:- mode direct_reuse_process_procedure((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- type program_point
	--->	pp(((((transform_hlds.ctgc).structure_reuse).direct).pp_context) :: (term.context), ((((transform_hlds.ctgc).structure_reuse).direct).pp_path) :: ((mdbcomp.program_representation).goal_path)).
:- type dead_cell_table == (map.map(((((transform_hlds.ctgc).structure_reuse).direct).program_point), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_condition))).
:- func program_point_init(((hlds.hlds_goal).hlds_goal_info)) = ((((transform_hlds.ctgc).structure_reuse).direct).program_point).
:- pred dump_program_point(((((transform_hlds.ctgc).structure_reuse).direct).program_point), (io.io), (io.io)).
:- mode dump_program_point((builtin.in), (builtin.di), (builtin.uo)) is det.
:- func dead_cell_table_init = ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table).
:- pred dead_cell_table_is_empty(((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table)).
:- mode dead_cell_table_is_empty((builtin.in)) is semidet.
:- func dead_cell_table_search(((((transform_hlds.ctgc).structure_reuse).direct).program_point), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table)) = ((((transform_hlds.ctgc).structure_reuse).domain).reuse_condition) is semidet.
:- pred dead_cell_table_set(((((transform_hlds.ctgc).structure_reuse).direct).program_point), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_condition), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table)).
:- mode dead_cell_table_set((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred dead_cell_table_remove(((((transform_hlds.ctgc).structure_reuse).direct).program_point), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table)).
:- mode dead_cell_table_remove((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred dead_cell_table_remove_conditionals(((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table)).
:- mode dead_cell_table_remove_conditionals((builtin.in), (builtin.out)) is det.
:- pred dead_cell_table_maybe_dump((bool.bool), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table), (io.io), (io.io)).
:- mode dead_cell_table_maybe_dump((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred dump_goal_path_step(((mdbcomp.program_representation).goal_path_step), (io.io), (io.io)).
:- mode dump_goal_path_step((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred dead_cell_table_add_unconditional(((((transform_hlds.ctgc).structure_reuse).direct).program_point), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_condition), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table), ((((transform_hlds.ctgc).structure_reuse).direct).dead_cell_table)).
:- mode dead_cell_table_add_unconditional((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred dead_cell_entry_dump(((((transform_hlds.ctgc).structure_reuse).direct).program_point), ((((transform_hlds.ctgc).structure_reuse).domain).reuse_condition), (io.io), (io.io)).
:- mode dead_cell_entry_dump((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- func this_file = string.
