:- module (parse_tree.prog_item).
:- interface.
:- import_module assoc_list.
:- import_module bool.
:- import_module list.
:- import_module maybe.
:- import_module pair.
:- import_module recompilation.
:- import_module set.
:- import_module term.
:- import_module (libs.globals).
:- import_module (libs.options).
:- import_module (mdbcomp.prim_data).
:- import_module (parse_tree.prog_data).
:- type catch_any_expr.
:- type catch_expr.
:- type class_method.
:- type class_methods.
:- type compilation_unit.
:- type contains_foreign_code.
:- type contains_foreign_export
	where	type_is_abstract_enum(1).
:- type foreign_name.
:- type goal.
:- type goal_expr.
:- type goals.
:- type item.
:- type item_clause_info.
:- type item_compiler_origin
	where	type_is_abstract_enum(3).
:- type item_finalise_info.
:- type item_initialise_info.
:- type item_inst_defn_info.
:- type item_instance_info.
:- type item_mode_decl_info.
:- type item_mode_defn_info.
:- type item_module_defn_info.
:- type item_module_end_info.
:- type item_module_start_info.
:- type item_mutable_info.
:- type item_nothing_info.
:- type item_origin.
:- type item_pragma_info.
:- type item_pred_decl_info.
:- type item_promise_info.
:- type item_type_defn_info.
:- type item_typeclass_info.
:- type item_warning.
:- type module_defn.
:- type mutable_thread_local
	where	type_is_abstract_enum(1).
:- type mutable_trailed
	where	type_is_abstract_enum(1).
:- type mutable_var_attributes.
:- type pragma_type.
:- inst (pragma_type_spec) == bound(pragma_type_spec(ground, ground, ground, ground, ground, ground, ground, ground)).
