/*
** Automatically generated from `hlds_module.m'
** by the Mercury compiler,
** version rotd-2019-05-30
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module hlds.hlds_module.
// :- interface.

#ifndef MR_HEADER_GUARD_hlds__hlds_module
#define MR_HEADER_GUARD_hlds__hlds_module

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef HLDS__HLDS_MODULE_DECL_GUARD
#define HLDS__HLDS_MODULE_DECL_GUARD
#include "hlds.mih"

#endif




extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_avail_module_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_avail_module_entry_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_avail_module_map_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_complexity_arg_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_complexity_arg_kind_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_complexity_proc_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_complexity_proc_map_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_direct_arg_map_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_exported_enum_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_item_foreign_enum_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_item_foreign_export_enum_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_module_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_module_rare_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_module_sub_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_oisu_map_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_oisu_preds_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_pragma_exported_proc_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_proc_analysis_kind_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_table_struct_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_table_struct_map_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_type_ctor_gen_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_type_repn_decision_data_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_type_spec_info_0;

extern const MR_TypeCtorInfo_Struct hlds__hlds_module__hlds__hlds_module__type_ctor_info_unused_arg_info_0;

void MR_CALL 
hlds__hlds_module__module_add_avail_module_name_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__hlds_module__module_add_fact_table_file_3_p_0(
  MR_String param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_add_foreign_body_code_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_add_foreign_decl_code_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_add_foreign_import_module_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_add_indirectly_imported_module_name_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_get_fact_table_file_names_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_add_parent_to_used_modules_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_clobber_dependency_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_dependency_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_all_deps_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_analysis_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_assertion_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_avail_module_map_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_class_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_complexity_proc_infos_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_cons_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_const_struct_db_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_ctor_field_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_dump_hlds_base_file_name_2_p_0(
  MR_Word param_1,
  MR_String * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_event_set_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_exclusive_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_exported_enums_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_foreign_body_codes_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_foreign_decl_codes_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_foreign_import_modules_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_globals_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_has_parallel_conj_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_has_user_event_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_indirectly_imported_module_names_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_inst_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_instance_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_maybe_complexity_proc_map_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_maybe_dependency_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_maybe_recompilation_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_mode_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_must_be_stratified_preds_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_name_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_name_context_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_no_tag_types_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_num_errors_2_p_0(
  MR_Word param_1,
  MR_Integer * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_oisu_map_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_oisu_procs_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_partial_qualifier_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_pragma_exported_procs_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_predicate_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_preds_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_proc_analysis_kinds_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_proc_requests_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_special_pred_maps_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_structure_reuse_preds_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_table_struct_map_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_ts_rev_string_table_3_p_0(
  MR_Word param_1,
  MR_Integer * param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_get_type_ctor_gen_infos_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_type_repn_dec_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_type_spec_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_type_table_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_unused_arg_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_used_modules_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_valid_pred_id_set_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_valid_pred_ids_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_get_visible_modules_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_incr_errors_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_incr_num_errors_3_p_0(
  MR_Integer param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_init_6_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__hlds_module__module_info_make_pred_id_invalid_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_make_pred_ids_invalid_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_new_user_final_pred_5_p_0(
  MR_Word param_1,
  MR_Integer param_2,
  MR_String * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__hlds_module__module_info_new_user_init_pred_5_p_0(
  MR_Word param_1,
  MR_Integer param_2,
  MR_String * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__hlds_module__module_info_next_atomic_count_4_p_0(
  MR_Word param_1,
  MR_Integer * param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
hlds__hlds_module__module_info_next_lambda_count_4_p_0(
  MR_Word param_1,
  MR_Integer * param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
hlds__hlds_module__module_info_optimize_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_pred_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_pred_proc_info_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word * param_4);

void MR_CALL 
hlds__hlds_module__module_info_pred_proc_info_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Integer param_3,
  MR_Word * param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__hlds_module__module_info_proc_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_proc_info_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Integer param_3,
  MR_Word * param_4);

void MR_CALL 
hlds__hlds_module__module_info_remove_predicate_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_analysis_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_assertion_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_class_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_complexity_proc_infos_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_cons_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_const_struct_db_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_ctor_field_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_dependency_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_event_set_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_exclusive_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_exported_enums_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_foreign_body_codes_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_foreign_decl_codes_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_foreign_import_modules_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_globals_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_has_parallel_conj_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_set_has_user_event_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_set_inst_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_instance_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_maybe_complexity_proc_map_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_maybe_recompilation_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_mode_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_must_be_stratified_preds_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_no_tag_types_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_oisu_map_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_oisu_procs_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_pragma_exported_procs_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_pred_info_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
hlds__hlds_module__module_info_set_pred_proc_info_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__hlds_module__module_info_set_pred_proc_info_6_p_0(
  MR_Word param_1,
  MR_Integer param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__hlds_module__module_info_set_predicate_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_preds_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_proc_analysis_kinds_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_proc_requests_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_special_pred_maps_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_structure_reuse_preds_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_table_struct_map_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_ts_rev_string_table_4_p_0(
  MR_Integer param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
hlds__hlds_module__module_info_set_type_ctor_gen_infos_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_type_repn_dec_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_type_spec_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_type_table_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_unused_arg_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_set_used_modules_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__hlds_module__module_info_user_final_pred_c_names_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_user_final_pred_procs_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_user_init_pred_c_names_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__module_info_user_init_pred_procs_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
hlds__hlds_module__predicate_id_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_String * param_4,
  MR_Integer * param_5);

MR_Integer MR_CALL 
hlds__hlds_module__predicate_arity_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
hlds__hlds_module__predicate_module_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_String MR_CALL 
hlds__hlds_module__predicate_name_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
hlds__hlds_module____Compare____avail_module_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____avail_module_entry_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____avail_module_map_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____complexity_arg_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____complexity_arg_kind_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____complexity_proc_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____complexity_proc_map_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____direct_arg_map_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____exported_enum_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____item_foreign_enum_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____item_foreign_export_enum_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____module_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____oisu_map_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____oisu_preds_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____pragma_exported_proc_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____proc_analysis_kind_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____table_struct_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____table_struct_map_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____type_ctor_gen_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____type_repn_decision_data_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____type_spec_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__hlds_module____Compare____unused_arg_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
hlds__hlds_module____Unify____avail_module_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____avail_module_entry_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____avail_module_map_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____complexity_arg_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____complexity_arg_kind_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____complexity_proc_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____complexity_proc_map_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____direct_arg_map_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____exported_enum_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____item_foreign_enum_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____item_foreign_export_enum_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____module_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____oisu_map_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____oisu_preds_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____pragma_exported_proc_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____proc_analysis_kind_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____table_struct_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____table_struct_map_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____type_ctor_gen_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____type_repn_decision_data_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____type_spec_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__hlds_module____Unify____unused_arg_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__hlds__hlds_module__init(void);
void mercury__hlds__hlds_module__init_type_tables(void);
void mercury__hlds__hlds_module__init_debugger(void);
const char *mercury__hlds__hlds_module__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_hlds.hlds_module

// :- end_interface hlds.hlds_module.
