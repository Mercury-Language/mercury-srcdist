:- module (parse_tree.prog_data).
:- interface.
:- type promise_type
	where	type_is_abstract_enum(2).
:- type type_and_mode.
:- interface.
:- type arg_tabling_method
	where	type_is_abstract_enum(2).
:- type c_foreign_type.
:- type call_table_strictness.
:- type can_fail
	where	type_is_abstract_enum(1).
:- type csharp_foreign_type.
:- type determinism
	where	type_is_abstract_enum(3).
:- type erlang_foreign_type.
:- type eval_method.
:- type eval_minimal_method
	where	type_is_abstract_enum(2).
:- type foreign_decl_is_local
	where	type_is_abstract_enum(1).
:- type foreign_language_type.
:- type hidden_arg_tabling_method
	where	type_is_abstract_enum(1).
:- type il_foreign_type.
:- type java_foreign_type.
:- type pragma_arg_size_info.
:- type pragma_termination_info.
:- type purity
	where	type_is_abstract_enum(2).
:- type ref_or_val
	where	type_is_abstract_enum(1).
:- type soln_count
	where	type_is_abstract_enum(2).
:- type table_attr_allow_reset
	where	type_is_abstract_enum(1).
:- type table_attr_statistics
	where	type_is_abstract_enum(1).
:- type table_attributes.
:- type table_io_is_decl
	where	type_is_abstract_enum(1).
:- type table_io_is_unitize
	where	type_is_abstract_enum(1).
:- type generic_arg_size_info(ErrorInfo).
:- type generic_termination_info(TermInfo, ErrorInfo).
:- interface.
:- type arg_size_constr.
:- type arg_size_term.
:- type pragma_constr_arg_size_info.
:- interface.
:- type datastruct.
:- type selector.
:- type structure_sharing.
:- type structure_sharing_domain.
:- type structure_sharing_pair.
:- type top_feedback.
:- type unit_selector.
:- type user_annotated_sharing.
:- type user_sharing_type_information.
:- interface.
:- type dead_datastruct.
:- type dead_datastructs.
:- type dead_var.
:- type dead_vars.
:- type live_datastruct.
:- type live_datastructs.
:- type live_var.
:- type live_vars.
:- type set_of_live_var.
:- type structure_reuse_condition.
:- type structure_reuse_conditions.
:- type structure_reuse_domain.
:- interface.
:- type mode_num.
:- interface.
:- type exception_status.
:- type exception_type
	where	type_is_abstract_enum(1).
:- interface.
:- type trailing_status
	where	type_is_abstract_enum(2).
:- interface.
:- type mm_tabling_status
	where	type_is_abstract_enum(2).
:- interface.
:- type type_subst.
:- interface.
:- type foreign_import_module_info.
:- type foreign_import_module_info_list.
:- type foreign_proc_shared_code_treatment
	where	type_is_abstract_enum(2).
:- type pragma_foreign_code_impl.
:- interface.
:- type export_enum_attributes.
:- type required_feature
	where	type_is_abstract_enum(3).
:- type uppercase_export_enum
	where	type_is_abstract_enum(1).
:- interface.
:- type abstract_type_details.
:- type arg_width.
:- type atomic_component_state.
:- type bound_inst.
:- type box_policy
	where	type_is_abstract_enum(1).
:- type builtin_type
	where	type_is_abstract_enum(2).
:- type class_id.
:- type class_interface.
:- type class_name.
:- type comparison_pred.
:- type condition.
:- type cons_id.
:- type constructor.
:- type constructor_arg.
:- type ctor_field_name.
:- type equality_pred.
:- type existq_tvars.
:- type foreign_type_assertion
	where	type_is_abstract_enum(1).
:- type ho_groundness
	where	type_is_abstract_enum(1).
:- type ho_inst_info.
:- type init_pred.
:- type inst_defn.
:- type inst_id.
:- type inst_name.
:- type inst_term.
:- type inst_var.
:- type inst_var_sub.
:- type inst_var_type.
:- type inst_varset.
:- type instance_body.
:- type instance_method.
:- type instance_methods.
:- type instance_proc_def.
:- type is_live
	where	type_is_abstract_enum(1).
:- type is_solver_type
	where	type_is_abstract_enum(1).
:- type kind.
:- type kvar.
:- type kvar_type.
:- type lambda_eval_method.
:- type may_call_mm_tabled
	where	type_is_abstract_enum(2).
:- type maybe_vartypes.
:- type mer_inst.
:- type mer_mode.
:- type mer_type.
:- type mode_defn.
:- type mode_id.
:- type must_rename
	where	type_is_abstract_enum(1).
:- type pragma_foreign_proc_attributes.
:- type pragma_foreign_proc_extra_attribute.
:- type pragma_foreign_proc_extra_attributes.
:- type pragma_var.
:- type pred_inst_info.
:- type proc_affects_liveness
	where	type_is_abstract_enum(2).
:- type proc_allocates_memory
	where	type_is_abstract_enum(2).
:- type proc_may_call_mercury
	where	type_is_abstract_enum(1).
:- type proc_may_duplicate
	where	type_is_abstract_enum(1).
:- type proc_may_modify_trail
	where	type_is_abstract_enum(1).
:- type proc_may_throw_exception
	where	type_is_abstract_enum(1).
:- type proc_registers_roots
	where	type_is_abstract_enum(2).
:- type proc_tabled_for_io
	where	type_is_abstract_enum(2).
:- type proc_terminates
	where	type_is_abstract_enum(2).
:- type proc_thread_safe
	where	type_is_abstract_enum(2).
:- type prog_constraint.
:- type prog_constraints.
:- type prog_context.
:- type prog_fundep.
:- type prog_substitution.
:- type prog_term.
:- type prog_var.
:- type prog_var_renaming.
:- type prog_var_set_types.
:- type prog_var_type.
:- type prog_vars.
:- type prog_varset.
:- type shrouded_pred_id.
:- type shrouded_pred_proc_id.
:- type shrouded_proc_id.
:- type solver_type_details.
:- type solver_type_init.
:- type trace_compiletime.
:- type trace_grade
	where	type_is_abstract_enum(4).
:- type trace_mutable_var.
:- type trace_op
	where	type_is_abstract_enum(1).
:- type trace_runtime.
:- type trace_trace_level
	where	type_is_abstract_enum(1).
:- type tsubst.
:- type tvar.
:- type tvar_kind_map.
:- type tvar_name_map.
:- type tvar_renaming.
:- type tvar_type.
:- type tvarset.
:- type type_ctor.
:- type type_defn.
:- type type_param.
:- type type_term.
:- type unify_compare.
:- type unify_is_real
	where	type_is_abstract_enum(1).
:- type uniqueness
	where	type_is_abstract_enum(3).
:- type uses_reserved_address
	where	type_is_abstract_enum(1).
:- type uses_reserved_tag
	where	type_is_abstract_enum(1).
:- type vartypes.
:- type trace_expr(Base).
:- interface.
:- type arity.
:- type backend
	where	type_is_abstract_enum(1).
:- type event_attr_synth_call.
:- type event_attribute.
:- type event_set.
:- type event_set_data.
:- type event_spec.
:- type event_spec_map.
:- type has_main
	where	type_is_abstract_enum(1).
:- type import_locn
	where	type_is_abstract_enum(2).
:- type item_visibility
	where	type_is_abstract_enum(1).
:- type module_specifier.
:- type need_qualifier
	where	type_is_abstract_enum(1).
:- type section
	where	type_is_abstract_enum(1).
:- type simple_call_id.
:- type sym_name_and_arity.
:- type sym_name_specifier.
:- type used_modules.
