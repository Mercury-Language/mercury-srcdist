:- module (parse_tree.prog_data).
:- interface.
:- type any_inst_info.
:- type arg_reg_type_info.
:- type arg_width.
:- type arity.
:- type atomic_component_state.
:- type bound_inst.
:- type builtin_type.
:- type c_foreign_type.
:- type can_fail
	where	type_is_abstract_enum(1).
:- type class_id.
:- type class_interface.
:- type class_name.
:- type comparison_pred.
:- type cons_exist_constraints.
:- type cons_id.
:- type constructor.
:- type constructor_arg.
:- type csharp_foreign_type.
:- type ctor_field_name.
:- type determinism
	where	type_is_abstract_enum(3).
:- type equality_pred.
:- type erlang_foreign_type.
:- type existq_tvars.
:- type foreign_language_type.
:- type foreign_type_assertion
	where	type_is_abstract_enum(2).
:- type foreign_type_assertions.
:- type from_to_insts.
:- type goal_warning
	where	type_is_abstract_enum(1).
:- type ground_inst_info.
:- type has_main
	where	type_is_abstract_enum(1).
:- type head_inst_vars.
:- type ho_arg_reg
	where	type_is_abstract_enum(1).
:- type ho_groundness
	where	type_is_abstract_enum(1).
:- type ho_inst_info.
:- type init_pred.
:- type inst_defn.
:- type inst_id.
:- type inst_name.
:- type inst_result_contains_any
	where	type_is_abstract_enum(2).
:- type inst_result_contains_inst_names.
:- type inst_result_contains_inst_vars.
:- type inst_result_contains_types.
:- type inst_result_groundness
	where	type_is_abstract_enum(2).
:- type inst_result_type_ctor_propagated.
:- type inst_term.
:- type inst_test_results.
:- type inst_var.
:- type inst_var_sub.
:- type inst_var_type.
:- type inst_varset.
:- type instance_body.
:- type instance_method.
:- type instance_proc_def.
:- type int_type
	where	type_is_abstract_enum(4).
:- type is_live
	where	type_is_abstract_enum(1).
:- type is_solver_type
	where	type_is_abstract_enum(1).
:- type java_foreign_type.
:- type kind.
:- type kvar.
:- type kvar_type.
:- type lambda_eval_method.
:- type maybe_canonical.
:- type maybe_class_method
	where	type_is_abstract_enum(1).
:- type maybe_cons_exist_constraints.
:- type mer_inst.
:- type mer_mode.
:- type mer_type.
:- type merge_inst_info.
:- type mm_tabling_status
	where	type_is_abstract_enum(2).
:- type mode_defn.
:- type mode_id.
:- type need_qualifier
	where	type_is_abstract_enum(1).
:- type noncanonical.
:- type pred_inst_info.
:- type prog_constraint.
:- type prog_constraints.
:- type prog_context.
:- type prog_fundep.
:- type prog_substitution.
:- type prog_term.
:- type prog_var.
:- type prog_var_renaming.
:- type prog_var_type.
:- type prog_vars.
:- type prog_varset.
:- type promise_type
	where	type_is_abstract_enum(2).
:- type purity
	where	type_is_abstract_enum(2).
:- type shrouded_pred_id.
:- type shrouded_pred_proc_id.
:- type shrouded_proc_id.
:- type simple_call_id.
:- type soln_count
	where	type_is_abstract_enum(2).
:- type solver_type_details.
:- type sym_name_and_arity.
:- type sym_name_specifier.
:- type trace_compiletime.
:- type trace_expr(Base).
:- type trace_grade
	where	type_is_abstract_enum(4).
:- type trace_mutable_var.
:- type trace_op
	where	type_is_abstract_enum(1).
:- type trace_runtime.
:- type trace_trace_level
	where	type_is_abstract_enum(1).
:- type trailing_status
	where	type_is_abstract_enum(2).
:- type tsubst.
:- type tvar.
:- type tvar_kind_map.
:- type tvar_name_map.
:- type tvar_renaming.
:- type tvar_type.
:- type tvarset.
:- type type_and_mode.
:- type type_ctor.
:- type type_defn.
:- type type_details_abstract.
:- type type_details_du.
:- type type_details_eqv.
:- type type_details_foreign.
:- type type_details_solver.
:- type type_param.
:- type type_term.
:- type unify_inst_info.
:- type unify_is_real
	where	type_is_abstract_enum(1).
:- type uniqueness
	where	type_is_abstract_enum(3).
:- type uses_reserved_address
	where	type_is_abstract_enum(1).
:- type var_name_print
	where	type_is_abstract_enum(2).
:- inst (mer_inst_is_bound) for (parse_tree.prog_data).mer_inst/0 == bound(bound(ground, ground, ground)).
