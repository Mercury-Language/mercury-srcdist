:- module (parse_tree.prog_out).
:- interface.
:- use_module io.
:- use_module maybe.
:- use_module mdbcomp.
:- use_module (mdbcomp.prim_data).
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.prog_data).
:- use_module (parse_tree.prog_data_pragma).
:- func arg_tabling_method_to_string(parse_tree.prog_data_pragma.arg_tabling_method) = string.
:- func can_fail_to_string(parse_tree.prog_data.can_fail) = string.
:- func cons_id_and_arity_to_string(parse_tree.prog_data.cons_id) = string.
:- pred context_to_string(parse_tree.prog_data.prog_context, string).
:- mode context_to_string((builtin.in), (builtin.out)) is det.
:- func determinism_to_string(parse_tree.prog_data.determinism) = string.
:- func eval_method_to_string(parse_tree.prog_data_pragma.eval_method) = string.
:- func goal_warning_to_string(parse_tree.prog_data.goal_warning) = string.
:- func indent_increment = int.
:- func indent_string(int) = string.
:- pred int_const_to_string_and_suffix(parse_tree.prog_data.some_int_const, string, string).
:- mode int_const_to_string_and_suffix((builtin.in), (builtin.out), (builtin.out)) is det.
:- func maybe_arg_tabling_method_to_string(maybe.maybe(parse_tree.prog_data_pragma.arg_tabling_method)) = string.
:- func maybe_quoted_cons_id_and_arity_to_string(parse_tree.prog_data.cons_id) = string.
:- func module_name_to_escaped_string(mdbcomp.sym_name.module_name) = string.
:- func pf_sym_name_pred_form_arity_to_string(parse_tree.prog_data.pf_sym_name_arity) = string.
:- func pf_sym_name_pred_form_arity_to_string(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.sym_name_arity) = string.
:- func pf_sym_name_pred_form_arity_to_string(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.sym_name, parse_tree.prog_data.pred_form_arity) = string.
:- func pf_sym_name_user_arity_to_string(parse_tree.prog_data.pred_pf_name_arity) = string.
:- func pf_sym_name_user_arity_to_string(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.sym_name_arity) = string.
:- func pf_sym_name_user_arity_to_string(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.sym_name, parse_tree.prog_data.arity) = string.
:- func pf_sym_name_user_arity_to_unquoted_string(parse_tree.prog_data.pred_pf_name_arity) = string.
:- func pf_sym_name_user_arity_to_unquoted_string(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.sym_name_arity) = string.
:- func pf_sym_name_user_arity_to_unquoted_string(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.sym_name, parse_tree.prog_data.arity) = string.
:- func pred_or_func_to_full_str(mdbcomp.prim_data.pred_or_func) = string.
:- func pred_or_func_to_str(mdbcomp.prim_data.pred_or_func) = string.
:- func promise_to_string(parse_tree.prog_data.promise_type) = string.
:- mode promise_to_string((builtin.in)) = (builtin.out) is det.
:- mode promise_to_string((builtin.out)) = (builtin.in) is semidet.
:- mode promise_to_string((builtin.out)) = (builtin.out) is multi.
:- pred purity_name(parse_tree.prog_data.purity, string).
:- mode purity_name((builtin.in), (builtin.out)) is det.
:- mode purity_name((builtin.out), (builtin.in)) is semidet.
:- func purity_prefix_to_string(parse_tree.prog_data.purity) = string.
:- func sym_name_arity_to_string(parse_tree.prog_data.sym_name_arity) = string.
:- func sym_name_to_escaped_string(mdbcomp.sym_name.sym_name) = string.
:- func tabled_eval_method_to_pragma_name(parse_tree.prog_data_pragma.tabled_eval_method) = string.
:- func tabled_eval_method_to_string(parse_tree.prog_data_pragma.tabled_eval_method) = string.
:- func type_ctor_to_string(parse_tree.prog_data.type_ctor) = string.
:- func type_name_to_string(parse_tree.prog_data.type_ctor) = string.
:- pred type_to_debug_string(parse_tree.prog_data.tvarset, parse_tree.prog_data.mer_type, string).
:- mode type_to_debug_string((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred write_class_id(io.text_output_stream, parse_tree.prog_data.class_id, io.io, io.io).
:- mode write_class_id((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_context(parse_tree.prog_data.prog_context, io.io, io.io).
:- mode write_context((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_context(io.text_output_stream, parse_tree.prog_data.prog_context, io.io, io.io).
:- mode write_context((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_indent(io.text_output_stream, int, io.io, io.io).
:- mode write_indent((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_quoted_sym_name(mdbcomp.sym_name.sym_name, io.io, io.io).
:- mode write_quoted_sym_name((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_quoted_sym_name(io.text_output_stream, mdbcomp.sym_name.sym_name, io.io, io.io).
:- mode write_quoted_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_sym_name(mdbcomp.sym_name.sym_name, io.io, io.io).
:- mode write_sym_name((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_sym_name(io.text_output_stream, mdbcomp.sym_name.sym_name, io.io, io.io).
:- mode write_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_sym_name_arity(parse_tree.prog_data.sym_name_arity, io.io, io.io).
:- mode write_sym_name_arity((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_sym_name_arity(io.text_output_stream, parse_tree.prog_data.sym_name_arity, io.io, io.io).
:- mode write_sym_name_arity((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_type_name(io.text_output_stream, parse_tree.prog_data.type_ctor, io.io, io.io).
:- mode write_type_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
