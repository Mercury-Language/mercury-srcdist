:- module (ml_backend.ml_code_util).
:- interface.
:- import_module backend_libs.
:- import_module bool.
:- import_module hlds.
:- import_module libs.
:- import_module list.
:- import_module maybe.
:- import_module mdbcomp.
:- import_module parse_tree.
:- import_module (backend_libs.builtin_ops).
:- import_module (hlds.code_model).
:- import_module (hlds.hlds_data).
:- import_module (hlds.hlds_goal).
:- import_module (hlds.hlds_module).
:- import_module (hlds.hlds_pred).
:- import_module (hlds.hlds_rtti).
:- import_module (libs.globals).
:- import_module (mdbcomp.prim_data).
:- import_module (mdbcomp.sym_name).
:- import_module (ml_backend.ml_gen_info).
:- import_module (ml_backend.ml_global_data).
:- import_module (ml_backend.mlds).
:- import_module (parse_tree.prog_data).
:- import_module (parse_tree.prog_data_foreign).
:- type gen_pred == pred(list.list(ml_backend.mlds.mlds_local_var_defn), list.list(ml_backend.mlds.mlds_function_defn), list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- inst (gen_pred) == (pred((builtin.out), (builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det).
:- func fixup_builtin_module(mdbcomp.sym_name.module_name) = mdbcomp.sym_name.module_name.
:- func get_copy_out_option(libs.globals.globals, hlds.code_model.code_model) = bool.bool.
:- pred ml_append_return_statement(hlds.code_model.code_model, list.list(ml_backend.mlds.mlds_lval), parse_tree.prog_data.prog_context, list.list(ml_backend.mlds.mlds_stmt), list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_append_return_statement((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func ml_base_typeclass_info_method_offset = int.
:- func ml_char_type = ml_backend.mlds.mlds_type.
:- func ml_closure_arg_offset = int.
:- pred ml_combine_conj(hlds.code_model.code_model, parse_tree.prog_data.prog_context, ml_backend.ml_code_util.gen_pred, ml_backend.ml_code_util.gen_pred, list.list(ml_backend.mlds.mlds_local_var_defn), list.list(ml_backend.mlds.mlds_function_defn), list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_combine_conj((builtin.in), (builtin.in), builtin.in(((ml_backend.ml_code_util).gen_pred)), builtin.in(((ml_backend.ml_code_util).gen_pred)), (builtin.out), (builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_cond_var_lval(ml_backend.ml_gen_info.cond_seq, ml_backend.mlds.mlds_lval).
:- mode ml_cond_var_lval((builtin.in), (builtin.out)) is det.
:- pred ml_declare_env_ptr_arg(ml_backend.mlds.mlds_argument).
:- mode ml_declare_env_ptr_arg((builtin.out)) is det.
:- func ml_gen_and(ml_backend.mlds.mlds_rval, ml_backend.mlds.mlds_rval) = ml_backend.mlds.mlds_rval.
:- func ml_gen_array_elem_type(backend_libs.builtin_ops.array_elem_type) = ml_backend.mlds.mlds_type.
:- func ml_gen_assign(ml_backend.mlds.mlds_lval, ml_backend.mlds.mlds_rval, parse_tree.prog_data.prog_context) = ml_backend.mlds.mlds_stmt.
:- func ml_gen_block(list.list(ml_backend.mlds.mlds_local_var_defn), list.list(ml_backend.mlds.mlds_function_defn), list.list(ml_backend.mlds.mlds_stmt), parse_tree.prog_data.prog_context) = ml_backend.mlds.mlds_stmt.
:- pred ml_gen_box_const_rval(hlds.hlds_module.module_info, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_type, bool.bool, ml_backend.mlds.mlds_rval, ml_backend.mlds.mlds_rval, ml_backend.ml_global_data.ml_global_data, ml_backend.ml_global_data.ml_global_data).
:- mode ml_gen_box_const_rval((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_box_or_unbox_lval(parse_tree.prog_data.mer_type, parse_tree.prog_data.mer_type, parse_tree.prog_data_foreign.box_policy, ml_backend.mlds.mlds_lval, ml_backend.mlds.mlds_local_var_name, parse_tree.prog_data.prog_context, bool.bool, int, ml_backend.mlds.mlds_lval, list.list(ml_backend.mlds.mlds_local_var_defn), list.list(ml_backend.mlds.mlds_stmt), list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_box_or_unbox_lval((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_box_or_unbox_rval(hlds.hlds_module.module_info, parse_tree.prog_data.mer_type, parse_tree.prog_data.mer_type, parse_tree.prog_data_foreign.box_policy, ml_backend.mlds.mlds_rval, ml_backend.mlds.mlds_rval).
:- mode ml_gen_box_or_unbox_rval((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_call_current_success_cont(parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_stmt, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_call_current_success_cont((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func ml_gen_cond_var_decl(ml_backend.ml_gen_info.cond_seq, parse_tree.prog_data.prog_context) = ml_backend.mlds.mlds_local_var_defn.
:- pred ml_gen_failure(hlds.code_model.code_model, parse_tree.prog_data.prog_context, list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_failure((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func ml_gen_hld_field_name(maybe.maybe(parse_tree.prog_data.ctor_field_name), int) = ml_backend.mlds.mlds_field_var_name.
:- pred ml_gen_info_params(list.list(ml_backend.mlds.mlds_local_var_name), list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.mer_mode), mdbcomp.prim_data.pred_or_func, hlds.code_model.code_model, ml_backend.mlds.mlds_func_params, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_info_params((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_info_proc_params(hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id, ml_backend.mlds.mlds_func_params, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_info_proc_params((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_label_func(ml_backend.ml_gen_info.ml_gen_info, ml_backend.mlds.mlds_maybe_aux_func_id, ml_backend.mlds.mlds_func_params, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_stmt, ml_backend.mlds.mlds_function_defn).
:- mode ml_gen_label_func((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_local_for_output_arg(ml_backend.mlds.mlds_local_var_name, parse_tree.prog_data.mer_type, int, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_local_var_defn, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_local_for_output_arg((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_local_var_decl(ml_backend.mlds.mlds_local_var_name, parse_tree.prog_data.mer_type, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_local_var_defn, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_local_var_decl((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func ml_gen_local_var_name(parse_tree.prog_data.prog_varset, parse_tree.prog_data.prog_var) = ml_backend.mlds.mlds_local_var_name.
:- mode ml_gen_local_var_name((builtin.in), (builtin.in)) = builtin.out(((ml_backend.mlds).lvn_prog_var)) is det.
:- func ml_gen_local_var_names(parse_tree.prog_data.prog_varset, list.list(parse_tree.prog_data.prog_var)) = list.list(ml_backend.mlds.mlds_local_var_name).
:- func ml_gen_mlds_var_decl(ml_backend.mlds.mlds_local_var_name, ml_backend.mlds.mlds_type, ml_backend.mlds.mlds_gc_statement, parse_tree.prog_data.prog_context) = ml_backend.mlds.mlds_local_var_defn.
:- func ml_gen_mlds_var_decl_init(ml_backend.mlds.mlds_local_var_name, ml_backend.mlds.mlds_type, ml_backend.mlds.mlds_initializer, ml_backend.mlds.mlds_gc_statement, parse_tree.prog_data.prog_context) = ml_backend.mlds.mlds_local_var_defn.
:- pred ml_gen_new_func_label(maybe.maybe(ml_backend.mlds.mlds_func_params), ml_backend.mlds.mlds_maybe_aux_func_id, ml_backend.mlds.mlds_rval, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_new_func_label((builtin.in), (builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_new_label(ml_backend.mlds.mlds_label, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_new_label((builtin.out), (builtin.in), (builtin.out)) is det.
:- func ml_gen_nondet_label(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id, ml_backend.mlds.mlds_maybe_aux_func_id) = ml_backend.mlds.mlds_plain_func_name.
:- pred ml_gen_nondet_label_func(ml_backend.ml_gen_info.ml_gen_info, ml_backend.mlds.mlds_maybe_aux_func_id, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_stmt, ml_backend.mlds.mlds_function_defn).
:- mode ml_gen_nondet_label_func((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func ml_gen_not(ml_backend.mlds.mlds_rval) = ml_backend.mlds.mlds_rval.
:- func ml_gen_params(hlds.hlds_module.module_info, list.list(ml_backend.mlds.mlds_local_var_name), list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.mer_mode), mdbcomp.prim_data.pred_or_func, hlds.code_model.code_model) = ml_backend.mlds.mlds_func_params.
:- pred ml_gen_pred_label(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id, ml_backend.mlds.mlds_pred_label, ml_backend.mlds.mlds_module_name).
:- mode ml_gen_pred_label((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred ml_gen_pred_label_from_rtti(hlds.hlds_module.module_info, hlds.hlds_rtti.rtti_proc_label, ml_backend.mlds.mlds_pred_label, ml_backend.mlds.mlds_module_name).
:- mode ml_gen_pred_label_from_rtti((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred ml_gen_proc_label(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id, ml_backend.mlds.mlds_module_name, ml_backend.mlds.mlds_plain_func_name).
:- mode ml_gen_proc_label((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- func ml_gen_proc_params(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id) = ml_backend.mlds.mlds_func_params.
:- func ml_gen_proc_params_from_rtti(hlds.hlds_module.module_info, hlds.hlds_rtti.rtti_proc_label) = ml_backend.mlds.mlds_func_params.
:- func ml_gen_proc_params_inputs_only(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id) = list.list(ml_backend.mlds.mlds_argument).
:- func ml_gen_public_field_decl_flags = ml_backend.mlds.mlds_field_var_decl_flags.
:- pred ml_gen_set_cond_var(ml_backend.ml_gen_info.cond_seq, ml_backend.mlds.mlds_rval, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_stmt).
:- mode ml_gen_set_cond_var((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_set_success(ml_backend.mlds.mlds_rval, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_stmt, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_set_success((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func ml_gen_succeeded_var_decl(parse_tree.prog_data.prog_context) = ml_backend.mlds.mlds_local_var_defn.
:- pred ml_gen_success(hlds.code_model.code_model, parse_tree.prog_data.prog_context, list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_success((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_test_cond_var(ml_backend.ml_gen_info.cond_seq, ml_backend.mlds.mlds_rval).
:- mode ml_gen_test_cond_var((builtin.in), (builtin.out)) is det.
:- pred ml_gen_test_success(ml_backend.mlds.mlds_rval, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_test_success((builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_type(ml_backend.ml_gen_info.ml_gen_info, parse_tree.prog_data.mer_type, ml_backend.mlds.mlds_type).
:- mode ml_gen_type((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_var(ml_backend.ml_gen_info.ml_gen_info, parse_tree.prog_data.prog_var, ml_backend.mlds.mlds_lval).
:- mode ml_gen_var((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_var_list(ml_backend.ml_gen_info.ml_gen_info, list.list(parse_tree.prog_data.prog_var), list.list(ml_backend.mlds.mlds_lval)).
:- mode ml_gen_var_list((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_var_with_type(ml_backend.ml_gen_info.ml_gen_info, parse_tree.prog_data.prog_var, parse_tree.prog_data.mer_type, ml_backend.mlds.mlds_lval).
:- mode ml_gen_var_with_type((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_generate_constants_for_arm(list.list(parse_tree.prog_data.prog_var), hlds.hlds_goal.hlds_goal, list.list(ml_backend.mlds.mlds_rval), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_generate_constants_for_arm((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_generate_constants_for_arms(list.list(parse_tree.prog_data.prog_var), list.list(hlds.hlds_goal.hlds_goal), list.list(list.list(ml_backend.mlds.mlds_rval)), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_generate_constants_for_arms((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_generate_field_assign(ml_backend.mlds.mlds_lval, ml_backend.mlds.mlds_type, ml_backend.mlds.mlds_field_id, ml_backend.mlds.mlds_vector_common, ml_backend.mlds.mlds_type, ml_backend.mlds.mlds_rval, parse_tree.prog_data.prog_context, ml_backend.mlds.mlds_stmt, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_generate_field_assign((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_generate_field_assigns(list.list(parse_tree.prog_data.prog_var), list.list(ml_backend.mlds.mlds_type), list.list(ml_backend.mlds.mlds_field_id), ml_backend.mlds.mlds_vector_common, ml_backend.mlds.mlds_type, ml_backend.mlds.mlds_rval, parse_tree.prog_data.prog_context, list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_generate_field_assigns((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_get_env_ptr(ml_backend.mlds.mlds_rval).
:- mode ml_get_env_ptr((builtin.out)) is det.
:- pred ml_initial_cont(ml_backend.ml_gen_info.ml_gen_info, list.list(ml_backend.mlds.mlds_lval), list.list(parse_tree.prog_data.mer_type), ml_backend.ml_gen_info.success_cont).
:- mode ml_initial_cont((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func ml_int_tag_to_rval_const(hlds.hlds_data.int_tag, parse_tree.prog_data.mer_type, ml_backend.mlds.mlds_type) = ml_backend.mlds.mlds_rval.
:- func ml_int_type = ml_backend.mlds.mlds_type.
:- pred ml_is_output_det_function(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id, parse_tree.prog_data.prog_var).
:- mode ml_is_output_det_function((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- func ml_java_mercury_enum_class = ml_backend.mlds.mlds_type.
:- func ml_java_mercury_type_interface = ml_backend.mlds.mlds_type.
:- func ml_make_boxed_type = parse_tree.prog_data.mer_type.
:- func ml_make_boxed_types(parse_tree.prog_data.arity) = list.list(parse_tree.prog_data.mer_type).
:- pred ml_must_box_field_type(hlds.hlds_module.module_info, parse_tree.prog_data.mer_type, parse_tree.prog_data.arg_width).
:- mode ml_must_box_field_type((builtin.in), (builtin.in), (builtin.in)) is semidet.
:- func ml_string_type = ml_backend.mlds.mlds_type.
:- pred ml_success_lval(ml_backend.mlds.mlds_lval, ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_success_lval((builtin.out), (builtin.in), (builtin.out)) is det.
:- func ml_typeclass_info_arg_offset = int.
:- pred ml_variable_type(ml_backend.ml_gen_info.ml_gen_info, parse_tree.prog_data.prog_var, parse_tree.prog_data.mer_type).
:- mode ml_variable_type((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred ml_variable_types(ml_backend.ml_gen_info.ml_gen_info, list.list(parse_tree.prog_data.prog_var), list.list(parse_tree.prog_data.mer_type)).
:- mode ml_variable_types((builtin.in), (builtin.in), (builtin.out)) is det.
