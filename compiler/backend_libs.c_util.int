:- module (backend_libs.c_util).
:- interface.
:- import_module char.
:- import_module io.
:- import_module libs.
:- import_module list.
:- import_module maybe.
:- import_module (backend_libs.builtin_ops).
:- import_module (libs.globals).
:- import_module (libs.options).
:- type binop_category
    --->    array_index_binop 
    ;       string_index_binop 
    ;       pointer_compare_binop 
    ;       compound_compare_binop 
    ;       offset_string_compare_binop(int)
    ;       general_string_compare_binop 
    ;       string_compare_binop 
    ;       unsigned_compare_binop 
    ;       float_compare_binop 
    ;       float_arith_binop 
    ;       int_or_bool_binary_infix_binop 
    ;       int_macro_binop 
    ;       float_macro_binop .
:- type literal_language
    --->    literal_c 
    ;       literal_java 
    ;       literal_csharp .
:- type maybe_set_line_numbers
    --->    dont_set_line_numbers 
    ;       set_line_numbers .
:- type multi_string == list.list(string).
:- pred always_reset_line_num(io.text_output_stream, maybe.maybe(string), io.io, io.io).
:- mode always_reset_line_num((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred always_reset_line_num_cur_stream(maybe.maybe(string), io.io, io.io).
:- mode always_reset_line_num_cur_stream((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred always_set_line_num(io.text_output_stream, string, int, io.io, io.io).
:- mode always_set_line_num((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred always_set_line_num_cur_stream(string, int, io.io, io.io).
:- mode always_set_line_num_cur_stream((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred binop_category_string(backend_libs.builtin_ops.binary_op, backend_libs.c_util.binop_category, string).
:- mode binop_category_string((builtin.in), (builtin.out), (builtin.out)) is det.
:- pred is_valid_c_identifier(string).
:- mode is_valid_c_identifier((builtin.in)) is semidet.
:- func lookup_line_numbers(libs.globals.globals, libs.options.option) = backend_libs.c_util.maybe_set_line_numbers.
:- func make_float_literal(float) = string.
:- pred maybe_reset_line_num(io.text_output_stream, backend_libs.c_util.maybe_set_line_numbers, maybe.maybe(string), io.io, io.io).
:- mode maybe_reset_line_num((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred maybe_reset_line_num_cur_stream(backend_libs.c_util.maybe_set_line_numbers, maybe.maybe(string), io.io, io.io).
:- mode maybe_reset_line_num_cur_stream((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred maybe_set_line_num(io.text_output_stream, backend_libs.c_util.maybe_set_line_numbers, string, int, io.io, io.io).
:- mode maybe_set_line_num((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred maybe_set_line_num_cur_stream(backend_libs.c_util.maybe_set_line_numbers, string, int, io.io, io.io).
:- mode maybe_set_line_num_cur_stream((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_c_file_intro_and_grade(libs.globals.globals, string, string, string, io.io, io.io).
:- mode output_c_file_intro_and_grade((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_float_literal(io.text_output_stream, float, io.io, io.io).
:- mode output_float_literal((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_float_literal_cur_stream(float, io.io, io.io).
:- mode output_float_literal_cur_stream((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_int_expr(io.text_output_stream, int, io.io, io.io).
:- mode output_int_expr((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_int_expr_cur_stream(int, io.io, io.io).
:- mode output_int_expr_cur_stream((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_pragma_pack_pop(io.io, io.io).
:- mode output_pragma_pack_pop((builtin.di), (builtin.uo)) is det.
:- pred output_pragma_pack_push(io.io, io.io).
:- mode output_pragma_pack_push((builtin.di), (builtin.uo)) is det.
:- pred output_quoted_char(io.text_output_stream, char.char, io.io, io.io).
:- mode output_quoted_char((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_char_cur_stream(char.char, io.io, io.io).
:- mode output_quoted_char_cur_stream((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_multi_string(io.text_output_stream, backend_libs.c_util.multi_string, io.io, io.io).
:- mode output_quoted_multi_string((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_multi_string_cur_stream(backend_libs.c_util.multi_string, io.io, io.io).
:- mode output_quoted_multi_string_cur_stream((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_multi_string_lang(io.text_output_stream, backend_libs.c_util.literal_language, backend_libs.c_util.multi_string, io.io, io.io).
:- mode output_quoted_multi_string_lang((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_multi_string_lang_cur_stream(backend_libs.c_util.literal_language, backend_libs.c_util.multi_string, io.io, io.io).
:- mode output_quoted_multi_string_lang_cur_stream((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_string(io.text_output_stream, string, io.io, io.io).
:- mode output_quoted_string((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_string_cur_stream(string, io.io, io.io).
:- mode output_quoted_string_cur_stream((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_string_lang(io.text_output_stream, backend_libs.c_util.literal_language, string, io.io, io.io).
:- mode output_quoted_string_lang((builtin.in), builtin.in(bound(literal_c)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode output_quoted_string_lang((builtin.in), builtin.in(bound(literal_java)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode output_quoted_string_lang((builtin.in), builtin.in(bound(literal_csharp)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode output_quoted_string_lang((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred output_quoted_string_lang_cur_stream(backend_libs.c_util.literal_language, string, io.io, io.io).
:- mode output_quoted_string_lang_cur_stream(builtin.in(bound(literal_c)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode output_quoted_string_lang_cur_stream(builtin.in(bound(literal_java)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode output_quoted_string_lang_cur_stream(builtin.in(bound(literal_csharp)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode output_quoted_string_lang_cur_stream((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- func quote_char(char.char) = string.
:- func quote_string(string) = string.
:- pred unary_prefix_op(backend_libs.builtin_ops.unary_op, string).
:- mode unary_prefix_op((builtin.in), (builtin.out)) is det.
