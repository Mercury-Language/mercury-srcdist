:- module (parse_tree.prog_mutable).
:- interface.
:- use_module cord.
:- use_module libs.
:- use_module list.
:- use_module mdbcomp.
:- use_module set_tree234.
:- use_module (libs.globals).
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.prog_data).
:- use_module (parse_tree.prog_foreign).
:- use_module (parse_tree.prog_item).
:- type module_params
    --->    module_params(((parse_tree.prog_mutable).mp_globals) :: libs.globals.globals, ((parse_tree.prog_mutable).mp_module_name) :: mdbcomp.sym_name.sym_name, ((parse_tree.prog_mutable).mp_undef_inst_ctors) :: set_tree234.set_tree234(parse_tree.prog_data.inst_ctor), ((parse_tree.prog_mutable).mp_type_name_func) :: parse_tree.prog_mutable.type_foreign_name_func).
:- type type_foreign_name_func == (func(libs.globals.foreign_language, parse_tree.prog_data.mer_type) = string).
:- func declare_mutable_aux_preds_for_int0(mdbcomp.sym_name.module_name, parse_tree.prog_item.item_mutable_info) = list.list(parse_tree.prog_item.item_pred_decl_info).
:- pred implement_mutable(parse_tree.prog_mutable.module_params, parse_tree.prog_item.item_mutable_info, list.list(parse_tree.prog_item.item_pred_decl_info), list.list(parse_tree.prog_item.item_clause_info), list.list(parse_tree.prog_item.item_foreign_proc_info), parse_tree.prog_item.impl_pragma_fproc_export_info, cord.cord(parse_tree.prog_foreign.foreign_decl_code), cord.cord(parse_tree.prog_foreign.foreign_decl_code), cord.cord(parse_tree.prog_foreign.foreign_body_code), cord.cord(parse_tree.prog_foreign.foreign_body_code), parse_tree.prog_foreign.pred_target_names, parse_tree.prog_foreign.pred_target_names).
:- mode implement_mutable((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
