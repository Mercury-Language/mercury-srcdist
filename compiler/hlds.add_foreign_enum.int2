:- module (hlds.add_foreign_enum).
:- interface.
:- use_module assoc_list.
:- use_module bimap.
:- use_module cord.
:- use_module libs.
:- use_module list.
:- use_module map.
:- use_module maybe.
:- use_module mdbcomp.
:- use_module parse_tree.
:- use_module set_tree234.
:- use_module (hlds.hlds_data).
:- use_module (hlds.hlds_module).
:- use_module (libs.globals).
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.error_util).
:- use_module (parse_tree.prog_data).
:- type cons_id_to_tag_map == map.map(parse_tree.prog_data.cons_id, hlds.hlds_data.cons_tag).
:- type type_ctor_foreign_enums
    --->    type_ctor_foreign_enums(((hlds.add_foreign_enum).tcfe_lang_contexts) :: map.map(libs.globals.foreign_language, parse_tree.prog_data.prog_context), ((hlds.add_foreign_enum).tcfe_tag_values) :: maybe.maybe({hlds.add_foreign_enum.cons_id_to_tag_map, libs.globals.foreign_language})).
:- type type_ctor_to_foreign_enums_map == map.map(parse_tree.prog_data.type_ctor, hlds.add_foreign_enum.type_ctor_foreign_enums).
