:- module (ll_backend.trace_gen).
:- interface.
:- use_module assoc_list.
:- use_module hlds.
:- use_module libs.
:- use_module map.
:- use_module maybe.
:- use_module mdbcomp.
:- use_module pair.
:- use_module parse_tree.
:- use_module set.
:- use_module (hlds.hlds_goal).
:- use_module (hlds.hlds_module).
:- use_module (hlds.hlds_pred).
:- use_module (libs.globals).
:- use_module (ll_backend.code_info).
:- use_module (ll_backend.code_loc_dep).
:- use_module (ll_backend.continuation_info).
:- use_module (ll_backend.llds).
:- use_module (mdbcomp.goal_path).
:- use_module (parse_tree.prog_data).
:- use_module (parse_tree.set_of_var).
:- type external_event_info
    --->    external_event_info(ll_backend.llds.label, map.map(parse_tree.prog_data.tvar, set.set(ll_backend.llds.layout_locn)), ll_backend.llds.llds_code).
:- type external_trace_port
    --->    external_port_call 
    ;       external_port_exit 
    ;       external_port_fail 
    ;       external_port_tailrec_call .
:- type negation_end_port
    --->    neg_success 
    ;       neg_failure .
:- type trace_info.
:- type trace_slot_info
    --->    trace_slot_info(((ll_backend.trace_gen).slot_from_full) :: maybe.maybe(int), ((ll_backend.trace_gen).slot_io) :: maybe.maybe(int), ((ll_backend.trace_gen).slot_trail) :: maybe.maybe(int), ((ll_backend.trace_gen).slot_maxfr) :: maybe.maybe(int), ((ll_backend.trace_gen).slot_call_table) :: maybe.maybe(int), ((ll_backend.trace_gen).slot_tail_rec) :: maybe.maybe(int)).
