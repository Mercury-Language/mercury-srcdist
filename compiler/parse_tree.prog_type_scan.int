:- module (parse_tree.prog_type_scan).
:- interface.
:- use_module list.
:- use_module set.
:- use_module (parse_tree.prog_data).
:- pred constraint_get_tvars(parse_tree.prog_data.prog_constraint, list.list(parse_tree.prog_data.tvar)).
:- mode constraint_get_tvars((builtin.in), (builtin.out)) is det.
:- pred constraint_list_get_tvars(list.list(parse_tree.prog_data.prog_constraint), list.list(parse_tree.prog_data.tvar)).
:- mode constraint_list_get_tvars((builtin.in), (builtin.out)) is det.
:- pred get_unconstrained_tvars(list.list(parse_tree.prog_data.tvar), list.list(parse_tree.prog_data.prog_constraint), list.list(parse_tree.prog_data.tvar)).
:- mode get_unconstrained_tvars((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred set_of_type_vars_in_type(parse_tree.prog_data.mer_type, set.set(parse_tree.prog_data.tvar)).
:- mode set_of_type_vars_in_type((builtin.in), (builtin.out)) is det.
:- pred set_of_type_vars_in_types(list.list(parse_tree.prog_data.mer_type), set.set(parse_tree.prog_data.tvar)).
:- mode set_of_type_vars_in_types((builtin.in), (builtin.out)) is det.
:- pred type_contains_var(parse_tree.prog_data.mer_type, parse_tree.prog_data.tvar).
:- mode type_contains_var((builtin.in), (builtin.out)) is nondet.
:- pred type_list_contains_var(list.list(parse_tree.prog_data.mer_type), parse_tree.prog_data.tvar).
:- mode type_list_contains_var((builtin.in), (builtin.out)) is nondet.
:- pred type_vars_in_type(parse_tree.prog_data.mer_type, list.list(parse_tree.prog_data.tvar)).
:- mode type_vars_in_type((builtin.in), (builtin.out)) is det.
:- pred type_vars_in_types(list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.tvar)).
:- mode type_vars_in_types((builtin.in), (builtin.out)) is det.
:- pred univ_exist_constraints_get_tvars(parse_tree.prog_data.univ_exist_constraints, list.list(parse_tree.prog_data.tvar)).
:- mode univ_exist_constraints_get_tvars((builtin.in), (builtin.out)) is det.
