:- module (check_hlds.ordering_mode_constraints).
:- interface.
:- use_module list.
:- type conjunct_id == int.
:- type mode_ordering_constraint
    --->    lt(((check_hlds.ordering_mode_constraints).first) :: check_hlds.ordering_mode_constraints.conjunct_id, ((check_hlds.ordering_mode_constraints).second) :: check_hlds.ordering_mode_constraints.conjunct_id).
:- type mode_ordering_constraints == list.list(check_hlds.ordering_mode_constraints.mode_ordering_constraint).
:- type ordering_constraints_info
    --->    ordering_constraints_info(((check_hlds.ordering_mode_constraints).oci_containing_map) :: mdbcomp.goal_path.containing_goal_map, ((check_hlds.ordering_mode_constraints).oci_num_conjuncts) :: int, ((check_hlds.ordering_mode_constraints).oci_constraints) :: set.set(check_hlds.ordering_mode_constraints.mode_ordering_constraint)).
:- type_representation(conjunct_id, is_eqv_to(int)).
:- type_representation(mode_analysis_failures, is_eqv_to(list.list(check_hlds.ordering_mode_constraints.mode_analysis_failure))).
:- type_representation(mode_ordering_constraint, is_word_aligned_ptr).
:- type_representation(mode_ordering_constraints, is_eqv_to(list.list(check_hlds.ordering_mode_constraints.mode_ordering_constraint))).
:- type_representation(ordering_constraints_info, is_word_aligned_ptr).
:- type_representation(prog_var_at_conjuncts_map, is_eqv_to(multi_map.multi_map(parse_tree.prog_data.prog_var, check_hlds.build_mode_constraints.mc_rep_var))).
