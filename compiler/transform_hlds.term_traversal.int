:- module (transform_hlds.term_traversal).
:- interface.
:- import_module bag.
:- import_module io.
:- import_module list.
:- import_module maybe.
:- import_module pair.
:- import_module set.
:- import_module (hlds.hlds_goal).
:- import_module (hlds.hlds_module).
:- import_module (hlds.hlds_pred).
:- import_module (parse_tree.prog_data).
:- import_module (transform_hlds.term_errors).
:- import_module (transform_hlds.term_norm).
:- import_module (transform_hlds.term_util).
:- type path_info
	--->	path_info(((hlds.hlds_pred).pred_proc_id), (maybe.maybe((pair.pair(((hlds.hlds_pred).pred_proc_id), ((parse_tree.prog_data).prog_context))))), int, (list.list(((hlds.hlds_pred).pred_proc_id))), (bag.bag(((parse_tree.prog_data).prog_var)))).
:- type traversal_info
	--->	ok((set.set(((transform_hlds.term_traversal).path_info))), (list.list(((transform_hlds.term_errors).termination_error_context))))
	;	error((list.list(((transform_hlds.term_errors).termination_error_context))), (list.list(((transform_hlds.term_errors).termination_error_context)))).
:- type traversal_params.
:- pred init_traversal_params(((transform_hlds.term_norm).functor_info), ((hlds.hlds_pred).pred_proc_id), ((parse_tree.prog_data).prog_context), ((parse_tree.prog_data).vartypes), ((transform_hlds.term_util).used_args), ((transform_hlds.term_util).used_args), int, int, ((transform_hlds.term_traversal).traversal_params)).
:- mode init_traversal_params((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred traverse_goal(((hlds.hlds_goal).hlds_goal), ((transform_hlds.term_traversal).traversal_params), ((transform_hlds.term_traversal).traversal_info), ((transform_hlds.term_traversal).traversal_info), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), (io.io), (io.io)).
:- mode traverse_goal((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred upper_bound_active_vars((list.list(((transform_hlds.term_traversal).path_info))), (bag.bag(((parse_tree.prog_data).prog_var)))).
:- mode upper_bound_active_vars((builtin.in), (builtin.out)) is det.
