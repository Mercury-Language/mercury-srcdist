:- module (hlds.passes_aux).
:- interface.
:- import_module io.
:- import_module list.
:- import_module maybe.
:- import_module univ.
:- import_module (hlds.hlds_module).
:- import_module (hlds.hlds_pred).
:- import_module (mdbcomp.prim_data).
:- import_module (parse_tree.error_util).
:- import_module (parse_tree.prog_data).
:- type dump_info.
:- type module_cookie_task.
:- type module_pred_cookie_task.
:- type module_pred_task.
:- type module_task.
:- type pred_error_task.
:- type proc_ids_pred_task.
:- type proc_ids_task.
:- type proc_task.
:- type update_pred_task.
:- type update_proc_task.
:- inst (module_cookie_task) == (pred(in, in, out, in, out, in, out) is det).
:- inst (module_pred_cookie_task) == (pred(in, in, in, out, in, out, in, out) is det).
:- inst (module_pred_task) == (pred(in, in, in, out, in, out) is det).
:- inst (module_task) == (pred(in, in, out, in, out) is det).
:- inst (pred_error_task) == (pred(in, in, out, in, out, in, out) is det).
:- inst (proc_ids_pred_task) == (pred(in, in, in, in, out) is det).
:- inst (proc_ids_task) == (pred(in, in, in, out) is det).
:- inst (proc_task) == (pred(in, in, out) is det).
:- inst (update_pred_task) == bound(update_pred_error(((hlds.passes_aux).pred_error_task))).
:- inst (update_proc_task) == bound(update_module(((hlds.passes_aux).module_task)) ; update_module_cookie(((hlds.passes_aux).module_cookie_task), ground) ; update_module_pred(((hlds.passes_aux).module_pred_task)) ; update_module_pred_cookie(((hlds.passes_aux).module_pred_cookie_task), ground) ; update_proc(((hlds.passes_aux).proc_task)) ; update_proc_ids(((hlds.passes_aux).proc_ids_task)) ; update_proc_ids_pred(((hlds.passes_aux).proc_ids_pred_task))).
:- mode (update_pred_task) == (((hlds.passes_aux).update_pred_task) >> ((hlds.passes_aux).update_pred_task)).
:- mode (update_proc_task) == (((hlds.passes_aux).update_proc_task) >> ((hlds.passes_aux).update_proc_task)).
