:- module ((hlds.make_hlds).state_var).
:- interface.
:- use_module (parse_tree.prog_data).
:- type hlds_goal_svar_state
    --->    hlds_goal_svar_state(hlds.hlds_goal.hlds_goal, hlds.make_hlds.state_var.svar_state).
:- type svar == parse_tree.prog_data.prog_var.
:- type svar_inner_atomic_scope_info.
:- type svar_outer_atomic_scope_info.
:- type svar_state.
:- type svar_store.
:- type_representation(hlds_goal_svar_state, is_word_aligned_ptr).
:- type_representation(svar, is_eqv_to(parse_tree.prog_data.prog_var)).
:- type_representation(svar_inner_atomic_scope_info, is_word_aligned_ptr).
:- type_representation(svar_state, du_repn(notag("svar_state", map.map(hlds.make_hlds.state_var.svar, hlds.make_hlds.state_var.svar_status),  no_c_j_cs))).
:- type_representation(svar_store, is_word_aligned_ptr).
:- implementation.
:- type readonly_context_kind
    --->    roc_lambda .
