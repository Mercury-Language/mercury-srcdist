/*
** Automatically generated from `builtin_ops.m'
** by the Mercury compiler,
** version rotd-2024-09-22
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module backend_libs.builtin_ops.
// :- interface.

#ifndef MR_HEADER_GUARD_backend_libs__builtin_ops
#define MR_HEADER_GUARD_backend_libs__builtin_ops

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef BACKEND_LIBS__BUILTIN_OPS_DECL_GUARD
#define BACKEND_LIBS__BUILTIN_OPS_DECL_GUARD
#include "backend_libs.mih"

#endif



extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_arith_op_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_array_elem_type_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_binary_op_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_cmp_op_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_float_arith_op_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_int_as_uint_cmp_op_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_maybe_size_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_scalar_array_elem_type_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_shift_by_type_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_simple_assigned_expr_1;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_simple_code_1;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_simple_const_0;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_simple_test_expr_1;

extern const MR_TypeCtorInfo_Struct backend_libs__builtin_ops__backend_libs__builtin_ops__type_ctor_info_unary_op_0;

MR_bool MR_CALL 
backend_libs__builtin_ops__test_if_builtin_3_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Integer param_3);

void MR_CALL 
backend_libs__builtin_ops__translate_builtin_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_String param_3,
  MR_Integer param_4,
  MR_Word param_5,
  MR_Word * param_6);

MR_String MR_CALL 
backend_libs__builtin_ops__arith_op_c_operator_1_f_0(
  MR_Word param_1);

MR_String MR_CALL 
backend_libs__builtin_ops__cmp_op_c_operator_1_f_0(
  MR_Word param_1);

MR_String MR_CALL 
backend_libs__builtin_ops__dump_arith_op_1_f_0(
  MR_Word param_1);

MR_String MR_CALL 
backend_libs__builtin_ops__dump_cmp_op_1_f_0(
  MR_Word param_1);

MR_Word MR_CALL 
backend_libs__builtin_ops__negate_cmp_op_1_f_0(
  MR_Word param_1);

void MR_CALL 
backend_libs__builtin_ops____Compare____arith_op_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____array_elem_type_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____binary_op_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____cmp_op_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____float_arith_op_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____int_as_uint_cmp_op_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____maybe_size_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____scalar_array_elem_type_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____shift_by_type_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____simple_assigned_expr_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
backend_libs__builtin_ops____Compare____simple_code_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
backend_libs__builtin_ops____Compare____simple_const_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Compare____simple_test_expr_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
backend_libs__builtin_ops____Compare____unary_op_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__builtin_ops____Index____binary_op_0_0(
  MR_Word param_1,
  MR_Integer * param_2);

void MR_CALL 
backend_libs__builtin_ops____Index____unary_op_0_0(
  MR_Word param_1,
  MR_Integer * param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____arith_op_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____array_elem_type_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____binary_op_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____cmp_op_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____float_arith_op_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____int_as_uint_cmp_op_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____maybe_size_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____scalar_array_elem_type_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____shift_by_type_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____simple_assigned_expr_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____simple_code_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____simple_const_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____simple_test_expr_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
backend_libs__builtin_ops____Unify____unary_op_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__backend_libs__builtin_ops__init(void);
void mercury__backend_libs__builtin_ops__init_type_tables(void);
void mercury__backend_libs__builtin_ops__init_debugger(void);
const char *mercury__backend_libs__builtin_ops__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_backend_libs.builtin_ops

// :- end_interface backend_libs.builtin_ops.
