:- module (parse_tree.pred_name).
:- interface.
:- type line_number_and_counter
    --->    lnc(int, int).
:- type stm_clone_kind
    --->    stmck_top_level 
    ;       stmck_rollback 
    ;       stmck_wrapper 
    ;       stmck_simple_wrapper 
    ;       stmck_or_else .
:- type transform_name
    --->    tn_higher_order(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_higher_order_type_spec(mdbcomp.prim_data.pred_or_func, int, int)
    ;       tn_accumulator(mdbcomp.prim_data.pred_or_func, parse_tree.pred_name.line_number_and_counter)
    ;       tn_deforestation(mdbcomp.prim_data.pred_or_func, parse_tree.pred_name.line_number_and_counter)
    ;       tn_lambda(mdbcomp.prim_data.pred_or_func, parse_tree.pred_name.line_number_and_counter)
    ;       tn_loop_inv(mdbcomp.prim_data.pred_or_func, int, parse_tree.pred_name.line_number_and_counter)
    ;       tn_tupling(mdbcomp.prim_data.pred_or_func, int, parse_tree.pred_name.line_number_and_counter)
    ;       tn_untupling(mdbcomp.prim_data.pred_or_func, int, parse_tree.pred_name.line_number_and_counter)
    ;       tn_last_call_modulo_cons(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_ssdb_stdlib_proxy(mdbcomp.prim_data.pred_or_func)
    ;       tn_dep_par_conj(mdbcomp.prim_data.pred_or_func, int, list.list(int))
    ;       tn_par_distance_granularity(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_par_loop_control(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_structure_reuse(mdbcomp.prim_data.pred_or_func, int, list.list(int))
    ;       tn_pragma_type_spec(maybe.maybe(mdbcomp.prim_data.pred_or_func), parse_tree.prog_data.tvarset, parse_tree.prog_data_pragma.type_subst)
    ;       tn_io_tabling(mdbcomp.prim_data.pred_or_func)
    ;       tn_minimal_model_generator(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_stm_expanded(mdbcomp.prim_data.pred_or_func, parse_tree.pred_name.stm_clone_kind, int, int, int)
    ;       tn_unused_args(mdbcomp.prim_data.pred_or_func, int, list.list(int)).
