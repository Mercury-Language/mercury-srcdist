:- module (parse_tree.prog_io_item).
:- interface.
:- import_module list.
:- import_module mdbcomp.
:- import_module term.
:- import_module varset.
:- import_module (mdbcomp.sym_name).
:- import_module (parse_tree.prog_data).
:- import_module (parse_tree.prog_io_util).
:- import_module (parse_tree.prog_item).
:- import_module (parse_tree.status).
:- type item_or_marker
    --->    iom_item(parse_tree.prog_item.item)
    ;       iom_items(list.one_or_more(parse_tree.prog_item.item))
    ;       iom_marker_src_file(string)
    ;       iom_marker_module_start(mdbcomp.sym_name.module_name, parse_tree.prog_data.prog_context, int)
    ;       iom_marker_module_end(mdbcomp.sym_name.module_name, parse_tree.prog_data.prog_context, int)
    ;       iom_marker_section(parse_tree.status.module_section, parse_tree.prog_data.prog_context, int).
:- pred parse_decl(mdbcomp.sym_name.module_name, varset.varset, term.term, int, parse_tree.prog_io_util.maybe1(parse_tree.prog_item.item)).
:- mode parse_decl((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred parse_item_or_marker(mdbcomp.sym_name.module_name, varset.varset, term.term, int, parse_tree.prog_io_util.maybe1(parse_tree.prog_io_item.item_or_marker)).
:- mode parse_item_or_marker((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
