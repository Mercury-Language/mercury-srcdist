:- module (ml_backend.mlds_to_c_type).
:- interface.
:- use_module io.
:- use_module list.
:- use_module (ml_backend.mlds).
:- use_module (ml_backend.mlds_to_c_util).
:- type type_prefix_suffix == pred(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type, string, string).
:- inst type_prefix_suffix == (pred((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det).
:- func cast_to_prefix_string_for_c(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type) = string.
:- pred mlds_output_cast(ml_backend.mlds_to_c_util.mlds_to_c_opts, io.text_output_stream, ml_backend.mlds.mlds_type, io.io, io.io).
:- mode mlds_output_cast((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mlds_output_return_list(io.text_output_stream, pred(T, io.text_output_stream, io.io, io.io), list.list(T), io.io, io.io).
:- mode mlds_output_return_list((builtin.in), builtin.in((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mlds_output_type(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type, io.text_output_stream, io.io, io.io).
:- mode mlds_output_type((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mlds_output_type_prefix(ml_backend.mlds_to_c_util.mlds_to_c_opts, io.text_output_stream, ml_backend.mlds.mlds_type, io.io, io.io).
:- mode mlds_output_type_prefix((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mlds_output_type_suffix(ml_backend.mlds_to_c_util.mlds_to_c_opts, io.text_output_stream, ml_backend.mlds.mlds_type, ml_backend.mlds.initializer_array_size, io.io, io.io).
:- mode mlds_output_type_suffix((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mlds_output_type_suffix_no_size(ml_backend.mlds_to_c_util.mlds_to_c_opts, io.text_output_stream, ml_backend.mlds.mlds_type, io.io, io.io).
:- mode mlds_output_type_suffix_no_size((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- func return_list_to_string_for_c(list.list(string)) = string.
:- func semicanonicalize_types_in_initializer_for_c(ml_backend.mlds.mlds_initializer) = ml_backend.mlds.mlds_initializer.
:- func type_prefix_for_c(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type) = string.
:- func type_suffix_for_c(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type, ml_backend.mlds.initializer_array_size) = string.
:- func type_suffix_for_c_no_size(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type) = string.
:- pred type_to_prefix_suffix_for_c(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type, ml_backend.mlds.initializer_array_size, string, string).
:- mode type_to_prefix_suffix_for_c((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred type_to_prefix_suffix_for_c_no_size(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type, string, string).
:- mode type_to_prefix_suffix_for_c_no_size((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- func type_to_string_for_c(ml_backend.mlds_to_c_util.mlds_to_c_opts, ml_backend.mlds.mlds_type) = string.
