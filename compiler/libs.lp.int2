:- module (libs.lp).
:- interface.
:- use_module list.
:- use_module pair.
:- use_module term.
:- type coeff == pair.pair(term.var, float).
:- type direction
    --->    max 
    ;       min .
:- type equation
    --->    eqn(list.list(libs.lp.coeff), libs.lp.operator, float).
:- type equations == list.list(libs.lp.equation).
:- type objective == list.list(libs.lp.coeff).
:- type operator
    --->    op_le 
    ;       op_eq 
    ;       op_ge .
:- type result
    --->    unsatisfiable 
    ;       satisfiable(float, map.map(term.var, float)).
:- type_representation(coeff, is_eqv_to(pair.pair(term.var, float))).
:- type_representation(direction, du_repn(enum("max", "min", [],  no_c_j_cs))).
:- type_representation(equation, is_word_aligned_ptr).
:- type_representation(equations, is_eqv_to(list.list(libs.lp.equation))).
:- type_representation(objective, is_eqv_to(list.list(libs.lp.coeff))).
:- type_representation(operator, du_repn(enum("op_le", "op_eq", ["op_ge"],  no_c_j_cs))).
