/*
** Automatically generated from `lambda.m'
** by the Mercury compiler,
** version rotd-2022-02-04
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module transform_hlds.lambda.
// :- interface.

#ifndef MR_HEADER_GUARD_transform_hlds__lambda
#define MR_HEADER_GUARD_transform_hlds__lambda

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef TRANSFORM_HLDS__LAMBDA_DECL_GUARD
#define TRANSFORM_HLDS__LAMBDA_DECL_GUARD
#include "transform_hlds.mih"

#endif




extern const MR_TypeCtorInfo_Struct transform_hlds__lambda__transform_hlds__lambda__type_ctor_info_have_we_expanded_lambdas_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__lambda__transform_hlds__lambda__type_ctor_info_lambda_info_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__lambda__transform_hlds__lambda__type_ctor_info_maybe_recompute_nonlocals_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__lambda__transform_hlds__lambda__type_ctor_info_reg_wrapper_proc_0;

void MR_CALL 
transform_hlds__lambda__expand_lambda_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word * param_7,
  MR_Word param_8,
  MR_Word * param_9);

void MR_CALL 
transform_hlds__lambda__expand_lambdas_in_module_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__init_lambda_info_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word param_8,
  MR_Word * param_9);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_inst_varset_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_module_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_pred_info_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_recompute_nonlocals_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_rtti_varmaps_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_tvarset_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_varset_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_get_vartypes_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
transform_hlds__lambda__lambda_info_set_module_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
transform_hlds__lambda__lambda_info_set_recompute_nonlocals_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
transform_hlds__lambda__lambda_info_set_varset_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
transform_hlds__lambda__lambda_info_set_vartypes_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
transform_hlds__lambda____Compare____lambda_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
transform_hlds__lambda____Compare____maybe_recompute_nonlocals_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
transform_hlds__lambda____Compare____reg_wrapper_proc_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
transform_hlds__lambda____Unify____lambda_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
transform_hlds__lambda____Unify____maybe_recompute_nonlocals_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
transform_hlds__lambda____Unify____reg_wrapper_proc_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__transform_hlds__lambda__init(void);
void mercury__transform_hlds__lambda__init_type_tables(void);
void mercury__transform_hlds__lambda__init_debugger(void);
const char *mercury__transform_hlds__lambda__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_transform_hlds.lambda

// :- end_interface transform_hlds.lambda.
