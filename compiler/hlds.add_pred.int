:- module (hlds.add_pred).
:- interface.
:- use_module list.
:- use_module maybe.
:- use_module mdbcomp.
:- use_module parse_tree.
:- use_module (hlds.hlds_clauses).
:- use_module (hlds.hlds_module).
:- use_module (hlds.hlds_pred).
:- use_module (hlds.make_hlds).
:- use_module (hlds.pred_name).
:- use_module (hlds.status).
:- use_module (mdbcomp.prim_data).
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.error_util).
:- use_module (parse_tree.prog_data).
:- use_module (parse_tree.prog_item).
:- use_module ((hlds.make_hlds).make_hlds_types).
:- type part_of_predmode
    --->    not_part_of_predmode 
    ;       part_of_predmode .
:- pred add_implicit_pred_decl(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.module_name, string, parse_tree.prog_data.pred_form_arity, hlds.status.pred_status, parse_tree.prog_data.prog_context, hlds.pred_name.pred_origin, hlds.hlds_pred.goal_type, hlds.hlds_clauses.clauses_info, hlds.hlds_pred.pred_id, hlds.hlds_module.module_info, hlds.hlds_module.module_info).
:- mode add_implicit_pred_decl((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred add_implicit_pred_decl_report_error(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.module_name, string, parse_tree.prog_data.pred_form_arity, hlds.status.pred_status, parse_tree.prog_data.maybe_class_method, parse_tree.prog_data.prog_context, hlds.pred_name.pred_origin, list.list(parse_tree.error_util.format_component), hlds.hlds_pred.pred_id, hlds.hlds_module.module_info, hlds.hlds_module.module_info, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode add_implicit_pred_decl_report_error((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred add_new_proc(hlds.hlds_module.module_info, parse_tree.prog_data.prog_context, parse_tree.prog_data.item_seq_num, parse_tree.prog_data.inst_varset, list.list(parse_tree.prog_data.mer_mode), maybe.maybe(list.list(parse_tree.prog_data.mer_mode)), maybe.maybe(list.list(parse_tree.prog_data.is_live)), hlds.hlds_pred.detism_decl, maybe.maybe(parse_tree.prog_data.determinism), hlds.hlds_pred.is_address_taken, hlds.hlds_pred.has_parallel_conj, hlds.hlds_pred.pred_info, hlds.hlds_pred.pred_info, hlds.hlds_pred.proc_id).
:- mode add_new_proc((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred check_preds_if_field_access_function(hlds.hlds_module.module_info, hlds.make_hlds.make_hlds_types.sec_list(parse_tree.prog_item.item_pred_decl_info), list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode check_preds_if_field_access_function((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred module_add_mode_decl(hlds.add_pred.part_of_predmode, parse_tree.prog_data.maybe_class_method, hlds.status.item_mercury_status, hlds.status.pred_status, parse_tree.prog_item.item_mode_decl_info, hlds.hlds_pred.pred_proc_id, hlds.hlds_module.module_info, hlds.hlds_module.module_info, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode module_add_mode_decl((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred module_add_pred_decl(hlds.status.item_mercury_status, hlds.status.pred_status, parse_tree.prog_data.need_qualifier, parse_tree.prog_item.item_pred_decl_info, maybe.maybe(hlds.hlds_pred.pred_proc_id), hlds.hlds_module.module_info, hlds.hlds_module.module_info, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode module_add_pred_decl((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
