/*
** Automatically generated from `parse_util.m'
** by the Mercury compiler,
** version rotd-2020-01-28
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module parse_tree.parse_util.
// :- interface.

#ifndef MR_HEADER_GUARD_parse_tree__parse_util
#define MR_HEADER_GUARD_parse_tree__parse_util

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef PARSE_TREE__PARSE_UTIL_DECL_GUARD
#define PARSE_TREE__PARSE_UTIL_DECL_GUARD
#include "parse_tree.mih"

#endif




extern const MR_TypeCtorInfo_Struct parse_tree__parse_util__parse_tree__parse_util__type_ctor_info_conflict_1;

extern const MR_TypeCtorInfo_Struct parse_tree__parse_util__parse_tree__parse_util__type_ctor_info_maybe_pred_or_func_1;

extern const MR_TypeCtorInfo_Struct parse_tree__parse_util__parse_tree__parse_util__type_ctor_info_parser_1;

void MR_CALL 
parse_tree__parse_util__conjunction_to_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__parse_util__conjunction_to_one_or_more_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__parse_util__disjunction_to_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__parse_util__disjunction_to_one_or_more_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

MR_bool MR_CALL 
parse_tree__parse_util__list_term_to_term_list_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
parse_tree__parse_util__map_parser_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_util__one_or_more_to_conjunction_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
parse_tree__parse_util__parse_implicitly_qualified_name_and_arity_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Integer * param_5);

void MR_CALL 
parse_tree__parse_util__parse_list_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_util__parse_one_or_more_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
parse_tree__parse_util__parse_pred_or_func_and_args_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word * param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_util__parse_pred_or_func_and_args_general_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6);

MR_bool MR_CALL 
parse_tree__parse_util__parse_pred_or_func_name_and_arity_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word * param_4,
  MR_Integer * param_5);

MR_bool MR_CALL 
parse_tree__parse_util__parse_unqualified_name_and_arity_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Integer * param_4);

void MR_CALL 
parse_tree__parse_util__report_any_conflicts_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_String param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
parse_tree__parse_util__sum_to_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__parse_util__sum_to_one_or_more_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__parse_util____Compare____conflict_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_util____Compare____maybe_pred_or_func_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_util____Compare____parser_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_bool MR_CALL 
parse_tree__parse_util____Unify____conflict_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
parse_tree__parse_util____Unify____maybe_pred_or_func_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
parse_tree__parse_util____Unify____parser_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void mercury__parse_tree__parse_util__init(void);
void mercury__parse_tree__parse_util__init_type_tables(void);
void mercury__parse_tree__parse_util__init_debugger(void);
const char *mercury__parse_tree__parse_util__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_parse_tree.parse_util

// :- end_interface parse_tree.parse_util.
