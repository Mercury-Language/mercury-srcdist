:- module (backend_libs.rtti).
:- interface.
:- type base_typeclass_info.
:- type builtin_ctor.
:- type call_or_answer_table
	where	type_is_abstract_enum(1).
:- type ctor_rtti_name.
:- type curr_or_prev_table
	where	type_is_abstract_enum(1).
:- type du_arg_info.
:- type du_functor.
:- type du_rep.
:- type enum_functor.
:- type enum_maybe_dummy
	where	type_is_abstract_enum(1).
:- type equality_axioms
	where	type_is_abstract_enum(1).
:- type exist_info.
:- type exist_typeinfo_locn.
:- type foreign_enum_functor.
:- type functor_subtype_info
	where	type_is_abstract_enum(1).
:- type impl_ctor
	where	type_is_abstract_enum(4).
:- type is_array
	where	type_is_abstract_enum(1).
:- type is_stable
	where	type_is_abstract_enum(1).
:- type notag_functor.
:- type proc_tabling_struct_id.
:- type ptag_map.
:- type rtti_data.
:- type rtti_id.
:- type rtti_id_maybe_element.
:- type rtti_maybe_pseudo_type_info.
:- type rtti_maybe_pseudo_type_info_or_self.
:- type rtti_pseudo_type_info.
:- type rtti_type_ctor.
:- type rtti_type_info.
:- type sectag_and_locn.
:- type sectag_locn.
:- type sectag_table.
:- type stag_map.
:- type target_prefixes.
:- type tc_constraint.
:- type tc_decl.
:- type tc_dict.
:- type tc_id.
:- type tc_instance.
:- type tc_method_id.
:- type tc_name.
:- type tc_rtti_name.
:- type tc_type.
:- type type_ctor_data.
:- type type_ctor_details.
:- type type_ctor_flag
	where	type_is_abstract_enum(1).
:- type var_arity_ctor_id
	where	type_is_abstract_enum(2).
