:- module (parse_tree.file_names).
:- interface.
:- use_module io.
:- use_module libs.
:- use_module mdbcomp.
:- use_module (libs.file_util).
:- use_module (libs.globals).
:- use_module (mdbcomp.sym_name).
:- type ext
    --->    ext_src 
    ;       ext_other(parse_tree.file_names.other_ext).
:- type maybe_create_dirs
    --->    do_create_dirs 
    ;       do_not_create_dirs .
:- type maybe_search
    --->    do_search 
    ;       do_not_search .
:- type other_ext
    --->    other_ext(string).
:- func extension_to_string(parse_tree.file_names.ext) = string.
:- pred fact_table_file_name(libs.globals.globals, string, parse_tree.file_names.maybe_create_dirs, parse_tree.file_names.other_ext, libs.file_util.file_name, libs.file_util.file_name, io.io, io.io).
:- mode fact_table_file_name((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred file_name_to_module_name(libs.file_util.file_name, mdbcomp.sym_name.module_name).
:- mode file_name_to_module_name((builtin.in), (builtin.out)) is det.
:- pred get_class_dir_name(libs.globals.globals, string).
:- mode get_class_dir_name((builtin.in), (builtin.out)) is det.
:- pred make_include_file_path(string, string, string).
:- mode make_include_file_path((builtin.in), (builtin.in), (builtin.out)) is det.
:- func make_module_dep_file_extension = parse_tree.file_names.other_ext is det.
:- pred mercury_std_library_module_name(mdbcomp.sym_name.module_name).
:- mode mercury_std_library_module_name((builtin.in)) is semidet.
:- pred module_name_to_file_name(libs.globals.globals, string, parse_tree.file_names.maybe_create_dirs, parse_tree.file_names.ext, mdbcomp.sym_name.module_name, libs.file_util.file_name, io.io, io.io).
:- mode module_name_to_file_name((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred module_name_to_file_name_stem(mdbcomp.sym_name.module_name, libs.file_util.file_name).
:- mode module_name_to_file_name_stem((builtin.in), (builtin.out)) is det.
:- pred module_name_to_lib_file_name(libs.globals.globals, string, parse_tree.file_names.maybe_create_dirs, string, parse_tree.file_names.other_ext, mdbcomp.sym_name.module_name, libs.file_util.file_name, io.io, io.io).
:- mode module_name_to_lib_file_name((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred module_name_to_make_var_name(mdbcomp.sym_name.module_name, string).
:- mode module_name_to_make_var_name((builtin.in), (builtin.out)) is det.
:- pred module_name_to_search_file_name(libs.globals.globals, string, parse_tree.file_names.ext, mdbcomp.sym_name.module_name, libs.file_util.file_name, io.io, io.io).
:- mode module_name_to_search_file_name((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred module_name_to_source_file_name(mdbcomp.sym_name.module_name, libs.file_util.file_name, io.io, io.io).
:- mode module_name_to_source_file_name((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- func other_extension_to_string(parse_tree.file_names.other_ext) = string.
:- func qualify_mercury_std_library_module_name(mdbcomp.sym_name.module_name) = mdbcomp.sym_name.module_name.
:- pred test_file_name_extensions(libs.globals.globals, io.text_output_stream, io.io, io.io).
:- mode test_file_name_extensions((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_translations_record_if_any(io.io, io.io).
:- mode write_translations_record_if_any((builtin.di), (builtin.uo)) is det.
