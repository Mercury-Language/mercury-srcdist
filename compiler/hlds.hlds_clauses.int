:- module (hlds.hlds_clauses).
:- interface.
:- import_module bool.
:- import_module list.
:- import_module maybe.
:- import_module mdbcomp.
:- import_module parse_tree.
:- import_module term.
:- import_module (hlds.hlds_args).
:- import_module (hlds.hlds_goal).
:- import_module (hlds.hlds_pred).
:- import_module (hlds.hlds_rtti).
:- import_module (hlds.vartypes).
:- import_module (mdbcomp.prim_data).
:- import_module (parse_tree.error_util).
:- import_module (parse_tree.prog_data).
:- type clause
    --->    clause(((hlds.hlds_clauses).clause_applicable_procs) :: hlds.hlds_clauses.clause_applicable_modes, ((hlds.hlds_clauses).clause_body) :: hlds.hlds_goal.hlds_goal, ((hlds.hlds_clauses).clause_lang) :: hlds.hlds_pred.implementation_language, ((hlds.hlds_clauses).clause_context) :: parse_tree.prog_data.prog_context, ((hlds.hlds_clauses).clause_statevar_warnings) :: list.list(parse_tree.error_util.error_spec)).
:- type clause_applicable_modes
    --->    all_modes 
    ;       selected_modes(list.list(hlds.hlds_pred.proc_id)).
:- type clause_item_number_region
    --->    clause_item_number_region(((hlds.hlds_clauses).cnr_lower_item_number) :: int, ((hlds.hlds_clauses).cnr_upper_item_number) :: int, ((hlds.hlds_clauses).cnr_lower_item_context) :: term.context, ((hlds.hlds_clauses).cnr_upper_item_context) :: term.context).
:- type clause_item_number_type
    --->    item_is_clause 
    ;       item_is_foreign_proc .
:- type clause_item_number_types
    --->    only_clauses 
    ;       clauses_and_foreign_procs .
:- type clause_item_numbers.
:- type clauses_info
    --->    clauses_info(((hlds.hlds_clauses).cli_varset) :: parse_tree.prog_data.prog_varset, ((hlds.hlds_clauses).cli_explicit_vartypes) :: hlds.vartypes.vartypes, ((hlds.hlds_clauses).cli_tvar_name_map) :: parse_tree.prog_data.tvar_name_map, ((hlds.hlds_clauses).cli_vartypes) :: hlds.vartypes.vartypes, ((hlds.hlds_clauses).cli_headvars) :: hlds.hlds_args.proc_arg_vector(parse_tree.prog_data.prog_var), ((hlds.hlds_clauses).cli_rep) :: hlds.hlds_clauses.clauses_rep, ((hlds.hlds_clauses).cli_item_numbers) :: hlds.hlds_clauses.clause_item_numbers, ((hlds.hlds_clauses).cli_rtti_varmaps) :: hlds.hlds_rtti.rtti_varmaps, ((hlds.hlds_clauses).cli_have_foreign_clauses) :: bool.bool, ((hlds.hlds_clauses).cli_had_syntax_errors) :: bool.bool).
:- type clauses_rep.
:- pred add_clause(hlds.hlds_clauses.clause, hlds.hlds_clauses.clauses_rep, hlds.hlds_clauses.clauses_rep).
:- mode add_clause((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred add_clause_item_number(maybe.maybe(int), term.context, hlds.hlds_clauses.clause_item_number_type, hlds.hlds_clauses.clause_item_numbers, hlds.hlds_clauses.clause_item_numbers).
:- mode add_clause_item_number((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func clause_body(hlds.hlds_clauses.clause) = hlds.hlds_goal.hlds_goal.
:- func clause_list_is_empty(hlds.hlds_clauses.clauses_rep) = bool.bool.
:- pred clauses_are_non_contiguous(hlds.hlds_clauses.clause_item_numbers, hlds.hlds_clauses.clause_item_number_types, hlds.hlds_clauses.clause_item_number_region, hlds.hlds_clauses.clause_item_number_region, list.list(hlds.hlds_clauses.clause_item_number_region)).
:- mode clauses_are_non_contiguous((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)) is semidet.
:- pred clauses_info_clauses(list.list(hlds.hlds_clauses.clause), hlds.hlds_clauses.clause_item_numbers, hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_clauses((builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred clauses_info_get_clauses_rep(hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_rep, hlds.hlds_clauses.clause_item_numbers).
:- mode clauses_info_get_clauses_rep((builtin.in), (builtin.out), (builtin.out)) is det.
:- pred clauses_info_get_explicit_vartypes(hlds.hlds_clauses.clauses_info, hlds.vartypes.vartypes).
:- mode clauses_info_get_explicit_vartypes((builtin.in), (builtin.out)) is det.
:- pred clauses_info_get_headvar_list(hlds.hlds_clauses.clauses_info, list.list(parse_tree.prog_data.prog_var)).
:- mode clauses_info_get_headvar_list((builtin.in), (builtin.out)) is det.
:- pred clauses_info_get_headvars(hlds.hlds_clauses.clauses_info, hlds.hlds_args.proc_arg_vector(parse_tree.prog_data.prog_var)).
:- mode clauses_info_get_headvars((builtin.in), (builtin.out)) is det.
:- pred clauses_info_get_rtti_varmaps(hlds.hlds_clauses.clauses_info, hlds.hlds_rtti.rtti_varmaps).
:- mode clauses_info_get_rtti_varmaps((builtin.in), (builtin.out)) is det.
:- pred clauses_info_get_varset(hlds.hlds_clauses.clauses_info, parse_tree.prog_data.prog_varset).
:- mode clauses_info_get_varset((builtin.in), (builtin.out)) is det.
:- pred clauses_info_get_vartypes(hlds.hlds_clauses.clauses_info, hlds.vartypes.vartypes).
:- mode clauses_info_get_vartypes((builtin.in), (builtin.out)) is det.
:- pred clauses_info_init(mdbcomp.prim_data.pred_or_func, int, hlds.hlds_clauses.clause_item_numbers, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_init((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred clauses_info_init_for_assertion(parse_tree.prog_data.prog_vars, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_init_for_assertion((builtin.in), (builtin.out)) is det.
:- pred clauses_info_set_clauses_rep(hlds.hlds_clauses.clauses_rep, hlds.hlds_clauses.clause_item_numbers, hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_set_clauses_rep((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred clauses_info_set_explicit_vartypes(hlds.vartypes.vartypes, hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_set_explicit_vartypes((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred clauses_info_set_headvars(hlds.hlds_args.proc_arg_vector(parse_tree.prog_data.prog_var), hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_set_headvars((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred clauses_info_set_rtti_varmaps(hlds.hlds_rtti.rtti_varmaps, hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_set_rtti_varmaps((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred clauses_info_set_varset(parse_tree.prog_data.prog_varset, hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_set_varset((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred clauses_info_set_vartypes(hlds.vartypes.vartypes, hlds.hlds_clauses.clauses_info, hlds.hlds_clauses.clauses_info).
:- mode clauses_info_set_vartypes((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred get_clause_list(list.list(hlds.hlds_clauses.clause), hlds.hlds_clauses.clauses_rep, hlds.hlds_clauses.clauses_rep).
:- mode get_clause_list((builtin.out), (builtin.in), (builtin.out)) is det.
:- pred get_clause_list_for_replacement(hlds.hlds_clauses.clauses_rep, list.list(hlds.hlds_clauses.clause)).
:- mode get_clause_list_for_replacement((builtin.in), (builtin.out)) is det.
:- pred get_clause_list_maybe_repeated(hlds.hlds_clauses.clauses_rep, list.list(hlds.hlds_clauses.clause)).
:- mode get_clause_list_maybe_repeated((builtin.in), (builtin.out)) is det.
:- pred get_first_clause(hlds.hlds_clauses.clauses_rep, hlds.hlds_clauses.clause).
:- mode get_first_clause((builtin.in), (builtin.out)) is semidet.
:- func init_clause_item_numbers_comp_gen = hlds.hlds_clauses.clause_item_numbers.
:- func init_clause_item_numbers_user = hlds.hlds_clauses.clause_item_numbers.
:- func init_clauses_rep = hlds.hlds_clauses.clauses_rep.
:- func num_clauses_in_clauses_rep(hlds.hlds_clauses.clauses_rep) = int.
:- pred set_clause_list(list.list(hlds.hlds_clauses.clause), hlds.hlds_clauses.clauses_rep).
:- mode set_clause_list((builtin.in), (builtin.out)) is det.
