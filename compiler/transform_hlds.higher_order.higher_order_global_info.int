:- module (transform_hlds.higher_order).higher_order_global_info.
:- interface.
:- use_module assoc_list.
:- use_module bool.
:- use_module counter.
:- use_module hlds.
:- use_module libs.
:- use_module list.
:- use_module map.
:- use_module maybe.
:- use_module mdbcomp.
:- use_module pair.
:- use_module parse_tree.
:- use_module set.
:- use_module term_context.
:- use_module varset.
:- use_module hlds.hlds_goal.
:- use_module hlds.hlds_module.
:- use_module hlds.hlds_pred.
:- use_module hlds.hlds_rtti.
:- use_module libs.optimization_options.
:- use_module mdbcomp.sym_name.
:- use_module parse_tree.prog_data.
:- type goal_size_map == map.map(hlds.hlds_pred.pred_id, int).
:- type higher_order_arg
    --->    higher_order_arg(((transform_hlds.higher_order).higher_order_global_info).hoa_cons_id :: parse_tree.prog_data.cons_id, ((transform_hlds.higher_order).higher_order_global_info).hoa_index :: int, ((transform_hlds.higher_order).higher_order_global_info).hoa_num_curried_args :: int, ((transform_hlds.higher_order).higher_order_global_info).hoa_curry_arg_in_caller :: list.list(parse_tree.prog_data.prog_var), ((transform_hlds.higher_order).higher_order_global_info).hoa_curry_type_in_caller :: list.list(parse_tree.prog_data.mer_type), ((transform_hlds.higher_order).higher_order_global_info).hoa_curry_rtti_type :: list.list(hlds.hlds_rtti.rtti_var_info), ((transform_hlds.higher_order).higher_order_global_info).hoa_known_curry_args :: list.list(transform_hlds.higher_order.higher_order_global_info.higher_order_arg), ((transform_hlds.higher_order).higher_order_global_info).hoa_is_constant :: bool.bool).
:- type higher_order_global_info.
:- type ho_params
    --->    ho_params(((transform_hlds.higher_order).higher_order_global_info).param_do_higher_order_spec :: libs.optimization_options.maybe_opt_higher_order, ((transform_hlds.higher_order).higher_order_global_info).param_do_type_spec :: libs.optimization_options.maybe_spec_types, ((transform_hlds.higher_order).higher_order_global_info).param_do_user_type_spec :: libs.optimization_options.maybe_spec_types_user_guided, ((transform_hlds.higher_order).higher_order_global_info).param_size_limit :: int, ((transform_hlds.higher_order).higher_order_global_info).param_arg_limit :: int).
:- type ho_request
    --->    ho_request(((transform_hlds.higher_order).higher_order_global_info).rq_caller :: hlds.hlds_pred.pred_proc_id, ((transform_hlds.higher_order).higher_order_global_info).rq_callee :: hlds.hlds_pred.pred_proc_id, ((transform_hlds.higher_order).higher_order_global_info).rq_args :: assoc_list.assoc_list(parse_tree.prog_data.prog_var, parse_tree.prog_data.mer_type), ((transform_hlds.higher_order).higher_order_global_info).rq_tvars :: list.list(parse_tree.prog_data.tvar), ((transform_hlds.higher_order).higher_order_global_info).rq_ho_args :: list.list(transform_hlds.higher_order.higher_order_global_info.higher_order_arg), ((transform_hlds.higher_order).higher_order_global_info).rq_caller_tvarset :: parse_tree.prog_data.tvarset, ((transform_hlds.higher_order).higher_order_global_info).rq_typeinfo_liveness :: bool.bool, ((transform_hlds.higher_order).higher_order_global_info).rq_request_kind :: transform_hlds.higher_order.higher_order_global_info.ho_request_kind, ((transform_hlds.higher_order).higher_order_global_info).rq_call_context :: parse_tree.prog_data.prog_context).
:- type ho_request_kind
    --->    non_user_type_spec 
    ;       user_type_spec .
:- type known_const
    --->    known_const(parse_tree.prog_data.cons_id, list.list(parse_tree.prog_data.prog_var)).
:- type known_var_map == map.map(parse_tree.prog_data.prog_var, transform_hlds.higher_order.higher_order_global_info.known_const).
:- type match
    --->    match(transform_hlds.higher_order.higher_order_global_info.new_pred, maybe.maybe(int), list.list(parse_tree.prog_data.prog_var), list.list(parse_tree.prog_data.mer_type)).
:- type must_recompute
    --->    must_recompute 
    ;       need_not_recompute .
:- type new_pred
    --->    new_pred(((transform_hlds.higher_order).higher_order_global_info).np_version_ppid :: hlds.hlds_pred.pred_proc_id, ((transform_hlds.higher_order).higher_order_global_info).np_old_ppid :: hlds.hlds_pred.pred_proc_id, ((transform_hlds.higher_order).higher_order_global_info).np_req_ppid :: hlds.hlds_pred.pred_proc_id, ((transform_hlds.higher_order).higher_order_global_info).np_name :: mdbcomp.sym_name.sym_name, ((transform_hlds.higher_order).higher_order_global_info).np_spec_args :: list.list(transform_hlds.higher_order.higher_order_global_info.higher_order_arg), ((transform_hlds.higher_order).higher_order_global_info).np_unspec_actuals :: assoc_list.assoc_list(parse_tree.prog_data.prog_var, parse_tree.prog_data.mer_type), ((transform_hlds.higher_order).higher_order_global_info).np_extra_act_ti_vars :: list.list(parse_tree.prog_data.tvar), ((transform_hlds.higher_order).higher_order_global_info).np_call_tvarset :: parse_tree.prog_data.tvarset, ((transform_hlds.higher_order).higher_order_global_info).np_typeinfo_liveness :: bool.bool, ((transform_hlds.higher_order).higher_order_global_info).np_is_user_spec :: transform_hlds.higher_order.higher_order_global_info.ho_request_kind).
:- type new_pred_map == map.map(hlds.hlds_pred.pred_proc_id, set.set(transform_hlds.higher_order.higher_order_global_info.new_pred)).
:- type parent_version_info
    --->    parent_version_info(hlds.hlds_pred.pred_proc_id, int).
:- type version_info
    --->    version_info(hlds.hlds_pred.pred_proc_id, int, transform_hlds.higher_order.higher_order_global_info.known_var_map, list.list(transform_hlds.higher_order.higher_order_global_info.parent_version_info)).
:- type version_info_map == map.map(hlds.hlds_pred.pred_proc_id, transform_hlds.higher_order.higher_order_global_info.version_info).
:- pred get_extra_arguments(list.list(transform_hlds.higher_order.higher_order_global_info.higher_order_arg), list.list(parse_tree.prog_data.prog_var), list.list(parse_tree.prog_data.prog_var)).
:- mode get_extra_arguments(builtin.in, builtin.in, builtin.out) is det.
:- func higher_order_arg_depth(transform_hlds.higher_order.higher_order_global_info.higher_order_arg) = int.
:- func higher_order_arg_size(transform_hlds.higher_order.higher_order_global_info.higher_order_arg) = int.
:- func higher_order_args_depth(list.list(transform_hlds.higher_order.higher_order_global_info.higher_order_arg)) = int.
:- func higher_order_args_size(list.list(transform_hlds.higher_order.higher_order_global_info.higher_order_arg)) = int.
:- pred hogi_add_goal_size(hlds.hlds_pred.pred_id, int, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_add_goal_size(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- pred hogi_add_request(transform_hlds.higher_order.higher_order_global_info.ho_request, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_add_request(builtin.in, builtin.in, builtin.out) is det.
:- pred hogi_add_version(hlds.hlds_pred.pred_proc_id, transform_hlds.higher_order.higher_order_global_info.version_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_add_version(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- pred hogi_allocate_id(int, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_allocate_id(builtin.out, builtin.in, builtin.out) is det.
:- func hogi_get_goal_size_map(transform_hlds.higher_order.higher_order_global_info.higher_order_global_info) = transform_hlds.higher_order.higher_order_global_info.goal_size_map.
:- func hogi_get_module_info(transform_hlds.higher_order.higher_order_global_info.higher_order_global_info) = hlds.hlds_module.module_info.
:- func hogi_get_new_pred_map(transform_hlds.higher_order.higher_order_global_info.higher_order_global_info) = transform_hlds.higher_order.higher_order_global_info.new_pred_map.
:- func hogi_get_params(transform_hlds.higher_order.higher_order_global_info.higher_order_global_info) = transform_hlds.higher_order.higher_order_global_info.ho_params.
:- func hogi_get_requests(transform_hlds.higher_order.higher_order_global_info.higher_order_global_info) = set.set(transform_hlds.higher_order.higher_order_global_info.ho_request).
:- func hogi_get_version_info_map(transform_hlds.higher_order.higher_order_global_info.higher_order_global_info) = transform_hlds.higher_order.higher_order_global_info.version_info_map.
:- pred hogi_set_module_info(hlds.hlds_module.module_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_set_module_info(builtin.in, builtin.in, builtin.out) is det.
:- pred hogi_set_new_pred_map(transform_hlds.higher_order.higher_order_global_info.new_pred_map, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_set_new_pred_map(builtin.in, builtin.in, builtin.out) is det.
:- pred hogi_set_requests(set.set(transform_hlds.higher_order.higher_order_global_info.ho_request), transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_set_requests(builtin.in, builtin.in, builtin.out) is det.
:- pred hogi_set_version_info_map(transform_hlds.higher_order.higher_order_global_info.version_info_map, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info, transform_hlds.higher_order.higher_order_global_info.higher_order_global_info).
:- mode hogi_set_version_info_map(builtin.in, builtin.in, builtin.out) is det.
:- func init_higher_order_global_info(transform_hlds.higher_order.higher_order_global_info.ho_params, hlds.hlds_module.module_info) = transform_hlds.higher_order.higher_order_global_info.higher_order_global_info.
:- func mode_both_sides_to_unify_mode(hlds.hlds_module.module_info, parse_tree.prog_data.mer_mode) = hlds.hlds_goal.unify_mode.
:- pred remove_const_higher_order_args(int, list.list(T), list.list(transform_hlds.higher_order.higher_order_global_info.higher_order_arg), list.list(T)).
:- mode remove_const_higher_order_args(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- pred version_matches(transform_hlds.higher_order.higher_order_global_info.ho_params, hlds.hlds_module.module_info, transform_hlds.higher_order.higher_order_global_info.ho_request, transform_hlds.higher_order.higher_order_global_info.new_pred, transform_hlds.higher_order.higher_order_global_info.match).
:- mode version_matches(builtin.in, builtin.in, builtin.in, builtin.in, builtin.out) is semidet.
