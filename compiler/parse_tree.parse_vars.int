:- module parse_tree.parse_vars.
:- interface.
:- use_module cord.
:- use_module list.
:- use_module term.
:- use_module varset.
:- use_module parse_tree.error_spec.
:- use_module parse_tree.maybe_error.
:- type plain_state_dot_colon_vars(T)
    --->    plain_state_dot_colon_vars(list.list(term.var(T)), list.list(term.var(T)), list.list(term.var(T)), list.list(term.var(T))).
:- type plain_state_vars(T)
    --->    plain_state_vars(list.list(term.var(T)), list.list(term.var(T))).
:- type quantifier_type
    --->    quant_type_exist 
    ;       quant_type_univ .
:- type var_or_type_var
    --->    ordinary_var 
    ;       type_var .
:- pred parse_and_check_quant_vars(parse_tree.parse_vars.quantifier_type, parse_tree.parse_vars.var_or_type_var, cord.cord(parse_tree.error_spec.format_piece), varset.varset, term.term, parse_tree.maybe_error.maybe1(list.list(term.var))).
:- mode parse_and_check_quant_vars(builtin.in, builtin.in, builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- pred parse_possibly_repeated_vars(term.term(T), varset.varset(T), cord.cord(parse_tree.error_spec.format_piece), parse_tree.maybe_error.maybe1(list.list(term.var(T)))).
:- mode parse_possibly_repeated_vars(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- pred parse_vars_state_dot_colon_vars(term.term(T), varset.varset(T), cord.cord(parse_tree.error_spec.format_piece), parse_tree.maybe_error.maybe1(parse_tree.parse_vars.plain_state_dot_colon_vars(T))).
:- mode parse_vars_state_dot_colon_vars(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- pred parse_vars_state_vars(term.term(T), varset.varset(T), cord.cord(parse_tree.error_spec.format_piece), parse_tree.maybe_error.maybe1(parse_tree.parse_vars.plain_state_vars(T))).
:- mode parse_vars_state_vars(builtin.in, builtin.in, builtin.in, builtin.out) is det.
