/*
** Automatically generated from `stack_layout.m'
** by the Mercury compiler,
** version rotd-2014-09-01
** configured for x86_64-apple-darwin13.3.0.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


/* :- module ll_backend.stack_layout. */
/* :- interface. */

#ifndef MR_HEADER_GUARD_ll_backend__stack_layout
#define MR_HEADER_GUARD_ll_backend__stack_layout

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef LL_BACKEND__STACK_LAYOUT_DECL_GUARD
#define LL_BACKEND__STACK_LAYOUT_DECL_GUARD
#include "ll_backend.mih"

#endif




#line 43 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_exec_traces_info_0;

#line 46 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_file_label_table_0;

#line 49 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_internal_label_info_0;

#line 52 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_is_label_return_0;

#line 55 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_label_layouts_info_0;

#line 58 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_label_tables_0;

#line 61 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_line_no_info_0;

#line 64 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_liveval_array_slot_0;

#line 67 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_locn_type_0;

#line 70 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_maybe_var_info_0;

#line 73 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_proc_layouts_info_0;

#line 76 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_proc_statics_info_0;

#line 79 "ll_backend.stack_layout.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_stack_layout_params_0;

#line 89 "stack_layout.m"
void MR_CALL 
ll_backend__stack_layout__compute_var_number_map_5_p_0(
#line 89 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_1,
#line 89 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_2,
#line 89 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_3,
#line 89 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_4,
#line 89 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_5);

#line 85 "stack_layout.m"
void MR_CALL 
ll_backend__stack_layout__represent_determinism_rval_2_p_0(
#line 85 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_1,
#line 85 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_2);

#line 81 "stack_layout.m"
void MR_CALL 
ll_backend__stack_layout__represent_locn_as_int_2_p_0(
#line 81 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_1,
#line 81 "stack_layout.m"
  MR_Integer * ll_backend__stack_layout__param_2);

#line 75 "stack_layout.m"
void MR_CALL 
ll_backend__stack_layout__convert_table_arg_info_6_p_0(
#line 75 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_1,
#line 75 "stack_layout.m"
  MR_Integer * ll_backend__stack_layout__param_2,
#line 75 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_3,
#line 75 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_4,
#line 75 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_5,
#line 75 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_6);

#line 69 "stack_layout.m"
void MR_CALL 
ll_backend__stack_layout__construct_closure_layout_13_p_0(
#line 69 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_1,
#line 69 "stack_layout.m"
  MR_Integer ll_backend__stack_layout__param_2,
#line 69 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_3,
#line 69 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_4,
#line 69 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_5,
#line 69 "stack_layout.m"
  MR_String ll_backend__stack_layout__param_6,
#line 69 "stack_layout.m"
  MR_Integer ll_backend__stack_layout__param_7,
#line 69 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_8,
#line 69 "stack_layout.m"
  MR_String ll_backend__stack_layout__param_9,
#line 69 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_10,
#line 69 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_11,
#line 69 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_12,
#line 69 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_13);

#line 55 "stack_layout.m"
void MR_CALL 
ll_backend__stack_layout__generate_llds_layout_data_26_p_0(
#line 55 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_1,
#line 55 "stack_layout.m"
  MR_Word ll_backend__stack_layout__param_2,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_3,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_4,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_5,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_6,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_7,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_8,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_9,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_10,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_11,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_12,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_13,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_14,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_15,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_16,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_17,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_18,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_19,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_20,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_21,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_22,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_23,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_24,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_25,
#line 55 "stack_layout.m"
  MR_Word * ll_backend__stack_layout__param_26);

void mercury__ll_backend__stack_layout__init(void);
void mercury__ll_backend__stack_layout__init_type_tables(void);
void mercury__ll_backend__stack_layout__init_debugger(void);

#ifdef __cplusplus
}
#endif

#endif /* MR_HEADER_GUARD_ll_backend.stack_layout */

/* :- end_interface ll_backend.stack_layout. */
