/*
** Automatically generated from `stack_layout.m'
** by the Mercury compiler,
** version rotd-2017-09-23
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module ll_backend.stack_layout.
// :- interface.

#ifndef MR_HEADER_GUARD_ll_backend__stack_layout
#define MR_HEADER_GUARD_ll_backend__stack_layout

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef LL_BACKEND__STACK_LAYOUT_DECL_GUARD
#define LL_BACKEND__STACK_LAYOUT_DECL_GUARD
#include "ll_backend.mih"

#endif




extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_exec_traces_info_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_file_label_table_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_internal_label_info_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_is_label_return_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_label_layouts_info_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_label_tables_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_line_no_info_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_liveval_array_slot_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_locn_type_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_maybe_var_info_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_proc_layouts_info_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_proc_statics_info_0;

extern const MR_TypeCtorInfo_Struct ll_backend__stack_layout__ll_backend__stack_layout__type_ctor_info_stack_layout_params_0;

void MR_CALL 
ll_backend__stack_layout__compute_var_number_map_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
ll_backend__stack_layout__construct_closure_layout_13_p_0(
  MR_Word param_1,
  MR_Integer param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_String param_6,
  MR_Integer param_7,
  MR_Word param_8,
  MR_String param_9,
  MR_Word param_10,
  MR_Word * param_11,
  MR_Word * param_12,
  MR_Word * param_13);

void MR_CALL 
ll_backend__stack_layout__convert_table_arg_info_6_p_0(
  MR_Word param_1,
  MR_Integer * param_2,
  MR_Word * param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
ll_backend__stack_layout__generate_llds_layout_data_26_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word * param_4,
  MR_Word * param_5,
  MR_Word * param_6,
  MR_Word * param_7,
  MR_Word * param_8,
  MR_Word * param_9,
  MR_Word * param_10,
  MR_Word * param_11,
  MR_Word * param_12,
  MR_Word * param_13,
  MR_Word * param_14,
  MR_Word * param_15,
  MR_Word * param_16,
  MR_Word * param_17,
  MR_Word * param_18,
  MR_Word * param_19,
  MR_Word * param_20,
  MR_Word * param_21,
  MR_Word * param_22,
  MR_Word * param_23,
  MR_Word * param_24,
  MR_Word * param_25,
  MR_Word * param_26);

void MR_CALL 
ll_backend__stack_layout__represent_determinism_rval_2_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
ll_backend__stack_layout__represent_locn_as_int_2_p_0(
  MR_Word param_1,
  MR_Integer * param_2);

void mercury__ll_backend__stack_layout__init(void);
void mercury__ll_backend__stack_layout__init_type_tables(void);
void mercury__ll_backend__stack_layout__init_debugger(void);
const char *mercury__ll_backend__stack_layout__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_ll_backend.stack_layout

// :- end_interface ll_backend.stack_layout.
