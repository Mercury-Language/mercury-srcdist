/*
** Automatically generated from `switch_case.m'
** by the Mercury compiler,
** version 13.05.1, configured for x86_64-apple-darwin12.3.0.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


/* :- module ll_backend.switch_case. */
/* :- interface. */

#ifndef MR_HEADER_GUARD_ll_backend__switch_case
#define MR_HEADER_GUARD_ll_backend__switch_case

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef LL_BACKEND__SWITCH_CASE_DECL_GUARD
#define LL_BACKEND__SWITCH_CASE_DECL_GUARD
#include "ll_backend.mih"

#endif




#line 42 "ll_backend.switch_case.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__switch_case__ll_backend__switch_case__type_ctor_info_case_code_included_0;

#line 45 "ll_backend.switch_case.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__switch_case__ll_backend__switch_case__type_ctor_info_case_label_info_0;

#line 48 "ll_backend.switch_case.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__switch_case__ll_backend__switch_case__type_ctor_info_case_label_map_0;

#line 51 "ll_backend.switch_case.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__switch_case__ll_backend__switch_case__type_ctor_info_represent_params_0;

#line 71 "switch_case.m"
void MR_CALL 
ll_backend__switch_case__f_85_110_117_115_101_100_65_114_103_115_95_95_112_114_101_100_95_95_97_100_100_95_114_101_109_97_105_110_105_110_103_95_99_97_115_101_95_95_91_49_93_95_48_4_p_0(
#line 71 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 71 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2,
#line 71 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_3);

#line 28 "switch_case.m"
void MR_CALL 
ll_backend__switch_case____Compare____represent_params_0_0(
#line 28 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_1,
#line 28 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2,
#line 28 "switch_case.m"
  MR_Word ll_backend__switch_case__param_3);

#line 28 "switch_case.m"
MR_bool MR_CALL 
ll_backend__switch_case____Unify____represent_params_0_0(
#line 28 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 28 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2);

#line 48 "switch_case.m"
void MR_CALL 
ll_backend__switch_case____Compare____case_label_map_0_0(
#line 48 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_1,
#line 48 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2,
#line 48 "switch_case.m"
  MR_Word ll_backend__switch_case__param_3);

#line 48 "switch_case.m"
MR_bool MR_CALL 
ll_backend__switch_case____Unify____case_label_map_0_0(
#line 48 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 48 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2);

#line 41 "switch_case.m"
void MR_CALL 
ll_backend__switch_case____Compare____case_label_info_0_0(
#line 41 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_1,
#line 41 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2,
#line 41 "switch_case.m"
  MR_Word ll_backend__switch_case__param_3);

#line 41 "switch_case.m"
MR_bool MR_CALL 
ll_backend__switch_case____Unify____case_label_info_0_0(
#line 41 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 41 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2);

#line 37 "switch_case.m"
void MR_CALL 
ll_backend__switch_case____Compare____case_code_included_0_0(
#line 37 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_1,
#line 37 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2,
#line 37 "switch_case.m"
  MR_Word ll_backend__switch_case__param_3);

#line 37 "switch_case.m"
MR_bool MR_CALL 
ll_backend__switch_case____Unify____case_code_included_0_0(
#line 37 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 37 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2);

#line 71 "switch_case.m"
void MR_CALL 
ll_backend__switch_case__add_remaining_case_4_p_0(
#line 71 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 71 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2,
#line 71 "switch_case.m"
  MR_Word ll_backend__switch_case__param_3,
#line 71 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_4);

#line 68 "switch_case.m"
void MR_CALL 
ll_backend__switch_case__generate_case_code_or_jump_4_p_0(
#line 68 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 68 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_2,
#line 68 "switch_case.m"
  MR_Word ll_backend__switch_case__param_3,
#line 68 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_4);

#line 62 "switch_case.m"
void MR_CALL 
ll_backend__switch_case__represent_tagged_case_for_llds_9_p_0(
#line 62 "switch_case.m"
  MR_Word ll_backend__switch_case__param_1,
#line 62 "switch_case.m"
  MR_Word ll_backend__switch_case__param_2,
#line 62 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_3,
#line 62 "switch_case.m"
  MR_Word ll_backend__switch_case__param_4,
#line 62 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_5,
#line 62 "switch_case.m"
  MR_Word ll_backend__switch_case__param_6,
#line 62 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_7,
#line 62 "switch_case.m"
  MR_Word ll_backend__switch_case__param_8,
#line 62 "switch_case.m"
  MR_Word * ll_backend__switch_case__param_9);

void mercury__ll_backend__switch_case__init(void);
void mercury__ll_backend__switch_case__init_type_tables(void);
void mercury__ll_backend__switch_case__init_debugger(void);

#ifdef __cplusplus
}
#endif

#endif /* MR_HEADER_GUARD_ll_backend.switch_case */

/* :- end_interface ll_backend.switch_case. */
