:- module ll_backend.opt_debug.
:- interface.
:- use_module assoc_list.
:- use_module backend_libs.
:- use_module bool.
:- use_module hlds.
:- use_module io.
:- use_module list.
:- use_module maybe.
:- use_module mdbcomp.
:- use_module pair.
:- use_module backend_libs.builtin_ops.
:- use_module backend_libs.rtti.
:- use_module hlds.code_model.
:- use_module hlds.hlds_llds.
:- use_module ll_backend.layout.
:- use_module ll_backend.livemap.
:- use_module ll_backend.llds.
:- use_module mdbcomp.prim_data.
:- func dump_binop(backend_libs.builtin_ops.binary_op) = string.
:- func dump_bool(bool.bool) = string.
:- func dump_code_addr(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.code_addr) = string.
:- func dump_code_addrs(maybe.maybe(mdbcomp.prim_data.proc_label), list.list(ll_backend.llds.code_addr)) = string.
:- func dump_code_model(hlds.code_model.code_model) = string.
:- func dump_const(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.rval_const) = string.
:- func dump_data_id(ll_backend.llds.data_id) = string.
:- func dump_fullinstr(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.maybe_auto_comments, ll_backend.llds.instruction) = string.
:- func dump_fullinstrs(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.maybe_auto_comments, list.list(ll_backend.llds.instruction)) = string.
:- func dump_instr(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.maybe_auto_comments, ll_backend.llds.instr) = string.
:- func dump_instrs(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.maybe_auto_comments, list.list(ll_backend.llds.instruction)) = string.
:- func dump_intlist(list.list(int)) = string.
:- func dump_label(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.label) = string.
:- func dump_label_pairs(maybe.maybe(mdbcomp.prim_data.proc_label), list.list(pair.pair(ll_backend.llds.label))) = string.
:- func dump_labels(maybe.maybe(mdbcomp.prim_data.proc_label), list.list(ll_backend.llds.label)) = string.
:- func dump_labels_or_not_reached(maybe.maybe(mdbcomp.prim_data.proc_label), list.list(maybe.maybe(ll_backend.llds.label))) = string.
:- func dump_layout_array_name(ll_backend.layout.layout_array_name) = string.
:- func dump_layout_name(ll_backend.layout.layout_name) = string.
:- func dump_layout_slot_name(ll_backend.layout.layout_slot_name) = string.
:- func dump_livemap(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.livemap.livemap) = string.
:- func dump_livemaplist(maybe.maybe(mdbcomp.prim_data.proc_label), assoc_list.assoc_list(ll_backend.llds.label, ll_backend.livemap.lvalset)) = string.
:- func dump_livevals(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.livemap.lvalset) = string.
:- func dump_lval(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.lval) = string.
:- func dump_lvals(maybe.maybe(mdbcomp.prim_data.proc_label), list.list(ll_backend.llds.lval)) = string.
:- func dump_maybe_rvals(maybe.maybe(mdbcomp.prim_data.proc_label), list.list(maybe.maybe(ll_backend.llds.rval)), int) = string.
:- func dump_mem_ref(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.mem_ref) = string.
:- func dump_proclabel(mdbcomp.prim_data.proc_label) = string.
:- func dump_reg(hlds.hlds_llds.reg_type, int) = string.
:- func dump_rtti_name(backend_libs.rtti.ctor_rtti_name) = string.
:- func dump_rtti_type_class_instance_types(list.list(backend_libs.rtti.tc_type)) = string.
:- func dump_rtti_type_class_name(backend_libs.rtti.tc_name) = string.
:- func dump_rtti_type_ctor(backend_libs.rtti.rtti_type_ctor) = string.
:- func dump_rval(maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.rval) = string.
:- func dump_rvals(maybe.maybe(mdbcomp.prim_data.proc_label), list.list(ll_backend.llds.rval)) = string.
:- func dump_stack_incr_kind(ll_backend.llds.stack_incr_kind) = string.
:- func dump_tc_rtti_name(backend_libs.rtti.tc_rtti_name) = string.
:- func dump_unop(backend_libs.builtin_ops.unary_op) = string.
:- pred maybe_write_instrs(io.text_output_stream, bool.bool, ll_backend.llds.maybe_auto_comments, maybe.maybe(mdbcomp.prim_data.proc_label), list.list(ll_backend.llds.instruction), io.io, io.io).
:- mode maybe_write_instrs(builtin.in, builtin.in, builtin.in, builtin.in, builtin.in, builtin.di, builtin.uo) is det.
:- pred msg(io.text_output_stream, bool.bool, int, string, io.io, io.io).
:- mode msg(builtin.in, builtin.in, builtin.in, builtin.in, builtin.di, builtin.uo) is det.
:- pred write_instrs(io.text_output_stream, list.list(ll_backend.llds.instruction), maybe.maybe(mdbcomp.prim_data.proc_label), ll_backend.llds.maybe_auto_comments, io.io, io.io).
:- mode write_instrs(builtin.in, builtin.in, builtin.in, builtin.in, builtin.di, builtin.uo) is det.
