:- module (check_hlds.typecheck_info).
:- interface.
:- use_module list.
:- use_module map.
:- use_module (parse_tree.prog_data).
:- type maybe_rhs_lambda
    --->    has_no_rhs_lambda 
    ;       has_rhs_lambda .
:- type overloaded_symbol
    --->    overloaded_pred(parse_tree.prog_data.sym_name_pred_form_arity, list.list(hlds.hlds_pred.pred_id))
    ;       overloaded_func(parse_tree.prog_data.cons_id, list.list(check_hlds.type_assign.cons_type_info_source)).
:- type overloaded_symbol_map == map.map(check_hlds.typecheck_info.overloaded_symbol, list.list(parse_tree.prog_data.prog_context)).
:- type type_error_clause_context
    --->    type_error_clause_context(((check_hlds.typecheck_info).tecc_module_info) :: hlds.hlds_module.module_info, ((check_hlds.typecheck_info).tecc_pred_id) :: hlds.hlds_pred.pred_id, ((check_hlds.typecheck_info).tecc_pred_markers) :: hlds.hlds_pred.pred_markers, ((check_hlds.typecheck_info).tecc_clause_num) :: int, ((check_hlds.typecheck_info).tecc_clause_context) :: parse_tree.prog_data.prog_context, ((check_hlds.typecheck_info).tecc_varset) :: parse_tree.prog_data.prog_varset).
:- type typecheck_debug_info
    --->    no_typecheck_debug 
    ;       typecheck_debug(((check_hlds.typecheck_info).td_detailed_statistics) :: bool.bool, ((check_hlds.typecheck_info).td_progress_stream) :: io.text_output_stream).
:- type typecheck_info.
