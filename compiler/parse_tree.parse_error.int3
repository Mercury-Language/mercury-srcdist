:- module (parse_tree.parse_error).
:- interface.
:- type fatal_read_module_error
	where	type_is_abstract_enum(3).
:- type nonfatal_read_module_error
	where	type_is_abstract_enum(4).
:- type read_module_errors.
:- type_representation(fatal_read_module_error, du_repn(enum("frme_could_not_find_file", "frme_could_not_open_file", ["frme_could_not_read_file", "frme_bad_submodule_start", "frme_bad_module_end"],  no_c_j_cs))).
:- type_representation(nonfatal_read_module_error, du_repn(enum("rme_unexpected_module_name", "rme_no_module_decl_at_start", ["rme_no_section_decl_at_start", "rme_end_module_not_at_end_of_src", "rme_unexpected_term_in_int_or_opt", "rme_could_not_read_term", "rme_could_not_parse_item", "rme_cannot_find_modify_time", "rme_nec"],  no_c_j_cs))).
:- type_representation(read_module_errors, is_word_aligned_ptr).
