:- module (ll_backend.llds).
:- interface.
:- import_module assoc_list.
:- import_module bool.
:- import_module cord.
:- import_module counter.
:- import_module list.
:- import_module map.
:- import_module maybe.
:- import_module set.
:- import_module term.
:- import_module (backend_libs.builtin_ops).
:- import_module (backend_libs.rtti).
:- import_module (check_hlds.type_util).
:- import_module (hlds.code_model).
:- import_module (hlds.hlds_data).
:- import_module (hlds.hlds_llds).
:- import_module (hlds.hlds_module).
:- import_module (hlds.hlds_pred).
:- import_module (ll_backend.layout).
:- import_module (mdbcomp.goal_path).
:- import_module (mdbcomp.prim_data).
:- import_module (mdbcomp.program_representation).
:- import_module (mdbcomp.sym_name).
:- import_module (parse_tree.prog_data).
:- import_module (parse_tree.prog_foreign).
:- type add_region_ops
	where	type_is_abstract_enum(1).
:- type add_trail_ops
	where	type_is_abstract_enum(1).
:- type alloc_site_id.
:- type allow_lco
	where	type_is_abstract_enum(1).
:- type c_code_live_lvals.
:- type c_file.
:- type c_global_var_ref.
:- type c_procedure.
:- type call_model.
:- type can_branch_away
	where	type_is_abstract_enum(1).
:- type cell_arg.
:- type code_addr.
:- type common_cell_arg_group.
:- type common_cell_type.
:- type common_cell_value.
:- type comp_gen_c_module.
:- type completeness
	where	type_is_abstract_enum(1).
:- type const_struct_map.
:- type data_id.
:- type double_stack_type
	where	type_is_abstract_enum(1).
:- type embedded_stack_frame_id.
:- type entry_label_type
	where	type_is_abstract_enum(2).
:- type exprn_opts.
:- type foreign_proc_component.
:- type foreign_proc_decl.
:- type foreign_proc_input.
:- type foreign_proc_output.
:- type foreign_proc_type.
:- type have_asm_labels
	where	type_is_abstract_enum(1).
:- type have_non_local_gotos
	where	type_is_abstract_enum(1).
:- type have_static_code_addresses
	where	type_is_abstract_enum(1).
:- type have_static_ground_cells
	where	type_is_abstract_enum(1).
:- type have_static_ground_floats
	where	type_is_abstract_enum(1).
:- type have_unboxed_floats
	where	type_is_abstract_enum(1).
:- type ho_call_variant.
:- type instr.
:- type instruction.
:- type label.
:- type layout_locn.
:- type layout_slot_id_kind.
:- type live_value_type.
:- type liveinfo.
:- type llds_code.
:- type llds_inst.
:- type llds_proc_id.
:- type llds_reuse.
:- type llds_type
	where	type_is_abstract_enum(4).
:- type lval.
:- type lval_or_any_reg.
:- type main_stack
	where	type_is_abstract_enum(1).
:- type may_alter_rtti
	where	type_is_abstract_enum(1).
:- type mem_ref.
:- type nondet_frame_info.
:- type nondet_tail_call
	where	type_is_abstract_enum(2).
:- type region_fill_frame_op.
:- type region_ite_kind
	where	type_is_abstract_enum(1).
:- type region_set_fixed_op
	where	type_is_abstract_enum(3).
:- type region_stack_id
	where	type_is_abstract_enum(2).
:- type region_use_frame_op.
:- type removed_at_start_of_else
	where	type_is_abstract_enum(1).
:- type reset_trail_reason
	where	type_is_abstract_enum(3).
:- type rval.
:- type rval_const.
:- type scalar_common_data_array.
:- type stack_incr_kind
	where	type_is_abstract_enum(1).
:- type tabling_info_struct.
:- type tag.
:- type temp_frame_type
	where	type_is_abstract_enum(1).
:- type type_num.
:- type typed_rval.
:- type use_float_registers
	where	type_is_abstract_enum(1).
:- type vector_common_data_array.
:- inst (instr_foreign_proc_code) == bound(foreign_proc_code(ground, ground, ground, ground, ground, ground, ground, ground, ground, ground)).
:- inst (instr_goto) == bound(goto(ground)).
:- inst (instr_if_val) == bound(if_val(ground, ground)).
:- inst (instr_llcall) == bound(llcall(ground, ground, ground, ground, ground, ground)).
