/*
** Automatically generated from `pd_term.m'
** by the Mercury compiler,
** version rotd-2020-03-16
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module transform_hlds.pd_term.
// :- interface.

#ifndef MR_HEADER_GUARD_transform_hlds__pd_term
#define MR_HEADER_GUARD_transform_hlds__pd_term

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef TRANSFORM_HLDS__PD_TERM_DECL_GUARD
#define TRANSFORM_HLDS__PD_TERM_DECL_GUARD
#include "transform_hlds.mih"

#endif




extern const MR_TypeCtorInfo_Struct transform_hlds__pd_term__transform_hlds__pd_term__type_ctor_info_global_check_result_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__pd_term__transform_hlds__pd_term__type_ctor_info_global_term_info_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__pd_term__transform_hlds__pd_term__type_ctor_info_local_term_info_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__pd_term__transform_hlds__pd_term__type_ctor_info_multiple_covering_goals_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__pd_term__transform_hlds__pd_term__type_ctor_info_pd_proc_term_info_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__pd_term__transform_hlds__pd_term__type_ctor_info_proc_pair_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__pd_term__transform_hlds__pd_term__type_ctor_info_single_covering_goals_0;

void MR_CALL 
transform_hlds__pd_term__f_85_110_117_115_101_100_65_114_103_115_95_95_112_114_101_100_95_95_103_108_111_98_97_108_95_99_104_101_99_107_95_95_91_49_44_32_53_93_95_48_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word * param_7);

MR_bool MR_CALL 
transform_hlds__pd_term__get_proc_term_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
transform_hlds__pd_term__global_check_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word * param_8,
  MR_Word * param_9);

void MR_CALL 
transform_hlds__pd_term__global_term_info_init_1_p_0(
  MR_Word * param_1);

MR_bool MR_CALL 
transform_hlds__pd_term__local_check_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
transform_hlds__pd_term__local_term_info_init_1_p_0(
  MR_Word * param_1);

void MR_CALL 
transform_hlds__pd_term__update_global_term_info_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Integer param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
transform_hlds__pd_term____Compare____global_check_result_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
transform_hlds__pd_term____Compare____global_term_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
transform_hlds__pd_term____Compare____local_term_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
transform_hlds__pd_term____Compare____pd_proc_term_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
transform_hlds__pd_term____Compare____proc_pair_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
transform_hlds__pd_term____Unify____global_check_result_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
transform_hlds__pd_term____Unify____global_term_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
transform_hlds__pd_term____Unify____local_term_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
transform_hlds__pd_term____Unify____pd_proc_term_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
transform_hlds__pd_term____Unify____proc_pair_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__transform_hlds__pd_term__init(void);
void mercury__transform_hlds__pd_term__init_type_tables(void);
void mercury__transform_hlds__pd_term__init_debugger(void);
const char *mercury__transform_hlds__pd_term__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_transform_hlds.pd_term

// :- end_interface transform_hlds.pd_term.
