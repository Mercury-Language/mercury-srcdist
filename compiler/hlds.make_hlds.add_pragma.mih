/*
** Automatically generated from `add_pragma.m'
** by the Mercury compiler,
** version rotd-2024-02-20
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module hlds.make_hlds.add_pragma.
// :- interface.

#ifndef MR_HEADER_GUARD_hlds__make_hlds__add_pragma
#define MR_HEADER_GUARD_hlds__make_hlds__add_pragma

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef HLDS__MAKE_HLDS__ADD_PRAGMA_DECL_GUARD
#define HLDS__MAKE_HLDS__ADD_PRAGMA_DECL_GUARD
#include "hlds.mih"
#include "hlds.make_hlds.mih"

#endif



extern const MR_TypeCtorInfo_Struct hlds__make_hlds__add_pragma__hlds__make_hlds__add_pragma__type_ctor_info_add_marker_pred_info_0;

extern const MR_TypeCtorInfo_Struct hlds__make_hlds__add_pragma__hlds__make_hlds__add_pragma__type_ctor_info_does_pragma_allow_modes_0;

extern const MR_TypeCtorInfo_Struct hlds__make_hlds__add_pragma__hlds__make_hlds__add_pragma__type_ctor_info_lookup_failure_handling_0;

extern const MR_TypeCtorInfo_Struct hlds__make_hlds__add_pragma__hlds__make_hlds__add_pragma__type_ctor_info_matching_pred_ids_result_0;

extern const MR_TypeCtorInfo_Struct hlds__make_hlds__add_pragma__hlds__make_hlds__add_pragma__type_ctor_info_maybe_require_one_match_0;

extern const MR_TypeCtorInfo_Struct hlds__make_hlds__add_pragma__hlds__make_hlds__add_pragma__type_ctor_info_pragma_status_class_0;

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_marker_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_markers_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragma_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5,
  MR_Word param_6,
  MR_Word * param_7,
  MR_Word param_8,
  MR_Word * param_9);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragmas_8_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word param_7,
  MR_Word * param_8);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragmas_reuse_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragmas_sharing_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragmas_termination_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragmas_termination2_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragmas_type_spec_7_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5,
  MR_Word param_6,
  MR_Word * param_7);

void MR_CALL 
hlds__make_hlds__add_pragma__add_decl_pragmas_type_spec_constr_8_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word param_7,
  MR_Word * param_8);

void MR_CALL 
hlds__make_hlds__add_pragma__add_fact_table_proc_14_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Integer param_7,
  MR_Word param_8,
  MR_Word param_9,
  MR_Integer param_10,
  MR_Word param_11,
  MR_Word * param_12,
  MR_Word param_13,
  MR_Word * param_14);

void MR_CALL 
hlds__make_hlds__add_pragma__add_fact_table_procs_14_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Integer param_7,
  MR_Word param_8,
  MR_Word param_9,
  MR_Word param_10,
  MR_Word param_11,
  MR_Word * param_12,
  MR_Word param_13,
  MR_Word * param_14);

void MR_CALL 
hlds__make_hlds__add_pragma__add_gen_pragma_exceptions_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_gen_pragma_mm_tabling_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_gen_pragma_trailing_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_gen_pragma_unused_args_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_impl_marker_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__add_impl_markers_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_impl_pragma_11_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5,
  MR_Word param_6,
  MR_Word * param_7,
  MR_Word param_8,
  MR_Word * param_9,
  MR_Word param_10,
  MR_Word * param_11);

void MR_CALL 
hlds__make_hlds__add_pragma__add_impl_pragma_tabled_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5,
  MR_Word param_6,
  MR_Word * param_7,
  MR_Word param_8,
  MR_Word * param_9);

void MR_CALL 
hlds__make_hlds__add_pragma__add_impl_pragmas_10_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word param_7,
  MR_Word * param_8,
  MR_Word param_9,
  MR_Word * param_10);

void MR_CALL 
hlds__make_hlds__add_pragma__add_impl_pragmas_tabled_8_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word param_7,
  MR_Word * param_8);

void MR_CALL 
hlds__make_hlds__add_pragma__add_marker_pred_info_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_external_proc_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_fact_table_8_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word param_7,
  MR_Word * param_8);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_foreign_proc_export_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_oisu_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_require_tail_rec_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_require_tail_rec_proc_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word * param_7,
  MR_Word param_8,
  MR_Word * param_9);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_struct_reuse_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_struct_sharing_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_termination_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pragma_termination2_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__add_pred_marker_11_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word param_8,
  MR_Word * param_9,
  MR_Word param_10,
  MR_Word * param_11);

void MR_CALL 
hlds__make_hlds__add_pragma__check_pragma_status_7_p_0(
  MR_String param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word * param_7);

void MR_CALL 
hlds__make_hlds__add_pragma__check_required_feature_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
hlds__make_hlds__add_pragma__check_required_feature_set_7_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5,
  MR_Word param_6,
  MR_Word * param_7);

void MR_CALL 
hlds__make_hlds__add_pragma__find_unique_pred_for_oisu_10_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_String param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Integer param_7,
  MR_Integer * param_8,
  MR_Word param_9,
  MR_Word * param_10);

void MR_CALL 
hlds__make_hlds__add_pragma__get_matching_pred_ids_9_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word param_8,
  MR_Word * param_9);

void MR_CALL 
hlds__make_hlds__add_pragma__get_pred_markers_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__make_hlds__add_pragma__look_up_pragma_pf_sym_arity_9_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_String param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word param_8,
  MR_Word * param_9);

void MR_CALL 
hlds__make_hlds__add_pragma__look_up_pragma_pf_sym_arity_mode_num_10_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_String param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word param_8,
  MR_Integer param_9,
  MR_Word * param_10);

void MR_CALL 
hlds__make_hlds__add_pragma__lookup_pred_orig_arity_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
hlds__make_hlds__add_pragma__mark_pred_as_external_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__mark_pred_as_format_call_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__mark_pred_as_obsolete_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__mark_pred_ids_as_obsolete_8_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6,
  MR_Word param_7,
  MR_Word * param_8);

void MR_CALL 
hlds__make_hlds__add_pragma__mark_proc_as_obsolete_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__maybe_warn_about_pfumm_unknown_7_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word * param_7);

void MR_CALL 
hlds__make_hlds__add_pragma__pragma_add_marker_10_p_0(
  MR_String param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word * param_8,
  MR_Word param_9,
  MR_Word * param_10);

void MR_CALL 
hlds__make_hlds__add_pragma__pragma_conflict_error_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_String param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
hlds__make_hlds__add_pragma__transform_selected_mode_of_pred_10_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_String param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word param_7,
  MR_Word * param_8,
  MR_Word param_9,
  MR_Word * param_10);

void MR_CALL 
hlds__make_hlds__add_pragma__warn_about_pfu_unknown_7_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6,
  MR_Word * param_7);

MR_Word MR_CALL 
hlds__make_hlds__add_pragma__report_ambiguous_pred_or_func_6_f_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6);

MR_Word MR_CALL 
hlds__make_hlds__add_pragma__report_unknown_pred_or_func_6_f_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Word param_6);

void MR_CALL 
hlds__make_hlds__add_pragma____Compare____add_marker_pred_info_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__make_hlds__add_pragma____Compare____does_pragma_allow_modes_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__make_hlds__add_pragma____Compare____lookup_failure_handling_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__make_hlds__add_pragma____Compare____matching_pred_ids_result_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__make_hlds__add_pragma____Compare____maybe_require_one_match_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
hlds__make_hlds__add_pragma____Compare____pragma_status_class_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
hlds__make_hlds__add_pragma____Unify____add_marker_pred_info_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__make_hlds__add_pragma____Unify____does_pragma_allow_modes_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__make_hlds__add_pragma____Unify____lookup_failure_handling_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__make_hlds__add_pragma____Unify____matching_pred_ids_result_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__make_hlds__add_pragma____Unify____maybe_require_one_match_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
hlds__make_hlds__add_pragma____Unify____pragma_status_class_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__hlds__make_hlds__add_pragma__init(void);
void mercury__hlds__make_hlds__add_pragma__init_type_tables(void);
void mercury__hlds__make_hlds__add_pragma__init_debugger(void);
const char *mercury__hlds__make_hlds__add_pragma__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_hlds.make_hlds.add_pragma

// :- end_interface hlds.make_hlds.add_pragma.
