:- module (check_hlds.inst_mode_type_prop).
:- interface.
:- use_module list.
:- use_module map.
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.prog_data).
:- type tprop_args
    --->    ta_pred(hlds.hlds_pred.pred_info)
    ;       ta_lambda(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.pred_form_arity, parse_tree.prog_data.prog_context)
    ;       ta_bound_inst(parse_tree.prog_data.cons_id, check_hlds.inst_mode_type_prop.tprop_context)
    ;       ta_tuple_inst(check_hlds.inst_mode_type_prop.tprop_context)
    ;       ta_ho_inst(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.pred_form_arity, check_hlds.inst_mode_type_prop.tprop_context).
:- type tprop_cache == map.map(parse_tree.prog_data.mer_type, map.map(mdbcomp.sym_name.sym_name, map.map(list.list(parse_tree.prog_data.mer_inst), check_hlds.inst_mode_type_prop.tprop_cache_result))).
:- type tprop_cache_result
    --->    tprop_cache_result_ok 
    ;       tprop_cache_result_error(parse_tree.prog_data.inst_ctor, parse_tree.prog_data.type_ctor, parse_tree.prog_data.type_ctor).
:- type tprop_context
    --->    tprop_arg_list_slot(check_hlds.inst_mode_type_prop.tprop_args, int)
    ;       tprop_inst_name_expansion(parse_tree.prog_data.sym_name_arity, check_hlds.inst_mode_type_prop.tprop_context).
