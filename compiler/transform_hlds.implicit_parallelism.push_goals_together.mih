/*
** Automatically generated from `push_goals_together.m'
** by the Mercury compiler,
** version rotd-2023-07-12
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module transform_hlds.implicit_parallelism.push_goals_together.
// :- interface.

#ifndef MR_HEADER_GUARD_transform_hlds__implicit_parallelism__push_goals_together
#define MR_HEADER_GUARD_transform_hlds__implicit_parallelism__push_goals_together

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef TRANSFORM_HLDS__IMPLICIT_PARALLELISM__PUSH_GOALS_TOGETHER_DECL_GUARD
#define TRANSFORM_HLDS__IMPLICIT_PARALLELISM__PUSH_GOALS_TOGETHER_DECL_GUARD
#include "transform_hlds.mih"
#include "transform_hlds.implicit_parallelism.mih"

#endif



extern const MR_TypeCtorInfo_Struct transform_hlds__implicit_parallelism__push_goals_together__transform_hlds__implicit_parallelism__push_goals_together__type_ctor_info_maybe_pushable_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__implicit_parallelism__push_goals_together__transform_hlds__implicit_parallelism__push_goals_together__type_ctor_info_push_info_0;

extern const MR_TypeCtorInfo_Struct transform_hlds__implicit_parallelism__push_goals_together__transform_hlds__implicit_parallelism__push_goals_together__type_ctor_info_push_result_0;

void MR_CALL 
transform_hlds__implicit_parallelism__push_goals_together__push_goals_in_proc_6_p_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
transform_hlds__implicit_parallelism__push_goals_together____Compare____push_result_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
transform_hlds__implicit_parallelism__push_goals_together____Unify____push_result_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__transform_hlds__implicit_parallelism__push_goals_together__init(void);
void mercury__transform_hlds__implicit_parallelism__push_goals_together__init_type_tables(void);
void mercury__transform_hlds__implicit_parallelism__push_goals_together__init_debugger(void);
const char *mercury__transform_hlds__implicit_parallelism__push_goals_together__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_transform_hlds.implicit_parallelism.push_goals_together

// :- end_interface transform_hlds.implicit_parallelism.push_goals_together.
