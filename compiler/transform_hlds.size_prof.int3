:- module (transform_hlds.size_prof).
:- interface.
:- type construct_transform
	where	type_is_abstract_enum(1).
:- type_representation((transform_hlds.size_prof).construct_transform, du_repn(enum("term_words", "term_cells", [], []))).
:- type_representation((transform_hlds.size_prof).known_size_map, is_eqv_to(map(prog_var, int))).
:- type_representation((transform_hlds.size_prof).rev_type_ctor_map, is_eqv_to(map(prog_var, type_ctor))).
:- type_representation((transform_hlds.size_prof).rev_type_info_map, is_eqv_to(map(prog_var, mer_type))).
:- type_representation((transform_hlds.size_prof).type_ctor_map, is_eqv_to(map(type_ctor, prog_var))).
:- type_representation((transform_hlds.size_prof).type_info_map, is_eqv_to(map(mer_type, prog_var))).
