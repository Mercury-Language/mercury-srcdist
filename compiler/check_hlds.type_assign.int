:- module (check_hlds.type_assign).
:- interface.
:- use_module hlds.
:- use_module list.
:- use_module parse_tree.
:- use_module (hlds.hlds_class).
:- use_module (hlds.hlds_cons).
:- use_module (hlds.hlds_pred).
:- use_module (parse_tree.prog_data).
:- use_module (parse_tree.vartypes).
:- type args_type_assign
    --->    args_type_assign(((check_hlds.type_assign).ata_caller_arg_assign) :: check_hlds.type_assign.type_assign, ((check_hlds.type_assign).ata_expected_arg_types) :: list.list(parse_tree.prog_data.mer_type), ((check_hlds.type_assign).ata_expected_constraints) :: hlds.hlds_class.hlds_constraints, ((check_hlds.type_assign).ata_source) :: check_hlds.type_assign.args_type_assign_source).
:- type args_type_assign_set == list.list(check_hlds.type_assign.args_type_assign).
:- type args_type_assign_source
    --->    atas_pred(hlds.hlds_pred.pred_id)
    ;       atas_higher_order_call(parse_tree.prog_data.prog_var)
    ;       atas_cons(check_hlds.type_assign.cons_type_info_source)
    ;       atas_ensure_have_a_type .
:- type coerce_constraint
    --->    coerce_constraint(((check_hlds.type_assign).coerce_from) :: parse_tree.prog_data.mer_type, ((check_hlds.type_assign).coerce_to) :: parse_tree.prog_data.mer_type, ((check_hlds.type_assign).coerce_context) :: parse_tree.prog_data.prog_context, ((check_hlds.type_assign).coerce_status) :: check_hlds.type_assign.coerce_constraint_status).
:- type coerce_constraint_status
    --->    need_to_check 
    ;       unsatisfiable .
:- type cons_type_info
    --->    cons_type_info(((check_hlds.type_assign).cti_varset) :: parse_tree.prog_data.tvarset, ((check_hlds.type_assign).cti_existq_tvars) :: parse_tree.prog_data.existq_tvars, ((check_hlds.type_assign).cti_result_type) :: parse_tree.prog_data.mer_type, ((check_hlds.type_assign).cti_arg_types) :: list.list(parse_tree.prog_data.mer_type), ((check_hlds.type_assign).cti_constraints) :: hlds.hlds_class.hlds_constraints, ((check_hlds.type_assign).cti_source) :: check_hlds.type_assign.cons_type_info_source).
:- type cons_type_info_source
    --->    source_type(parse_tree.prog_data.type_ctor, parse_tree.prog_data.cons_id)
    ;       source_builtin_type(string)
    ;       source_field_access(hlds.hlds_cons.field_access_type, parse_tree.prog_data.type_ctor, parse_tree.prog_data.cons_id, string)
    ;       source_apply(string)
    ;       source_pred(hlds.hlds_pred.pred_id).
:- type type_assign
    --->    type_assign(((check_hlds.type_assign).ta_var_types) :: parse_tree.vartypes.vartypes, ((check_hlds.type_assign).ta_type_varset) :: parse_tree.prog_data.tvarset, ((check_hlds.type_assign).ta_existq_tvars) :: list.list(parse_tree.prog_data.tvar), ((check_hlds.type_assign).ta_type_bindings) :: parse_tree.prog_data.tsubst, ((check_hlds.type_assign).ta_coerce_constraints) :: list.list(check_hlds.type_assign.coerce_constraint), ((check_hlds.type_assign).ta_class_constraints) :: hlds.hlds_class.hlds_constraints, ((check_hlds.type_assign).ta_constraint_proof_map) :: hlds.hlds_class.constraint_proof_map, ((check_hlds.type_assign).ta_constraint_map) :: hlds.hlds_class.constraint_map).
:- type type_assign_set == list.list(check_hlds.type_assign.type_assign).
:- func convert_args_type_assign_set(check_hlds.type_assign.args_type_assign_set) = check_hlds.type_assign.type_assign_set.
:- func get_caller_arg_assign(check_hlds.type_assign.args_type_assign) = check_hlds.type_assign.type_assign.
:- func get_expected_arg_types(check_hlds.type_assign.args_type_assign) = list.list(parse_tree.prog_data.mer_type).
:- func get_expected_constraints(check_hlds.type_assign.args_type_assign) = hlds.hlds_class.hlds_constraints.
:- func project_cons_type_info_source(check_hlds.type_assign.cons_type_info) = check_hlds.type_assign.cons_type_info_source.
:- pred type_assign_get_coerce_constraints(check_hlds.type_assign.type_assign, list.list(check_hlds.type_assign.coerce_constraint)).
:- mode type_assign_get_coerce_constraints((builtin.in), (builtin.out)) is det.
:- pred type_assign_get_constraint_map(check_hlds.type_assign.type_assign, hlds.hlds_class.constraint_map).
:- mode type_assign_get_constraint_map((builtin.in), (builtin.out)) is det.
:- pred type_assign_get_constraint_proof_map(check_hlds.type_assign.type_assign, hlds.hlds_class.constraint_proof_map).
:- mode type_assign_get_constraint_proof_map((builtin.in), (builtin.out)) is det.
:- pred type_assign_get_existq_tvars(check_hlds.type_assign.type_assign, list.list(parse_tree.prog_data.tvar)).
:- mode type_assign_get_existq_tvars((builtin.in), (builtin.out)) is det.
:- pred type_assign_get_type_bindings(check_hlds.type_assign.type_assign, parse_tree.prog_data.tsubst).
:- mode type_assign_get_type_bindings((builtin.in), (builtin.out)) is det.
:- pred type_assign_get_typeclass_constraints(check_hlds.type_assign.type_assign, hlds.hlds_class.hlds_constraints).
:- mode type_assign_get_typeclass_constraints((builtin.in), (builtin.out)) is det.
:- pred type_assign_get_typevarset(check_hlds.type_assign.type_assign, parse_tree.prog_data.tvarset).
:- mode type_assign_get_typevarset((builtin.in), (builtin.out)) is det.
:- pred type_assign_get_var_types(check_hlds.type_assign.type_assign, parse_tree.vartypes.vartypes).
:- mode type_assign_get_var_types((builtin.in), (builtin.out)) is det.
:- pred type_assign_set_coerce_constraints(list.list(check_hlds.type_assign.coerce_constraint), check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_coerce_constraints((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_constraint_map(hlds.hlds_class.constraint_map, check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_constraint_map((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_constraint_proof_map(hlds.hlds_class.constraint_proof_map, check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_constraint_proof_map((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_existq_tvars(list.list(parse_tree.prog_data.tvar), check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_existq_tvars((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_get_final_info(check_hlds.type_assign.type_assign_set, list.list(parse_tree.prog_data.tvar), parse_tree.prog_data.existq_tvars, parse_tree.vartypes.vartypes, parse_tree.prog_data.tvarset, parse_tree.prog_data.existq_tvars, parse_tree.vartypes.vartypes, parse_tree.prog_data.univ_exist_constraints, hlds.hlds_class.constraint_proof_map, hlds.hlds_class.constraint_map, parse_tree.prog_data.tvar_renaming, parse_tree.prog_data.tvar_renaming).
:- mode type_assign_set_get_final_info((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out)) is det.
:- pred type_assign_set_init(parse_tree.prog_data.tvarset, parse_tree.vartypes.vartypes, list.list(parse_tree.prog_data.tvar), hlds.hlds_class.hlds_constraints, check_hlds.type_assign.type_assign_set).
:- mode type_assign_set_init((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_reduce_results(parse_tree.prog_data.tvarset, parse_tree.prog_data.tsubst, hlds.hlds_class.hlds_constraints, hlds.hlds_class.constraint_proof_map, hlds.hlds_class.constraint_map, check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_reduce_results((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_type_bindings(parse_tree.prog_data.tsubst, check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_type_bindings((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_typeclass_constraints(hlds.hlds_class.hlds_constraints, check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_typeclass_constraints((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_typevarset(parse_tree.prog_data.tvarset, check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_typevarset((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred type_assign_set_var_types(parse_tree.vartypes.vartypes, check_hlds.type_assign.type_assign, check_hlds.type_assign.type_assign).
:- mode type_assign_set_var_types((builtin.in), (builtin.in), (builtin.out)) is det.
