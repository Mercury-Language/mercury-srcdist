:- module ((parse_tree.module_qual).id_set).
:- interface.
:- type class_id_set == parse_tree.module_qual.id_set.id_set.
:- type id_set.
:- type id_type
    --->    type_id 
    ;       mode_id 
    ;       inst_id 
    ;       class_id .
:- type inst_id_set == parse_tree.module_qual.id_set.id_set.
:- type mode_id_set == parse_tree.module_qual.id_set.id_set.
:- type module_id_set == parse_tree.module_qual.id_set.id_set.
:- type module_permissions
    --->    module_permissions((((parse_tree.module_qual).id_set).mp_in_int) :: parse_tree.module_qual.id_set.perm_in_int, (((parse_tree.module_qual).id_set).mp_in_imp) :: parse_tree.module_qual.id_set.perm_in_imp).
:- type mq_id
    --->    mq_id(mdbcomp.sym_name.sym_name, int).
:- type perm_in_imp
    --->    may_use_in_imp(parse_tree.prog_data.need_qualifier).
:- type perm_in_int
    --->    may_not_use_in_int 
    ;       may_use_in_int(parse_tree.prog_data.need_qualifier).
:- type type_id_set == parse_tree.module_qual.id_set.id_set.
:- type_representation(((parse_tree.module_qual).id_set).class_id_set, is_eqv_to(parse_tree.module_qual.id_set.id_set)).
:- type_representation(((parse_tree.module_qual).id_set).id_set, is_eqv_to(map.map(string, map.map(parse_tree.prog_data.arity, parse_tree.module_qual.id_set.permissions_map)))).
:- type_representation(((parse_tree.module_qual).id_set).id_type, du_repn(enum("type_id", "mode_id", ["inst_id", "class_id"], []))).
:- type_representation(((parse_tree.module_qual).id_set).inst_id_set, is_eqv_to(parse_tree.module_qual.id_set.id_set)).
:- type_representation(((parse_tree.module_qual).id_set).mode_id_set, is_eqv_to(parse_tree.module_qual.id_set.id_set)).
:- type_representation(((parse_tree.module_qual).id_set).module_id_set, is_eqv_to(parse_tree.module_qual.id_set.id_set)).
:- type_representation(((parse_tree.module_qual).id_set).module_permissions, is_word_aligned_ptr).
:- type_representation(((parse_tree.module_qual).id_set).mq_id, is_word_aligned_ptr).
:- type_representation(((parse_tree.module_qual).id_set).perm_in_imp, du_repn(notag("may_use_in_imp", []))).
:- type_representation(((parse_tree.module_qual).id_set).permissions_map, is_eqv_to(map.map(mdbcomp.sym_name.module_name, parse_tree.module_qual.id_set.module_permissions))).
:- type_representation(((parse_tree.module_qual).id_set).type_id_set, is_eqv_to(parse_tree.module_qual.id_set.id_set)).
:- implementation.
:- type id_set == map.map(string, map.map(parse_tree.prog_data.arity, parse_tree.module_qual.id_set.permissions_map)).
:- type permissions_map == map.map(mdbcomp.sym_name.module_name, parse_tree.module_qual.id_set.module_permissions).
