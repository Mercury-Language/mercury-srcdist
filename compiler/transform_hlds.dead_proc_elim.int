:- module (transform_hlds.dead_proc_elim).
:- interface.
:- import_module list.
:- import_module map.
:- import_module (hlds.hlds_module).
:- import_module (hlds.hlds_pred).
:- import_module (mdbcomp.prim_data).
:- import_module (parse_tree.error_util).
:- type dead_proc_pass
	--->	dead_proc_warning_pass 
	;	dead_proc_final_optimization_pass .
:- type entity
	--->	entity_proc(((hlds.hlds_pred).pred_id), ((hlds.hlds_pred).proc_id))
	;	entity_table_struct(((hlds.hlds_pred).pred_id), ((hlds.hlds_pred).proc_id))
	;	entity_type_ctor(((mdbcomp.prim_data).module_name), string, int).
:- type maybe_needed
	--->	not_eliminable 
	;	maybe_eliminable(((transform_hlds.dead_proc_elim).num_references) :: int).
:- type needed_map == (map.map(((transform_hlds.dead_proc_elim).entity), ((transform_hlds.dead_proc_elim).maybe_needed))).
:- pred dead_pred_elim(((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info)).
:- mode dead_pred_elim((builtin.in), (builtin.out)) is det.
:- pred dead_proc_analyze(((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), ((transform_hlds.dead_proc_elim).needed_map)).
:- mode dead_proc_analyze((builtin.in), (builtin.out), (builtin.out)) is det.
:- pred dead_proc_elim(((transform_hlds.dead_proc_elim).dead_proc_pass), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), (list.list(((parse_tree.error_util).error_spec)))).
:- mode dead_proc_elim((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
