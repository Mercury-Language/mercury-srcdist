/*
** Automatically generated from `mlds_to_c.m'
** by the Mercury compiler,
** version 2018-05-11
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module ml_backend.mlds_to_c.
// :- interface.

#ifndef MR_HEADER_GUARD_ml_backend__mlds_to_c
#define MR_HEADER_GUARD_ml_backend__mlds_to_c

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef ML_BACKEND__MLDS_TO_C_DECL_GUARD
#define ML_BACKEND__MLDS_TO_C_DECL_GUARD
#include "ml_backend.mih"

#endif




extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_decl_or_defn_0;

extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_defn_kind_0;

extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_func_info_c_0;

extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_locn_0;

extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_lval_or_string_0;

extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_maybe_call_has_return_0;

extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_mlds_to_c_opts_0;

extern const MR_TypeCtorInfo_Struct ml_backend__mlds_to_c__ml_backend__mlds_to_c__type_ctor_info_output_type_0;

MR_bool MR_CALL 
ml_backend__mlds_to_c__func_defn_has_name_in_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
ml_backend__mlds_to_c__output_c_dump_preds_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_String param_3,
  MR_Word param_4);

void MR_CALL 
ml_backend__mlds_to_c__output_c_mlds_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_String param_3,
  MR_Word * param_4);

MR_String MR_CALL 
ml_backend__mlds_to_c__mlds_tabling_data_name_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__ml_backend__mlds_to_c__init(void);
void mercury__ml_backend__mlds_to_c__init_type_tables(void);
void mercury__ml_backend__mlds_to_c__init_debugger(void);
const char *mercury__ml_backend__mlds_to_c__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_ml_backend.mlds_to_c

// :- end_interface ml_backend.mlds_to_c.
