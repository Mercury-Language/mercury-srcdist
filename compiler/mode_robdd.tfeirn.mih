/*
** Automatically generated from `mode_robdd.tfeirn.m'
** by the Mercury compiler,
** version rotd-2019-08-19
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module mode_robdd.tfeirn.
// :- interface.

#ifndef MR_HEADER_GUARD_mode_robdd__tfeirn
#define MR_HEADER_GUARD_mode_robdd__tfeirn

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef MODE_ROBDD__TFEIRN_DECL_GUARD
#define MODE_ROBDD__TFEIRN_DECL_GUARD
#include "mode_robdd.mih"

#endif




extern const MR_TypeCtorInfo_Struct mode_robdd__tfeirn__mode_robdd__tfeirn__type_ctor_info_tfeirn_0;

extern const MR_TypeCtorInfo_Struct mode_robdd__tfeirn__mode_robdd__tfeirn__type_ctor_info_tfeirn_1;

void MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_107_110_111_119_110_95_118_97_114_115_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word * param_3);

MR_bool MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_118_97_114_95_101_110_116_97_105_108_101_100_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_p_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
mode_robdd__tfeirn__known_vars_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word * param_4);

void MR_CALL 
mode_robdd__tfeirn__labelling_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word * param_5,
  MR_Cont param_6,
  void * param_7);

void MR_CALL 
mode_robdd__tfeirn__minimal_model_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word * param_5,
  MR_Cont param_6,
  void * param_7);

MR_bool MR_CALL 
mode_robdd__tfeirn__var_entailed_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_times_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_plus_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_42_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_43_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_97_116_95_109_111_115_116_95_111_110_101_95_111_102_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_99_111_110_106_95_110_111_116_95_118_97_114_115_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_99_111_110_106_95_118_97_114_115_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_100_105_115_106_95_118_97_114_115_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_100_105_115_106_95_118_97_114_115_95_101_113_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_101_110_115_117_114_101_95_110_111_114_109_97_108_105_115_101_100_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_1_f_0(
  MR_Word param_1);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_101_113_95_118_97_114_115_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_105_109_112_95_118_97_114_115_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_105_111_95_99_111_110_115_116_114_97_105_110_116_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_4_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_110_101_113_95_118_97_114_115_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_110_111_116_95_98_111_116_104_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_110_111_116_95_118_97_114_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_111_110_101_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_0_f_0(void);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_114_101_115_116_114_105_99_116_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_114_101_115_116_114_105_99_116_95_102_105_108_116_101_114_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_114_101_115_116_114_105_99_116_95_116_104_114_101_115_104_111_108_100_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_118_97_114_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_118_97_114_95_114_101_115_116_114_105_99_116_95_102_97_108_115_101_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_118_97_114_95_114_101_115_116_114_105_99_116_95_116_114_117_101_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_118_97_114_115_95_100_105_115_101_110_116_97_105_108_101_100_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_1_f_0(
  MR_Word param_1);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_118_97_114_115_95_101_110_116_97_105_108_101_100_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_1_f_0(
  MR_Word param_1);

MR_Word MR_CALL 
mode_robdd__tfeirn__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_111_114_95_102_117_110_99_95_95_122_101_114_111_95_95_91_84_32_61_32_109_99_95_116_121_112_101_93_95_48_95_49_0_f_0(void);

MR_Word MR_CALL 
mode_robdd__tfeirn__at_most_one_of_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__conj_not_vars_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__conj_vars_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__disj_vars_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__disj_vars_eq_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_Word MR_CALL 
mode_robdd__tfeirn__ensure_normalised_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__eq_vars_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_Word MR_CALL 
mode_robdd__tfeirn__imp_vars_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_Word MR_CALL 
mode_robdd__tfeirn__io_constraint_4_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5);

MR_Word MR_CALL 
mode_robdd__tfeirn__neq_vars_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_Word MR_CALL 
mode_robdd__tfeirn__not_both_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_Word MR_CALL 
mode_robdd__tfeirn__not_var_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__one_0_f_0(
  MR_Word param_1);

MR_Word MR_CALL 
mode_robdd__tfeirn__restrict_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__restrict_filter_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__restrict_threshold_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__robdd_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__robdd_to_mode_robdd_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__to_robdd_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__var_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__var_restrict_false_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__var_restrict_true_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mode_robdd__tfeirn__vars_disentailed_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__vars_entailed_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mode_robdd__tfeirn__zero_0_f_0(
  MR_Word param_1);

void MR_CALL 
mode_robdd__tfeirn____Compare____tfeirn_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mode_robdd__tfeirn____Compare____tfeirn_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_bool MR_CALL 
mode_robdd__tfeirn____Unify____tfeirn_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mode_robdd__tfeirn____Unify____tfeirn_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void mercury__mode_robdd__tfeirn__init(void);
void mercury__mode_robdd__tfeirn__init_type_tables(void);
void mercury__mode_robdd__tfeirn__init_debugger(void);
const char *mercury__mode_robdd__tfeirn__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_mode_robdd.tfeirn

// :- end_interface mode_robdd.tfeirn.
