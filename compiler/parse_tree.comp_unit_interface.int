:- module (parse_tree.comp_unit_interface).
:- interface.
:- use_module libs.
:- use_module mdbcomp.
:- use_module (libs.globals).
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.prog_item).
:- pred generate_interface_int2_via_int3(libs.globals.globals, parse_tree.prog_item.aug_compilation_unit, parse_tree.prog_item.parse_tree_int).
:- mode generate_interface_int2_via_int3((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred generate_interfaces_int1_int2(libs.globals.globals, parse_tree.prog_item.aug_compilation_unit, parse_tree.prog_item.parse_tree_int, parse_tree.prog_item.parse_tree_int).
:- mode generate_interfaces_int1_int2((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred generate_pre_grab_pre_qual_interface_for_int1_int2(parse_tree.prog_item.raw_compilation_unit, parse_tree.prog_item.raw_compilation_unit).
:- mode generate_pre_grab_pre_qual_interface_for_int1_int2((builtin.in), (builtin.out)) is det.
:- pred generate_private_interface_int0(parse_tree.prog_item.aug_compilation_unit, parse_tree.prog_item.parse_tree_int).
:- mode generate_private_interface_int0((builtin.in), (builtin.out)) is det.
:- pred generate_short_interface_int3(libs.globals.globals, parse_tree.prog_item.raw_compilation_unit, parse_tree.prog_item.parse_tree_int3, parse_tree.prog_item.parse_tree_int).
:- mode generate_short_interface_int3((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- func make_foreign_import(mdbcomp.sym_name.module_name, libs.globals.foreign_language) = parse_tree.prog_item.item_fim.
