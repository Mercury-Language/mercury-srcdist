:- module (((transform_hlds.ctgc).structure_sharing).domain).
:- interface.
:- use_module analysis.
:- use_module bool.
:- use_module hlds.
:- use_module list.
:- use_module map.
:- use_module parse_tree.
:- use_module set.
:- use_module (hlds.hlds_goal).
:- use_module (hlds.hlds_module).
:- use_module (hlds.hlds_pred).
:- use_module (parse_tree.prog_data).
:- use_module (parse_tree.prog_data_foreign).
:- use_module (parse_tree.prog_data_pragma).
:- use_module (parse_tree.var_table).
:- type sharing_as.
:- type sharing_as_and_status
    --->    sharing_as_and_status(transform_hlds.ctgc.structure_sharing.domain.sharing_as, analysis.analysis_status).
:- type sharing_as_table == map.map(hlds.hlds_pred.pred_proc_id, transform_hlds.ctgc.structure_sharing.domain.sharing_as_and_status).
:- pred add_foreign_proc_sharing(hlds.hlds_module.module_info, hlds.hlds_pred.pred_info, hlds.hlds_pred.proc_info, hlds.hlds_pred.pred_proc_id, parse_tree.prog_data_foreign.pragma_foreign_proc_attributes, list.list(hlds.hlds_goal.foreign_arg), parse_tree.prog_data.prog_context, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode add_foreign_proc_sharing((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func add_unify_sharing(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, hlds.hlds_goal.unification, hlds.hlds_goal.hlds_goal_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- pred apply_widening(hlds.hlds_module.module_info, parse_tree.var_table.var_table, int, bool.bool, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode apply_widening((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred bottom_sharing_is_safe_approximation(hlds.hlds_module.module_info, hlds.hlds_pred.pred_info, hlds.hlds_pred.proc_info).
:- mode bottom_sharing_is_safe_approximation((builtin.in), (builtin.in), (builtin.in)) is semidet.
:- pred bottom_sharing_is_safe_approximation_by_args(hlds.hlds_module.module_info, list.list(parse_tree.prog_data.mer_mode), list.list(parse_tree.prog_data.mer_type)).
:- mode bottom_sharing_is_safe_approximation_by_args((builtin.in), (builtin.in), (builtin.in)) is semidet.
:- func extend_datastruct(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as, parse_tree.prog_data_pragma.datastruct) = list.list(parse_tree.prog_data_pragma.datastruct).
:- func extend_datastructs(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as, list.list(parse_tree.prog_data_pragma.datastruct)) = list.list(parse_tree.prog_data_pragma.datastruct).
:- func from_structure_sharing_domain(parse_tree.prog_data_pragma.structure_sharing_domain) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- func load_structure_sharing_table(hlds.hlds_module.module_info) = transform_hlds.ctgc.structure_sharing.domain.sharing_as_table.
:- pred lookup_sharing_and_comb(hlds.hlds_module.module_info, hlds.hlds_pred.pred_info, hlds.hlds_pred.proc_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as_table, hlds.hlds_pred.pred_id, hlds.hlds_pred.proc_id, parse_tree.prog_data.prog_vars, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode lookup_sharing_and_comb((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred lookup_sharing_or_predict(hlds.hlds_module.module_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as_table, hlds.hlds_pred.pred_proc_id, transform_hlds.ctgc.structure_sharing.domain.sharing_as, analysis.analysis_status, bool.bool).
:- mode lookup_sharing_or_predict((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)) is det.
:- pred sharing_as_and_status_is_subsumed_by(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as_and_status, transform_hlds.ctgc.structure_sharing.domain.sharing_as_and_status).
:- mode sharing_as_and_status_is_subsumed_by((builtin.in), (builtin.in), (builtin.in), (builtin.in)) is semidet.
:- func sharing_as_comb(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- func sharing_as_init = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- pred sharing_as_is_bottom(transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode sharing_as_is_bottom((builtin.in)) is semidet.
:- pred sharing_as_is_subsumed_by(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode sharing_as_is_subsumed_by((builtin.in), (builtin.in), (builtin.in), (builtin.in)) is semidet.
:- pred sharing_as_is_top(transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode sharing_as_is_top((builtin.in)) is semidet.
:- func sharing_as_least_upper_bound(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- func sharing_as_least_upper_bound_of_list(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, list.list(transform_hlds.ctgc.structure_sharing.domain.sharing_as)) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- pred sharing_as_project(parse_tree.prog_data.prog_vars, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode sharing_as_project((builtin.in), (builtin.in), (builtin.out)) is det.
:- func sharing_as_project(parse_tree.prog_data.prog_vars, transform_hlds.ctgc.structure_sharing.domain.sharing_as) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- pred sharing_as_project_set(set.set(parse_tree.prog_data.prog_var), transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode sharing_as_project_set((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred sharing_as_rename(parse_tree.prog_data.prog_var_renaming, parse_tree.prog_data.tsubst, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode sharing_as_rename((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred sharing_as_rename_using_module_info(hlds.hlds_module.module_info, hlds.hlds_pred.pred_proc_id, parse_tree.prog_data.prog_vars, list.list(parse_tree.prog_data.mer_type), parse_tree.prog_data.tvarset, hlds.hlds_pred.external_type_params, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.structure_sharing.domain.sharing_as).
:- mode sharing_as_rename_using_module_info((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func sharing_as_short_description(transform_hlds.ctgc.structure_sharing.domain.sharing_as) = string.
:- func sharing_as_size(transform_hlds.ctgc.structure_sharing.domain.sharing_as) = int is semidet.
:- func sharing_as_table_init = transform_hlds.ctgc.structure_sharing.domain.sharing_as_table.
:- pred sharing_as_table_search(hlds.hlds_pred.pred_proc_id, transform_hlds.ctgc.structure_sharing.domain.sharing_as_table, transform_hlds.ctgc.structure_sharing.domain.sharing_as_and_status).
:- mode sharing_as_table_search((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred sharing_as_table_set(hlds.hlds_pred.pred_proc_id, transform_hlds.ctgc.structure_sharing.domain.sharing_as_and_status, transform_hlds.ctgc.structure_sharing.domain.sharing_as_table, transform_hlds.ctgc.structure_sharing.domain.sharing_as_table).
:- mode sharing_as_table_set((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func sharing_as_top_no_feedback = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- func sharing_as_top_sharing(parse_tree.prog_data_pragma.top_feedback) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- func sharing_as_top_sharing_accumulate(parse_tree.prog_data_pragma.top_feedback, transform_hlds.ctgc.structure_sharing.domain.sharing_as) = transform_hlds.ctgc.structure_sharing.domain.sharing_as.
:- func to_structure_sharing_domain(transform_hlds.ctgc.structure_sharing.domain.sharing_as) = parse_tree.prog_data_pragma.structure_sharing_domain.
