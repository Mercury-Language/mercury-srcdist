:- module (transform_hlds.ctgc).livedata.
:- interface.
:- use_module hlds.
:- use_module list.
:- use_module parse_tree.
:- use_module hlds.hlds_goal.
:- use_module hlds.hlds_module.
:- use_module hlds.hlds_pred.
:- use_module parse_tree.prog_data.
:- use_module parse_tree.prog_data_pragma.
:- use_module parse_tree.var_table.
:- use_module (transform_hlds.ctgc).structure_sharing.
:- use_module ((transform_hlds.ctgc).structure_sharing).domain.
:- type livedata.
:- type nodes_are_not_live_result
    --->    nodes_all_live 
    ;       nodes_are_live(list.list(parse_tree.prog_data_pragma.datastruct)).
:- func livedata_add_liveness(hlds.hlds_module.module_info, hlds.hlds_pred.proc_info, parse_tree.prog_data_pragma.live_datastructs, transform_hlds.ctgc.structure_sharing.domain.sharing_as, transform_hlds.ctgc.livedata.livedata) = transform_hlds.ctgc.livedata.livedata.
:- func livedata_get_datastructs(transform_hlds.ctgc.livedata.livedata) = list.list(parse_tree.prog_data_pragma.datastruct).
:- func livedata_init = transform_hlds.ctgc.livedata.livedata.
:- func livedata_init_as_top = transform_hlds.ctgc.livedata.livedata.
:- func livedata_init_at_goal(hlds.hlds_module.module_info, parse_tree.var_table.var_table, hlds.hlds_goal.hlds_goal_info, transform_hlds.ctgc.structure_sharing.domain.sharing_as) = transform_hlds.ctgc.livedata.livedata.
:- func livedata_init_from_datastructs(parse_tree.prog_data_pragma.live_datastructs) = transform_hlds.ctgc.livedata.livedata.
:- func livedata_init_from_vars(parse_tree.prog_data_pragma.live_vars) = transform_hlds.ctgc.livedata.livedata.
:- pred livedata_is_bottom(transform_hlds.ctgc.livedata.livedata).
:- mode livedata_is_bottom(builtin.in) is semidet.
:- pred livedata_is_top(transform_hlds.ctgc.livedata.livedata).
:- mode livedata_is_top(builtin.in) is semidet.
:- func livedata_least_upper_bound(hlds.hlds_module.module_info, parse_tree.var_table.var_table, transform_hlds.ctgc.livedata.livedata, transform_hlds.ctgc.livedata.livedata) = transform_hlds.ctgc.livedata.livedata.
:- func livedata_least_upper_bound_list(hlds.hlds_module.module_info, parse_tree.var_table.var_table, list.list(transform_hlds.ctgc.livedata.livedata)) = transform_hlds.ctgc.livedata.livedata.
:- func livedata_project(list.list(parse_tree.prog_data.prog_var), transform_hlds.ctgc.livedata.livedata) = transform_hlds.ctgc.livedata.livedata.
:- pred livedata_subsumes_datastruct(hlds.hlds_module.module_info, parse_tree.var_table.var_table, transform_hlds.ctgc.livedata.livedata, parse_tree.prog_data_pragma.datastruct).
:- mode livedata_subsumes_datastruct(builtin.in, builtin.in, builtin.in, builtin.in) is semidet.
:- pred livedata_subsumes_prog_var(transform_hlds.ctgc.livedata.livedata, parse_tree.prog_data.prog_var).
:- mode livedata_subsumes_prog_var(builtin.in, builtin.in) is semidet.
:- pred nodes_are_not_live(hlds.hlds_module.module_info, parse_tree.var_table.var_table, list.list(parse_tree.prog_data_pragma.datastruct), transform_hlds.ctgc.livedata.livedata, transform_hlds.ctgc.livedata.nodes_are_not_live_result).
:- mode nodes_are_not_live(builtin.in, builtin.in, builtin.in, builtin.in, builtin.out) is det.
