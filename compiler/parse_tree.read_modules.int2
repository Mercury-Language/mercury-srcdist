:- module (parse_tree.read_modules).
:- interface.
:- use_module map.
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.file_kind).
:- use_module (parse_tree.prog_item).
:- type have_read_module(PT)
    --->    have_successfully_read_module(libs.file_util.file_name, maybe.maybe(libs.timestamp.timestamp), PT, list.list(parse_tree.error_util.error_spec), parse_tree.parse_error.read_module_errors)
    ;       tried_to_read_module_failed .
:- type have_read_module_int0_map == parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int0).
:- type have_read_module_int1_map == parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int1).
:- type have_read_module_int2_map == parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int2).
:- type have_read_module_int3_map == parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int3).
:- type have_read_module_key(Kind)
    --->    have_read_module_key(mdbcomp.sym_name.module_name, Kind).
:- type have_read_module_map(Key, PT) == map.map(Key, parse_tree.read_modules.have_read_module(PT)).
:- type have_read_module_maps
    --->    have_read_module_maps(((parse_tree.read_modules).hrmm_src) :: parse_tree.read_modules.have_read_module_src_map, ((parse_tree.read_modules).hrmm_opt) :: parse_tree.read_modules.have_read_module_opt_map, ((parse_tree.read_modules).hrmm_rcu) :: parse_tree.read_modules.have_read_module_rcu_map, ((parse_tree.read_modules).hrmm_int0) :: parse_tree.read_modules.have_read_module_int0_map, ((parse_tree.read_modules).hrmm_int1) :: parse_tree.read_modules.have_read_module_int1_map, ((parse_tree.read_modules).hrmm_int2) :: parse_tree.read_modules.have_read_module_int2_map, ((parse_tree.read_modules).hrmm_int3) :: parse_tree.read_modules.have_read_module_int3_map, ((parse_tree.read_modules).hrmm_plain_opt) :: parse_tree.read_modules.have_read_module_plain_opt_map, ((parse_tree.read_modules).hrmm_trans_opt) :: parse_tree.read_modules.have_read_module_trans_opt_map).
:- type have_read_module_opt_map == parse_tree.read_modules.have_read_module_map(parse_tree.read_modules.have_read_module_key(parse_tree.file_kind.opt_file_kind), parse_tree.prog_item.parse_tree_opt).
:- type have_read_module_plain_opt_map == parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_plain_opt).
:- type have_read_module_rcu_map == map.map(mdbcomp.sym_name.module_name, parse_tree.prog_item.raw_compilation_unit).
:- type have_read_module_src_map == parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_src).
:- type have_read_module_trans_opt_map == parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_trans_opt).
:- type maybe_ignore_errors
    --->    ignore_errors 
    ;       do_not_ignore_errors .
:- type_representation(have_read_module_int0_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int0))).
:- type_representation(have_read_module_int1_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int1))).
:- type_representation(have_read_module_int2_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int2))).
:- type_representation(have_read_module_int3_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_int3))).
:- type_representation(have_read_module_map(V_1, V_2), is_eqv_to(map.map(V_1, parse_tree.read_modules.have_read_module(V_2)))).
:- type_representation(have_read_module_maps, is_word_aligned_ptr).
:- type_representation(have_read_module_opt_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(parse_tree.read_modules.have_read_module_key(parse_tree.file_kind.opt_file_kind), parse_tree.prog_item.parse_tree_opt))).
:- type_representation(have_read_module_plain_opt_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_plain_opt))).
:- type_representation(have_read_module_rcu_map, is_eqv_to(map.map(mdbcomp.sym_name.module_name, parse_tree.prog_item.raw_compilation_unit))).
:- type_representation(have_read_module_src_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_src))).
:- type_representation(have_read_module_trans_opt_map, is_eqv_to(parse_tree.read_modules.have_read_module_map(mdbcomp.sym_name.module_name, parse_tree.prog_item.parse_tree_trans_opt))).
:- type_representation(maybe_ignore_errors, du_repn(enum("ignore_errors", "do_not_ignore_errors", [],  no_c_j_cs))).
