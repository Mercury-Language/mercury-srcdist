/*
** Automatically generated from `parse_tree_out_pragma.m'
** by the Mercury compiler,
** version rotd-2024-09-22
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module parse_tree.parse_tree_out_pragma.
// :- interface.

#ifndef MR_HEADER_GUARD_parse_tree__parse_tree_out_pragma
#define MR_HEADER_GUARD_parse_tree__parse_tree_out_pragma

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef PARSE_TREE__PARSE_TREE_OUT_PRAGMA_DECL_GUARD
#define PARSE_TREE__PARSE_TREE_OUT_PRAGMA_DECL_GUARD
#include "parse_tree.mih"

#endif



void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_100_101_99_108_95_109_97_114_107_101_114_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_100_101_99_108_95_109_97_114_107_101_114_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_100_101_99_108_95_112_114_97_103_109_97_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_100_101_99_108_95_112_114_97_103_109_97_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_102_111_114_101_105_103_110_95_112_114_111_99_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_102_111_114_101_105_103_110_95_112_114_111_99_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_103_101_110_101_114_97_116_101_100_95_112_114_97_103_109_97_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_103_101_110_101_114_97_116_101_100_95_112_114_97_103_109_97_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_105_109_112_108_95_109_97_114_107_101_114_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_105_109_112_108_95_109_97_114_107_101_114_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_105_109_112_108_95_112_114_97_103_109_97_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_105_116_101_109_95_105_109_112_108_95_112_114_97_103_109_97_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_100_101_99_108_95_112_114_101_100_95_112_102_95_110_97_109_101_95_97_114_105_116_121_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_6_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_String param_4,
  MR_Word param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_100_101_99_108_95_112_114_101_100_95_112_102_95_110_97_109_101_95_97_114_105_116_121_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_6_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_String param_4,
  MR_Word param_5,
  MR_Word * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_101_120_99_101_112_116_105_111_110_115_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_101_120_99_101_112_116_105_111_110_115_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_102_111_114_101_105_103_110_95_100_101_99_108_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_102_111_114_101_105_103_110_95_100_101_99_108_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_109_109_95_116_97_98_108_105_110_103_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_109_109_95_116_97_98_108_105_110_103_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_115_116_114_117_99_116_95_114_101_117_115_101_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_115_116_114_117_99_116_95_114_101_117_115_101_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_115_116_114_117_99_116_95_115_104_97_114_105_110_103_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_115_116_114_117_99_116_95_115_104_97_114_105_110_103_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_101_114_109_105_110_97_116_105_111_110_50_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_101_114_109_105_110_97_116_105_111_110_50_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_101_114_109_105_110_97_116_105_111_110_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_101_114_109_105_110_97_116_105_111_110_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_114_97_105_108_105_110_103_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_114_97_105_108_105_110_103_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_121_112_101_95_115_112_101_99_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_121_112_101_95_115_112_101_99_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_121_112_101_95_115_112_101_99_95_99_111_110_115_116_114_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_121_112_101_95_115_112_101_99_95_99_111_110_115_116_114_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_117_110_117_115_101_100_95_97_114_103_115_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_117_110_117_115_101_100_95_97_114_103_115_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_85_110_117_115_101_100_65_114_103_115_95_95_112_114_101_100_95_95_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_121_112_101_95_115_112_101_99_95_99_111_110_115_116_114_95_95_91_83_32_61_32_105_111_46_116_101_120_116_95_111_117_116_112_117_116_95_115_116_114_101_97_109_44_32_85_32_61_32_105_111_46_115_116_97_116_101_93_95_48_95_49_95_95_91_51_93_95_48_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_85_110_117_115_101_100_65_114_103_115_95_95_112_114_101_100_95_95_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_121_112_101_95_115_112_101_99_95_99_111_110_115_116_114_95_95_91_83_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_104_97_110_100_108_101_44_32_85_32_61_32_115_116_114_105_110_103_46_98_117_105_108_100_101_114_46_115_116_97_116_101_93_95_48_95_49_95_95_91_51_93_95_48_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__f_85_110_117_115_101_100_65_114_103_115_95_95_112_114_101_100_95_95_109_101_114_99_117_114_121_95_102_111_114_109_97_116_95_112_114_97_103_109_97_95_116_121_112_101_95_115_112_101_99_95_99_111_110_115_116_114_95_95_91_51_93_95_48_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_item_decl_marker_4_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_item_decl_pragma_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_item_foreign_proc_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_item_generated_pragma_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_item_impl_marker_4_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_item_impl_pragma_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_decl_pred_pf_name_arity_6_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_String param_4,
  MR_Box param_5,
  MR_Box param_6,
  MR_Box * param_7);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_exceptions_4_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_foreign_decl_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_mm_tabling_4_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_struct_reuse_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_struct_sharing_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_termination_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_termination2_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_trailing_4_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_type_spec_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_type_spec_constr_5_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_format_pragma_unused_args_4_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Box param_4,
  MR_Box * param_5);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_output_item_foreign_proc_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_output_pragma_decl_pred_pf_name_arity_6_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Word param_3,
  MR_String param_4);

void MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_output_pragma_foreign_decl_4_p_0(
  MR_Word param_1,
  MR_Word param_2);

MR_String MR_CALL 
parse_tree__parse_tree_out_pragma__maybe_arg_size_info_to_string_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_String MR_CALL 
parse_tree__parse_tree_out_pragma__maybe_termination_info_to_string_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_String MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_item_foreign_proc_to_string_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_String MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_pragma_decl_pred_pf_name_arity_to_string_3_f_0(
  MR_String param_1,
  MR_Word param_2,
  MR_String param_3);

MR_String MR_CALL 
parse_tree__parse_tree_out_pragma__mercury_pragma_foreign_decl_to_string_1_f_0(
  MR_Word param_1);

void mercury__parse_tree__parse_tree_out_pragma__init(void);
void mercury__parse_tree__parse_tree_out_pragma__init_type_tables(void);
void mercury__parse_tree__parse_tree_out_pragma__init_debugger(void);
const char *mercury__parse_tree__parse_tree_out_pragma__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_parse_tree.parse_tree_out_pragma

// :- end_interface parse_tree.parse_tree_out_pragma.
