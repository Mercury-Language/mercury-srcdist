:- module (make.deps_set).
:- interface.
:- use_module bool.
:- use_module enum.
:- use_module io.
:- use_module set.
:- use_module sparse_bitset.
:- type dependency_file_index.
:- type deps_set(T) == sparse_bitset.sparse_bitset(T).
:- type module_index.
:- pred dependency_file_index_set_to_plain_set(make.make_info, make.deps_set.deps_set(make.deps_set.dependency_file_index), set.set(make.dependencies.dependency_file)).
:- mode dependency_file_index_set_to_plain_set((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred dependency_file_to_index(make.dependencies.dependency_file, make.deps_set.dependency_file_index, make.make_info, make.make_info).
:- mode dependency_file_to_index((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred dependency_files_to_index_set(list.list(make.dependencies.dependency_file), make.deps_set.deps_set(make.deps_set.dependency_file_index), make.make_info, make.make_info).
:- mode dependency_files_to_index_set((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred module_index_set_to_plain_set(make.make_info, make.deps_set.deps_set(make.deps_set.module_index), set.set(mdbcomp.sym_name.module_name)).
:- mode module_index_set_to_plain_set((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred module_index_to_name(make.make_info, make.deps_set.module_index, mdbcomp.sym_name.module_name).
:- mode module_index_to_name((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred module_name_to_index(mdbcomp.sym_name.module_name, make.deps_set.module_index, make.make_info, make.make_info).
:- mode module_name_to_index((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred module_names_to_index_set(list.list(mdbcomp.sym_name.module_name), make.deps_set.deps_set(make.deps_set.module_index), make.make_info, make.make_info).
:- mode module_names_to_index_set((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- instance (enum.enum(make.deps_set.dependency_file_index)).
:- instance (enum.enum(make.deps_set.module_index)).
