:- module ((parse_tree.module_qual).id_set).
:- interface.
:- use_module list.
:- use_module mdbcomp.
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.error_util).
:- use_module ((parse_tree.module_qual).qual_errors).
:- type class_id_set == parse_tree.module_qual.id_set.id_set.
:- type id_set.
:- type id_type
    --->    type_id 
    ;       mode_id 
    ;       inst_id 
    ;       class_id .
:- type inst_id_set == parse_tree.module_qual.id_set.id_set.
:- type mode_id_set == parse_tree.module_qual.id_set.id_set.
:- type module_id_set == parse_tree.module_qual.id_set.id_set.
:- type module_permissions
    --->    module_permissions((((parse_tree.module_qual).id_set).mp_in_int) :: parse_tree.module_qual.id_set.perm_in_int, (((parse_tree.module_qual).id_set).mp_in_imp) :: parse_tree.module_qual.id_set.perm_in_imp).
:- type mq_id
    --->    mq_id(mdbcomp.sym_name.sym_name, int).
:- type perm_in_imp
    --->    may_use_in_imp(parse_tree.prog_data.need_qualifier).
:- type perm_in_int
    --->    may_not_use_in_int 
    ;       may_use_in_int(parse_tree.prog_data.need_qualifier).
:- type type_id_set == parse_tree.module_qual.id_set.id_set.
:- pred find_unique_match(parse_tree.module_qual.mq_in_interface, parse_tree.module_qual.qual_errors.mq_error_context, parse_tree.module_qual.id_set.id_set, parse_tree.module_qual.id_set.id_type, parse_tree.module_qual.id_set.mq_id, mdbcomp.sym_name.sym_name, parse_tree.module_qual.mq_info, parse_tree.module_qual.mq_info, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode find_unique_match((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred id_set_init(parse_tree.module_qual.id_set.id_set).
:- mode id_set_init((builtin.out)) is det.
:- pred id_set_insert(parse_tree.module_qual.id_set.module_permissions, parse_tree.module_qual.id_set.mq_id, parse_tree.module_qual.id_set.id_set, parse_tree.module_qual.id_set.id_set).
:- mode id_set_insert((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred parent_module_is_imported(parse_tree.module_qual.mq_in_interface, mdbcomp.sym_name.module_name, mdbcomp.sym_name.module_name, parse_tree.module_qual.id_set.module_id_set).
:- mode parent_module_is_imported((builtin.in), (builtin.in), (builtin.in), (builtin.in)) is semidet.
:- implementation.
:- type id_set == map.map(string, map.map(parse_tree.prog_data.arity, parse_tree.module_qual.id_set.permissions_map)).
:- type permissions_map == map.map(mdbcomp.sym_name.module_name, parse_tree.module_qual.id_set.module_permissions).
