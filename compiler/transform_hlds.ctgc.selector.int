:- module ((transform_hlds.ctgc).selector).
:- interface.
:- import_module io.
:- import_module list.
:- import_module (hlds.hlds_module).
:- import_module (parse_tree.prog_data).
:- type encounter_existential_subtype
	--->	encounter_existential_subtype .
:- type normalization
	--->	need_normalization 
	;	already_normalized .
:- pred normalize_selector_with_type_information(hlds.hlds_module.module_info, parse_tree.prog_data.mer_type, parse_tree.prog_data.selector, parse_tree.prog_data.selector).
:- mode normalize_selector_with_type_information((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred reset_tables(io.io, io.io).
:- mode reset_tables((builtin.di), (builtin.uo)) is det.
:- pred selector_apply_widening(hlds.hlds_module.module_info, parse_tree.prog_data.mer_type, parse_tree.prog_data.selector, parse_tree.prog_data.selector).
:- mode selector_apply_widening((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func selector_init(parse_tree.prog_data.cons_id, int) = parse_tree.prog_data.selector.
:- func selector_init_from_list(list.list(parse_tree.prog_data.mer_type)) = parse_tree.prog_data.selector.
:- pred selector_subsumed_by(hlds.hlds_module.module_info, transform_hlds.ctgc.selector.normalization, parse_tree.prog_data.selector, parse_tree.prog_data.selector, parse_tree.prog_data.mer_type, parse_tree.prog_data.selector).
:- mode selector_subsumed_by((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred selector_termshift(parse_tree.prog_data.selector, parse_tree.prog_data.selector, parse_tree.prog_data.selector).
:- mode selector_termshift((builtin.in), (builtin.in), (builtin.out)) is det.
:- func top_selector = parse_tree.prog_data.selector.
:- pred type_of_node(hlds.hlds_module.module_info, parse_tree.prog_data.mer_type, parse_tree.prog_data.selector, parse_tree.prog_data.mer_type).
:- mode type_of_node((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet.
