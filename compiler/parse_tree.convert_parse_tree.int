:- module (parse_tree.convert_parse_tree).
:- interface.
:- use_module list.
:- use_module mdbcomp.
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.error_util).
:- use_module (parse_tree.prog_item).
:- func convert_parse_tree_int0_to_parse_tree_int(parse_tree.prog_item.parse_tree_int0) = parse_tree.prog_item.parse_tree_int.
:- func convert_parse_tree_int1_to_parse_tree_int(parse_tree.prog_item.parse_tree_int1) = parse_tree.prog_item.parse_tree_int.
:- func convert_parse_tree_int2_to_parse_tree_int(parse_tree.prog_item.parse_tree_int2) = parse_tree.prog_item.parse_tree_int.
:- func convert_parse_tree_int3_to_parse_tree_int(parse_tree.prog_item.parse_tree_int3) = parse_tree.prog_item.parse_tree_int.
:- pred convert_parse_tree_int_parse_tree_int0(parse_tree.prog_item.parse_tree_int, parse_tree.prog_item.parse_tree_int0, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode convert_parse_tree_int_parse_tree_int0((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred convert_parse_tree_int_parse_tree_int1(parse_tree.prog_item.parse_tree_int, parse_tree.prog_item.parse_tree_int1, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode convert_parse_tree_int_parse_tree_int1((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred convert_parse_tree_int_parse_tree_int2(parse_tree.prog_item.parse_tree_int, parse_tree.prog_item.parse_tree_int2, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode convert_parse_tree_int_parse_tree_int2((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred convert_parse_tree_int_parse_tree_int3(parse_tree.prog_item.parse_tree_int, parse_tree.prog_item.parse_tree_int3, list.list(parse_tree.error_util.error_spec), list.list(parse_tree.error_util.error_spec)).
:- mode convert_parse_tree_int_parse_tree_int3((builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func inst_ctor_defn_items_to_map(list.list(parse_tree.prog_item.item_inst_defn_info)) = parse_tree.prog_item.inst_ctor_defn_map.
:- func mode_ctor_defn_items_to_map(list.list(parse_tree.prog_item.item_mode_defn_info)) = parse_tree.prog_item.mode_ctor_defn_map.
:- func type_ctor_defn_items_to_map(list.list(parse_tree.prog_item.item_type_defn_info)) = parse_tree.prog_item.type_ctor_defn_map.
:- func type_ctor_foreign_enum_items_to_map(list.list(parse_tree.prog_item.item_foreign_enum_info)) = parse_tree.prog_item.type_ctor_foreign_enum_map.
:- func type_ctor_repn_items_to_map(list.list(parse_tree.prog_item.item_type_repn_info)) = parse_tree.prog_item.type_ctor_repn_map.
:- func wrap_foreign_enum_item(parse_tree.prog_item.item_foreign_enum_info) = parse_tree.prog_item.item.
:- func wrap_import(mdbcomp.sym_name.module_name) = parse_tree.prog_item.avail_import_info.
:- func wrap_import_avail(mdbcomp.sym_name.module_name) = parse_tree.prog_item.item_avail.
:- func wrap_include(mdbcomp.sym_name.module_name) = parse_tree.prog_item.item_include.
:- func wrap_inst_defn_item(parse_tree.prog_item.item_inst_defn_info) = parse_tree.prog_item.item.
:- func wrap_instance_item(parse_tree.prog_item.item_instance_info) = parse_tree.prog_item.item.
:- func wrap_mode_decl_item(parse_tree.prog_item.item_mode_decl_info) = parse_tree.prog_item.item.
:- func wrap_mode_defn_item(parse_tree.prog_item.item_mode_defn_info) = parse_tree.prog_item.item.
:- func wrap_pragma_item(parse_tree.prog_item.item_pragma_info) = parse_tree.prog_item.item.
:- func wrap_pred_decl_item(parse_tree.prog_item.item_pred_decl_info) = parse_tree.prog_item.item.
:- func wrap_promise_item(parse_tree.prog_item.item_promise_info) = parse_tree.prog_item.item.
:- func wrap_type_defn_item(parse_tree.prog_item.item_type_defn_info) = parse_tree.prog_item.item.
:- func wrap_type_repn_item(parse_tree.prog_item.item_type_repn_info) = parse_tree.prog_item.item.
:- func wrap_typeclass_item(parse_tree.prog_item.item_typeclass_info) = parse_tree.prog_item.item.
:- func wrap_use(mdbcomp.sym_name.module_name) = parse_tree.prog_item.avail_use_info.
:- func wrap_use_avail(mdbcomp.sym_name.module_name) = parse_tree.prog_item.item_avail.
