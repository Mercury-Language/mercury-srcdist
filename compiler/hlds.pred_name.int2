:- module (hlds.pred_name).
:- interface.
:- type aux_tabling_maybe_single_proc
    --->    is_not_single_proc 
    ;       is_single_proc .
:- type aux_tabling_pred_kind
    --->    atpk_statistics 
    ;       atpk_reset .
:- type instance_method_constraints
    --->    instance_method_constraints(parse_tree.prog_data.class_id, list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.prog_constraint), parse_tree.prog_data.prog_constraints).
:- type line_number_and_counter
    --->    lnc(int, int).
:- type pred_origin
    --->    origin_user(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.sym_name, parse_tree.prog_data.user_arity)
    ;       origin_special_pred(mdbcomp.prim_data.special_pred_id, parse_tree.prog_data.type_ctor)
    ;       origin_instance_method(mdbcomp.sym_name.sym_name, hlds.pred_name.instance_method_constraints)
    ;       origin_class_method(parse_tree.prog_data.class_id, parse_tree.prog_data.pf_sym_name_arity)
    ;       origin_deforestation(int, int)
    ;       origin_assertion(string, int)
    ;       origin_lambda(string, int, int)
    ;       origin_solver_repn(parse_tree.prog_data.type_ctor, parse_tree.prog_data.solver_type_pred_kind)
    ;       origin_tabling(parse_tree.prog_data.pf_sym_name_arity, parse_tree.prog_data.tabling_aux_pred_kind)
    ;       origin_mutable(mdbcomp.sym_name.module_name, string, parse_tree.prog_data.mutable_pred_kind)
    ;       origin_initialise 
    ;       origin_finalise 
    ;       origin_transformed(hlds.pred_name.pred_transformation, hlds.pred_name.pred_origin, hlds.hlds_pred.pred_id).
:- type pred_transformation
    --->    transform_higher_order_spec(int)
    ;       transform_higher_order_type_spec(hlds.hlds_pred.proc_id)
    ;       transform_type_spec(one_or_more.one_or_more(pair.pair(int, parse_tree.prog_data.mer_type)))
    ;       transform_unused_args(hlds.hlds_pred.proc_id, list.list(int))
    ;       transform_accumulator(int, list.list(int))
    ;       transform_loop_inv(hlds.hlds_pred.proc_id, int, int)
    ;       transform_tuple(hlds.hlds_pred.proc_id, int, int)
    ;       transform_untuple(hlds.hlds_pred.proc_id, int, int)
    ;       transform_distance_granularity(int)
    ;       transform_dep_par_conj(hlds.hlds_pred.proc_id, list.list(int))
    ;       transform_par_loop_ctrl(hlds.hlds_pred.proc_id)
    ;       transform_lcmc(hlds.hlds_pred.proc_id, int, list.list(int))
    ;       transform_table_generator 
    ;       transform_stm_expansion 
    ;       transform_structure_reuse 
    ;       transform_io_tabling 
    ;       transform_ssdebug 
    ;       transform_direct_arg_in_out .
:- type stm_clone_kind
    --->    stmck_top_level 
    ;       stmck_rollback 
    ;       stmck_wrapper 
    ;       stmck_simple_wrapper 
    ;       stmck_or_else .
:- type transform_name
    --->    tn_higher_order(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_higher_order_type_spec(mdbcomp.prim_data.pred_or_func, int, int)
    ;       tn_aux_tabling(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.user_arity, hlds.pred_name.aux_tabling_pred_kind, hlds.pred_name.aux_tabling_maybe_single_proc, int)
    ;       tn_accumulator(mdbcomp.prim_data.pred_or_func, hlds.pred_name.line_number_and_counter)
    ;       tn_deforestation(mdbcomp.prim_data.pred_or_func, hlds.pred_name.line_number_and_counter)
    ;       tn_lambda(mdbcomp.prim_data.pred_or_func, hlds.pred_name.line_number_and_counter)
    ;       tn_loop_inv(mdbcomp.prim_data.pred_or_func, int, hlds.pred_name.line_number_and_counter)
    ;       tn_tupling(mdbcomp.prim_data.pred_or_func, int, hlds.pred_name.line_number_and_counter)
    ;       tn_untupling(mdbcomp.prim_data.pred_or_func, int, hlds.pred_name.line_number_and_counter)
    ;       tn_last_call_modulo_cons(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_ssdb_stdlib_proxy(mdbcomp.prim_data.pred_or_func)
    ;       tn_dep_par_conj(mdbcomp.prim_data.pred_or_func, int, list.list(int))
    ;       tn_par_distance_granularity(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_par_loop_control(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_structure_reuse(mdbcomp.prim_data.pred_or_func, int, list.list(int))
    ;       tn_pragma_type_spec(maybe.maybe(mdbcomp.prim_data.pred_or_func), parse_tree.prog_data.tvarset, parse_tree.prog_data_pragma.type_subst)
    ;       tn_io_tabling(mdbcomp.prim_data.pred_or_func)
    ;       tn_minimal_model_generator(mdbcomp.prim_data.pred_or_func, int)
    ;       tn_stm_expanded(mdbcomp.prim_data.pred_or_func, hlds.pred_name.stm_clone_kind, int, int, int)
    ;       tn_unused_args(mdbcomp.prim_data.pred_or_func, int, list.list(int)).
