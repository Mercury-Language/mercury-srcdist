/*
** Automatically generated from `set_of_var.m'
** by the Mercury compiler,
** version rotd-2022-03-12
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module parse_tree.set_of_var.
// :- interface.

#ifndef MR_HEADER_GUARD_parse_tree__set_of_var
#define MR_HEADER_GUARD_parse_tree__set_of_var

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef PARSE_TREE__SET_OF_VAR_DECL_GUARD
#define PARSE_TREE__SET_OF_VAR_DECL_GUARD
#include "parse_tree.mih"

#endif



extern const MR_TypeCtorInfo_Struct parse_tree__set_of_var__parse_tree__set_of_var__type_ctor_info_set_of_progvar_0;

extern const MR_TypeCtorInfo_Struct parse_tree__set_of_var__parse_tree__set_of_var__type_ctor_info_set_of_tvar_0;

extern const MR_TypeCtorInfo_Struct parse_tree__set_of_var__parse_tree__set_of_var__type_ctor_info_set_of_var_1;

MR_bool MR_CALL 
parse_tree__set_of_var__all_true_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__set_of_var__cartesian_product_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__cartesian_product_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

MR_bool MR_CALL 
parse_tree__set_of_var__contains_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__set_of_var__delete_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__delete_list_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__difference_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__divide_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__set_of_var__divide_by_set_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word * param_5);

MR_bool MR_CALL 
parse_tree__set_of_var__equal_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__set_of_var__filter_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__filter_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Word * param_5);

void MR_CALL 
parse_tree__set_of_var__fold_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

MR_bool MR_CALL 
parse_tree__set_of_var__fold_4_p_1(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__set_of_var__fold_func_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
parse_tree__set_of_var__graph_colour_group_elements_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__set_of_var__init_1_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
parse_tree__set_of_var__insert_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__insert_list_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__intersect_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__intersect_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

MR_bool MR_CALL 
parse_tree__set_of_var__is_empty_1_p_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
parse_tree__set_of_var__is_member_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
parse_tree__set_of_var__is_non_empty_1_p_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
parse_tree__set_of_var__is_singleton_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__set_of_var__list_to_set_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__set_of_var__make_singleton_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

MR_bool MR_CALL 
parse_tree__set_of_var__member_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__set_of_var__member_2_p_1(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Cont param_4,
  void * param_5);

MR_bool MR_CALL 
parse_tree__set_of_var__remove_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
parse_tree__set_of_var__remove_least_3_p_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
parse_tree__set_of_var__remove_list_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__sorted_list_to_set_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__set_of_var__to_sorted_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
parse_tree__set_of_var__union_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
parse_tree__set_of_var__union_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

MR_Word MR_CALL 
parse_tree__set_of_var__bitset_to_set_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Integer MR_CALL 
parse_tree__set_of_var__count_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
parse_tree__set_of_var__difference_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
parse_tree__set_of_var__filter_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
parse_tree__set_of_var__init_0_f_0(
  MR_Word param_1);

MR_Word MR_CALL 
parse_tree__set_of_var__intersect_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
parse_tree__set_of_var__intersect_list_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
parse_tree__set_of_var__list_to_set_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
parse_tree__set_of_var__make_singleton_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
parse_tree__set_of_var__set_to_bitset_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
parse_tree__set_of_var__sorted_list_to_set_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
parse_tree__set_of_var__to_sorted_list_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
parse_tree__set_of_var__union_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
parse_tree__set_of_var__union_list_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
parse_tree__set_of_var____Compare____set_of_progvar_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__set_of_var____Compare____set_of_tvar_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
parse_tree__set_of_var____Compare____set_of_var_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_bool MR_CALL 
parse_tree__set_of_var____Unify____set_of_progvar_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
parse_tree__set_of_var____Unify____set_of_tvar_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
parse_tree__set_of_var____Unify____set_of_var_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void mercury__parse_tree__set_of_var__init(void);
void mercury__parse_tree__set_of_var__init_type_tables(void);
void mercury__parse_tree__set_of_var__init_debugger(void);
const char *mercury__parse_tree__set_of_var__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_parse_tree.set_of_var

// :- end_interface parse_tree.set_of_var.
