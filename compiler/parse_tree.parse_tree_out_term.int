:- module (parse_tree.parse_tree_out_term).
:- interface.
:- use_module io.
:- use_module list.
:- use_module term.
:- use_module varset.
:- use_module (parse_tree.parse_tree_out_info).
:- use_module (parse_tree.prog_data).
:- use_module (parse_tree.var_db).
:- use_module (parse_tree.var_table).
:- type graphic_char_in_string
    --->    no_graphic_chars 
    ;       some_graphic_chars 
    ;       all_graphic_chars .
:- type needs_quotes
    --->    next_to_graphic_token 
    ;       not_next_to_graphic_token .
:- func describe_error_term(varset.varset(T), term.term(T)) = string.
:- func mercury_bracketed_atom_to_string(parse_tree.parse_tree_out_term.needs_quotes, string) = string.
:- pred mercury_convert_var_name(string, string).
:- mode mercury_convert_var_name((builtin.in), (builtin.out)) is det.
:- pred mercury_format_bracketed_atom(parse_tree.parse_tree_out_term.needs_quotes, string, S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_bracketed_atom((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_comma_separated_terms(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_term, list.list(parse_tree.prog_data.prog_term), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_comma_separated_terms((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_comma_separated_terms_vs(varset.varset(T), parse_tree.prog_data.var_name_print, term.term(T), list.list(term.term(T)), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_comma_separated_terms_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_quoted_atom(parse_tree.parse_tree_out_term.needs_quotes, string, S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_quoted_atom((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_term(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_term, S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_term((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_term_nq(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, parse_tree.prog_data.prog_term, S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_term_nq((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_term_nq_vs(varset.varset(T), parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, term.term(T), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_term_nq_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_term_vs(varset.varset(T), parse_tree.prog_data.var_name_print, term.term(T), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_term_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_var(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_var, S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_var((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_var_num_only(term.var(T), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_var_num_only((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_var_raw(parse_tree.prog_data.var_name_print, term.var(T), string, S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_var_raw((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_var_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_var, S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_var_src((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_var_vs(varset.varset(T), parse_tree.prog_data.var_name_print, term.var(T), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_var_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_vars(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, list.list(parse_tree.prog_data.prog_var), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_vars((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_vars_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, list.list(parse_tree.prog_data.prog_var), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_vars_src((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_vars_vs(varset.varset(T), parse_tree.prog_data.var_name_print, list.list(term.var(T)), S, U, U) <= ((parse_tree.parse_tree_out_info).pt_output(S, U)).
:- mode mercury_format_vars_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- func mercury_limited_term_nq_to_string_vs(varset.varset(T), parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, int, term.term(T)) = string.
:- func mercury_limited_term_to_string_vs(varset.varset(T), parse_tree.prog_data.var_name_print, int, term.term(T)) = string.
:- pred mercury_op(string).
:- mode mercury_op((builtin.in)) is semidet.
:- pred mercury_output_limited_term_nq_vs(varset.varset(T), parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, int, term.term(T), io.text_output_stream, io.io, io.io).
:- mode mercury_output_limited_term_nq_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_limited_term_vs(varset.varset(T), parse_tree.prog_data.var_name_print, int, term.term(T), io.text_output_stream, io.io, io.io).
:- mode mercury_output_limited_term_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_term(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_term, io.text_output_stream, io.io, io.io).
:- mode mercury_output_term((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_term_nq(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, parse_tree.prog_data.prog_term, io.text_output_stream, io.io, io.io).
:- mode mercury_output_term_nq((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_term_nq_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, parse_tree.prog_data.prog_term, io.text_output_stream, io.io, io.io).
:- mode mercury_output_term_nq_src((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_term_nq_vs(varset.varset(T), parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, term.term(T), io.text_output_stream, io.io, io.io).
:- mode mercury_output_term_nq_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_term_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_term, io.text_output_stream, io.io, io.io).
:- mode mercury_output_term_src((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_term_vs(varset.varset(T), parse_tree.prog_data.var_name_print, term.term(T), io.text_output_stream, io.io, io.io).
:- mode mercury_output_term_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_var(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_var, io.text_output_stream, io.io, io.io).
:- mode mercury_output_var((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_var_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_var, io.text_output_stream, io.io, io.io).
:- mode mercury_output_var_src((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_var_vs(varset.varset(T), parse_tree.prog_data.var_name_print, term.var(T), io.text_output_stream, io.io, io.io).
:- mode mercury_output_var_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_vars(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, list.list(parse_tree.prog_data.prog_var), io.text_output_stream, io.io, io.io).
:- mode mercury_output_vars((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_vars_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, list.list(parse_tree.prog_data.prog_var), io.text_output_stream, io.io, io.io).
:- mode mercury_output_vars_src((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_vars_vs(varset.varset(T), parse_tree.prog_data.var_name_print, list.list(term.var(T)), io.text_output_stream, io.io, io.io).
:- mode mercury_output_vars_vs((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- func mercury_term_nq_to_string(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, parse_tree.prog_data.prog_term) = string.
:- func mercury_term_nq_to_string_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, parse_tree.prog_data.prog_term) = string.
:- func mercury_term_nq_to_string_vs(varset.varset(T), parse_tree.prog_data.var_name_print, parse_tree.parse_tree_out_term.needs_quotes, term.term(T)) = string.
:- func mercury_term_to_string(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_term) = string.
:- func mercury_term_to_string_vs(varset.varset(T), parse_tree.prog_data.var_name_print, term.term(T)) = string.
:- func mercury_var_raw_to_string(parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_var, string) = string.
:- func mercury_var_to_name_only(parse_tree.var_table.var_table, parse_tree.prog_data.prog_var) = string.
:- func mercury_var_to_name_only_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.prog_var) = string.
:- func mercury_var_to_name_only_vs(varset.varset(T), term.var(T)) = string.
:- func mercury_var_to_string(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_var) = string.
:- func mercury_var_to_string_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, parse_tree.prog_data.prog_var) = string.
:- func mercury_var_to_string_vs(varset.varset(T), parse_tree.prog_data.var_name_print, term.var(T)) = string.
:- func mercury_vars_to_name_only(parse_tree.var_table.var_table, list.list(parse_tree.prog_data.prog_var)) = string.
:- func mercury_vars_to_name_only_src(parse_tree.var_db.var_name_source, list.list(parse_tree.prog_data.prog_var)) = string.
:- func mercury_vars_to_name_only_vs(varset.varset(T), list.list(term.var(T))) = string.
:- func mercury_vars_to_string(parse_tree.var_table.var_table, parse_tree.prog_data.var_name_print, list.list(parse_tree.prog_data.prog_var)) = string.
:- func mercury_vars_to_string_src(parse_tree.var_db.var_name_source, parse_tree.prog_data.var_name_print, list.list(parse_tree.prog_data.prog_var)) = string.
:- func mercury_vars_to_string_vs(varset.varset(T), parse_tree.prog_data.var_name_print, list.list(term.var(T))) = string.
:- func string_graphic_chars(string) = parse_tree.parse_tree_out_term.graphic_char_in_string.
