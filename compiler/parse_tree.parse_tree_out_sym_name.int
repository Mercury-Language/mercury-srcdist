:- module (parse_tree.parse_tree_out_sym_name).
:- interface.
:- use_module io.
:- use_module mdbcomp.
:- use_module (mdbcomp.prim_data).
:- use_module (mdbcomp.sym_name).
:- use_module (parse_tree.parse_tree_out_info).
:- use_module (parse_tree.parse_tree_out_term).
:- use_module (parse_tree.prog_data).
:- type needs_brackets
    --->    needs_brackets 
    ;       does_not_need_brackets .
:- func class_id_to_string(parse_tree.prog_data.class_id) = string.
:- func mercury_bracketed_sym_name_arity_to_string(parse_tree.prog_data.sym_name_arity) = string.
:- func mercury_bracketed_sym_name_to_string(mdbcomp.sym_name.sym_name) = string.
:- func mercury_bracketed_sym_name_to_string_ngt(parse_tree.parse_tree_out_term.needs_quotes, mdbcomp.sym_name.sym_name) = string.
:- pred mercury_format_bracketed_sym_name(mdbcomp.sym_name.sym_name, S, U, U) <= ((parse_tree.parse_tree_out_info).output(S, U)).
:- mode mercury_format_bracketed_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_bracketed_sym_name_arity(parse_tree.prog_data.sym_name_arity, S, U, U) <= ((parse_tree.parse_tree_out_info).output(S, U)).
:- mode mercury_format_bracketed_sym_name_arity((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_bracketed_sym_name_ngt(parse_tree.parse_tree_out_term.needs_quotes, mdbcomp.sym_name.sym_name, S, U, U) <= ((parse_tree.parse_tree_out_info).output(S, U)).
:- mode mercury_format_bracketed_sym_name_ngt((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_sym_name(mdbcomp.sym_name.sym_name, S, U, U) <= ((parse_tree.parse_tree_out_info).output(S, U)).
:- mode mercury_format_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_sym_name_arity(parse_tree.prog_data.sym_name_arity, S, U, U) <= ((parse_tree.parse_tree_out_info).output(S, U)).
:- mode mercury_format_sym_name_arity((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_format_sym_name_ngt(parse_tree.parse_tree_out_term.needs_quotes, mdbcomp.sym_name.sym_name, S, U, U) <= ((parse_tree.parse_tree_out_info).output(S, U)).
:- mode mercury_format_sym_name_ngt((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_bracketed_sym_name(mdbcomp.sym_name.sym_name, io.text_output_stream, io.io, io.io).
:- mode mercury_output_bracketed_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_bracketed_sym_name_ngt(parse_tree.parse_tree_out_term.needs_quotes, mdbcomp.sym_name.sym_name, io.text_output_stream, io.io, io.io).
:- mode mercury_output_bracketed_sym_name_ngt((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred mercury_output_sym_name(mdbcomp.sym_name.sym_name, io.text_output_stream, io.io, io.io).
:- mode mercury_output_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- func mercury_sym_name_arity_to_string(parse_tree.prog_data.sym_name_arity) = string.
:- func mercury_sym_name_to_string(mdbcomp.sym_name.sym_name) = string.
:- func module_name_to_escaped_string(mdbcomp.sym_name.module_name) = string.
:- func pf_sym_name_pred_form_arity_to_string(parse_tree.prog_data.pf_sym_name_arity) = string.
:- func pf_sym_name_pred_form_arity_to_string(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.sym_name_arity) = string.
:- func pf_sym_name_pred_form_arity_to_string(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.sym_name, parse_tree.prog_data.pred_form_arity) = string.
:- func pf_sym_name_user_arity_to_string(parse_tree.prog_data.pred_pf_name_arity) = string.
:- func pf_sym_name_user_arity_to_string(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.sym_name_arity) = string.
:- func pf_sym_name_user_arity_to_string(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.sym_name, parse_tree.prog_data.arity) = string.
:- func pf_sym_name_user_arity_to_unquoted_string(parse_tree.prog_data.pred_pf_name_arity) = string.
:- func pf_sym_name_user_arity_to_unquoted_string(mdbcomp.prim_data.pred_or_func, parse_tree.prog_data.sym_name_arity) = string.
:- func pf_sym_name_user_arity_to_unquoted_string(mdbcomp.prim_data.pred_or_func, mdbcomp.sym_name.sym_name, parse_tree.prog_data.arity) = string.
:- func sym_name_arity_to_string(parse_tree.prog_data.sym_name_arity) = string.
:- func sym_name_to_escaped_string(mdbcomp.sym_name.sym_name) = string.
:- func type_ctor_to_string(parse_tree.prog_data.type_ctor) = string.
:- func type_name_to_string(parse_tree.prog_data.type_ctor) = string.
:- pred write_class_id(io.text_output_stream, parse_tree.prog_data.class_id, io.io, io.io).
:- mode write_class_id((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_quoted_sym_name(io.text_output_stream, mdbcomp.sym_name.sym_name, io.io, io.io).
:- mode write_quoted_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_sym_name(io.text_output_stream, mdbcomp.sym_name.sym_name, io.io, io.io).
:- mode write_sym_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_sym_name_arity(io.text_output_stream, parse_tree.prog_data.sym_name_arity, io.io, io.io).
:- mode write_sym_name_arity((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_type_name(io.text_output_stream, parse_tree.prog_data.type_ctor, io.io, io.io).
:- mode write_type_name((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
