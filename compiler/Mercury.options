#-----------------------------------------------------------------------------#
# Copyright (C) 2002-2009 University of Melbourne.
# This file may only be copied under the terms of the GNU General
# Public License - see the file COPYING in the Mercury distribution.
#-----------------------------------------------------------------------------#
# Mercury.options - module-specific flags for Mmake and `mmc --make'.
#-----------------------------------------------------------------------------#

# llds_out.m contains some sanity checking code that is usually turned off.
# However, the cost of checking whether they are turned off exceeds the cost of
# performing them, unless inlining is enabled.
MCFLAGS-ll_backend.llds_out = --inlining

# Several predicates in quantification.m contain an argument which is needed
# only to select the right mode. We want to make sure that we don't take up
# code space or execution time to pass these arguments.
MCFLAGS-hlds.quantification = --optimize-unused-args

# Delete the code that computes information needed only in trace goals
# in the common case that the trace goals are not enabled.
# typecheck_module_one_iteration should be tail recursive.
MCFLAGS-check_hlds.typecheck = --unneeded-code --optimize-constructor-last-call

# compute_goals_purity should be tail recursive.
MCFLAGS-check_hlds.purity = --optimize-constructor-last-call

# module_qualify_items_loop should be tail recursive.
MCFLAGS-parse_tree.module_qual.qualify_items = --optimize-constructor-last-call

# The predicates in these modules that could be transformed by lcmc
# are not speed-critical.
MCFLAGS-backend_libs.base_typeclass_info  = --no-optimize-constructor-last-call
MCFLAGS-backend_libs.compile_target_code  = --no-optimize-constructor-last-call
MCFLAGS-backend_libs.export               = --no-optimize-constructor-last-call
MCFLAGS-backend_libs.interval             = --no-optimize-constructor-last-call
MCFLAGS-backend_libs.matching             = --no-optimize-constructor-last-call
MCFLAGS-backend_libs.saved_vars           = --no-optimize-constructor-last-call
MCFLAGS-bytecode_backend.bytecode_gen     = --no-optimize-constructor-last-call
MCFLAGS-check_hlds.ordering_mode_constraints \
                                          = --no-optimize-constructor-last-call
MCFLAGS-check_hlds.post_typecheck         = --no-optimize-constructor-last-call
MCFLAGS-check_hlds.type_constraints       = --no-optimize-constructor-last-call
MCFLAGS-hlds.assertion                    = --no-optimize-constructor-last-call
MCFLAGS-hlds.error_msg_inst               = --no-optimize-constructor-last-call
MCFLAGS-hlds.hhf                          = --no-optimize-constructor-last-call
MCFLAGS-parse_tree.error_util             = --no-optimize-constructor-last-call
MCFLAGS-parse_tree.prog_ctgc              = --no-optimize-constructor-last-call
MCFLAGS-parse_tree.prog_data_foreign      = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.ctgc.structure_reuse.analysis \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.ctgc.structure_reuse.direct.choose_reuse \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.ctgc.structure_reuse.indirect \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.ctgc.structure_reuse.lbu \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.ctgc.structure_reuse.lfu \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.ctgc.structure_reuse.versions \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.rbmm.condition_renaming \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.rbmm.execution_path \
                                          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.size_prof          = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.stm_expand         = --no-optimize-constructor-last-call
MCFLAGS-transform_hlds.table_gen          = --no-optimize-constructor-last-call

# In these files, some imports are needed only in some grades.
# Until unused_imports.m can avoid generating messages about these,
# disable the pass on these files.
MCFLAGS-libs.md4                          = --no-warn-unused-imports
MCFLAGS-libs.process_util                 = --no-warn-unused-imports
MCFLAGS-libs.timestamp                    = --no-warn-unused-imports

# process_util.m uses `kill' and `struct sigaction' from <signal.h>,
# which are not available with `--ansi'.
MGNUCFLAGS-libs.process_util              = --no-ansi

# make.util.m uses POSIX IPC.
MGNUCFLAGS-make.util                      = --no-ansi

# If intermodule optimization is enabled, we also need to use `--no-ansi'
# for the following modules, because they import process_util.
MGNUCFLAGS-make.module_dep_file           = --no-ansi
MGNUCFLAGS-make.module_target             = --no-ansi
MGNUCFLAGS-make.program_target            = --no-ansi

MCFLAGS-check_hlds.modes                  = --inline-vars-threshold 10000
MCFLAGS-check_hlds.unique_modes           = --inline-vars-threshold 10000

MCFLAGS-libs.process_util                 += --no-ansi-c
MCFLAGS-make.module_dep_file              = --no-ansi-c
MCFLAGS-make.module_target                = --no-ansi-c
MCFLAGS-make.program_target               = --no-ansi-c
MCFLAGS-make.util                         = --no-ansi-c

# These modules provide general-purpose wrappers around string.format
# in which the format strings are known only by their callers.
MCFLAGS-transform_hlds.pd_debug           = --no-warn-unknown-format-calls
MCFLAGS-parse_tree.parse_tree_out_info    = --no-warn-unknown-format-calls

MCFLAGS-libs.mmakefiles                   = --warn-implicit-stream-calls
MCFLAGS-parse_tree.write_deps_file        = --warn-implicit-stream-calls

MCFLAGS-hlds.hlds_data                += --warn-inconsistent-pred-order-clauses
MCFLAGS-ll_backend.unify_gen          += --warn-inconsistent-pred-order-clauses
MCFLAGS-ll_backend.unify_gen_deconstruct += --warn-inconsistent-pred-order-clauses
MCFLAGS-ll_backend.unify_gen_construct += --warn-inconsistent-pred-order-clauses
MCFLAGS-ll_backend.unify_gen_test     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ll_backend.unify_gen_util     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.ml_unify_gen       += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.ml_unify_gen_deconstruct += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.ml_unify_gen_construct += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.ml_unify_gen_test  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.ml_unify_gen_util  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_class    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_data     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_export   += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_file     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_func     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_global   += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_name     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_stmt     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_type     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_c_util     += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_class   += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_data    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_export  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_file    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_func    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_global  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_name    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_stmt    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_type    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_cs_util    += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_class += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_data  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_export+= --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_file  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_func  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_global+= --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_name  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_stmt  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_type  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_util  += --warn-inconsistent-pred-order-clauses
MCFLAGS-ml_backend.mlds_to_java_wrap  += --warn-inconsistent-pred-order-clauses

# Bug workarounds.

# This works around bug 48 in Mantis.
# (This has been fixed, and the workaround can be removed once new compilers
# have been installed.)
MCFLAGS-analysis = --no-common-struct

# XXX work around a bug that sometimes appears at -O4 and above.
# mmc -r analysis.file.c -s asm_fast.gc -O4 --intermodule-optimisation
MCFLAGS-analysis.file = --no-optimise-higher-order

# This works around bug 32 in Mantis.
MCFLAGS-check_hlds.check_typeclass = --no-loop-invariants

# This is the same bug as tests/valid/ho_and_type_spec_bug2.
MCFLAGS-mode_robdd.tfeirn = -O3
MCFLAGS-mode_robdd.implications = -O0

# Work around a problem in the HiPE compiler (as of Erlang R11B5).
MCFLAGS-libs.options += --erlang-switch-on-strings-as-atoms

MCFLAGS-check_hlds.abstract_mode_constraints += --no-warn-inconsistent-pred-order-clauses
