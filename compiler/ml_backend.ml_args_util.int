:- module (ml_backend.ml_args_util).
:- interface.
:- import_module bool.
:- import_module hlds.
:- import_module list.
:- import_module map.
:- import_module mdbcomp.
:- import_module parse_tree.
:- import_module (hlds.code_model).
:- import_module (hlds.hlds_module).
:- import_module (hlds.hlds_pred).
:- import_module (hlds.hlds_rtti).
:- import_module (mdbcomp.prim_data).
:- import_module (ml_backend.ml_gen_info).
:- import_module (ml_backend.mlds).
:- import_module (parse_tree.prog_data).
:- type solo_or_tscc
    --->    sot_solo 
    ;       sot_tscc .
:- type what_params
    --->    input_params_only 
    ;       input_and_output_params .
:- pred ml_append_return_statement(hlds.code_model.code_model, ml_backend.ml_args_util.solo_or_tscc, list.list(ml_backend.mlds.mlds_lval), parse_tree.prog_data.prog_context, list.list(ml_backend.mlds.mlds_stmt), list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_append_return_statement((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_args(list.list(ml_backend.mlds.mlds_local_var_name), list.list(ml_backend.mlds.mlds_lval), list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.mer_mode), mdbcomp.prim_data.pred_or_func, hlds.code_model.code_model, parse_tree.prog_data.prog_context, bool.bool, ml_backend.ml_args_util.what_params, int, list.list(ml_backend.mlds.mlds_rval), list.list(ml_backend.mlds.mlds_lval), list.list(ml_backend.mlds.mlds_type), list.list(ml_backend.mlds.mlds_local_var_defn), list.list(ml_backend.mlds.mlds_stmt), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_args((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_info_proc_params(hlds.hlds_pred.pred_proc_id, ml_backend.mlds.mlds_func_params, list.list(parse_tree.prog_data.prog_var), list.list(parse_tree.prog_data.prog_var), ml_backend.ml_gen_info.ml_gen_info, ml_backend.ml_gen_info.ml_gen_info).
:- mode ml_gen_info_proc_params((builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred ml_gen_params_no_gc_stmts(hlds.hlds_module.module_info, mdbcomp.prim_data.pred_or_func, hlds.code_model.code_model, list.list(parse_tree.prog_data.prog_var), list.list(ml_backend.mlds.mlds_local_var_name), list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.mer_mode), ml_backend.mlds.mlds_func_params).
:- mode ml_gen_params_no_gc_stmts((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func ml_gen_proc_params_from_rtti_no_gc_stmts(hlds.hlds_module.module_info, hlds.hlds_rtti.rtti_proc_label) = ml_backend.mlds.mlds_func_params.
:- func ml_gen_proc_params_inputs_only_no_gc_stmts(hlds.hlds_module.module_info, hlds.hlds_pred.pred_proc_id) = list.list(ml_backend.mlds.mlds_argument).
:- func ml_gen_proc_params_no_gc_stmts(hlds.hlds_module.module_info, hlds.hlds_pred.pred_proc_id) = ml_backend.mlds.mlds_func_params.
:- pred ml_gen_tscc_arg_decls(hlds.hlds_module.module_info, list.list(ml_backend.mlds.mlds_local_var_name), list.list(parse_tree.prog_data.mer_type), list.list(hlds.hlds_pred.top_functor_mode), parse_tree.prog_data.prog_varset, parse_tree.prog_data.prog_context, ml_backend.mlds.proc_id_in_tscc, int, int, int, map.map(int, string), map.map(int, string), list.list(ml_backend.mlds.mlds_argument), list.list(ml_backend.mlds.mlds_local_var_defn), list.list(ml_backend.mlds.mlds_argument), list.list(ml_backend.mlds.mlds_local_var_defn), list.list(ml_backend.mlds.mlds_stmt)).
:- mode ml_gen_tscc_arg_decls((builtin.in), builtin.in(list.list_skel(((ml_backend.mlds).lvn_prog_var))), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out)) is det.
