/*
** Automatically generated from `c_util.m'
** by the Mercury compiler,
** version rotd-2022-11-15
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module backend_libs.c_util.
// :- interface.

#ifndef MR_HEADER_GUARD_backend_libs__c_util
#define MR_HEADER_GUARD_backend_libs__c_util

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef BACKEND_LIBS__C_UTIL_DECL_GUARD
#define BACKEND_LIBS__C_UTIL_DECL_GUARD
#include "backend_libs.mih"

#endif



extern const MR_TypeCtorInfo_Struct backend_libs__c_util__backend_libs__c_util__type_ctor_info_maybe_set_line_numbers_0;

extern const MR_TypeCtorInfo_Struct backend_libs__c_util__backend_libs__c_util__type_ctor_info_multi_string_0;

void MR_CALL 
backend_libs__c_util__always_reset_line_num_4_p_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
backend_libs__c_util__always_set_line_num_5_p_0(
  MR_Word param_1,
  MR_String param_2,
  MR_Integer param_3);

MR_bool MR_CALL 
backend_libs__c_util__is_valid_c_identifier_1_p_0(
  MR_String param_1);

void MR_CALL 
backend_libs__c_util__maybe_reset_line_num_5_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__c_util__maybe_set_line_num_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_String param_3,
  MR_Integer param_4);

void MR_CALL 
backend_libs__c_util__output_c_file_intro_and_grade_7_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_String param_3,
  MR_String param_4,
  MR_String param_5);

void MR_CALL 
backend_libs__c_util__output_float_literal_4_p_0(
  MR_Word param_1,
  MR_Float param_2);

void MR_CALL 
backend_libs__c_util__output_init_c_comment_7_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5);

void MR_CALL 
backend_libs__c_util__output_int16_expr_4_p_0(
  MR_Word param_1,
  int16_t param_2);

void MR_CALL 
backend_libs__c_util__output_int32_expr_4_p_0(
  MR_Word param_1,
  int32_t param_2);

void MR_CALL 
backend_libs__c_util__output_int64_expr_4_p_0(
  MR_Word param_1,
  int64_t param_2);

void MR_CALL 
backend_libs__c_util__output_int8_expr_4_p_0(
  MR_Word param_1,
  int8_t param_2);

void MR_CALL 
backend_libs__c_util__output_int_expr_4_p_0(
  MR_Word param_1,
  MR_Integer param_2);

void MR_CALL 
backend_libs__c_util__output_pragma_pack_pop_3_p_0(
  MR_Word param_1);

void MR_CALL 
backend_libs__c_util__output_pragma_pack_push_3_p_0(
  MR_Word param_1);

void MR_CALL 
backend_libs__c_util__output_quoted_char_c_4_p_0(
  MR_Word param_1,
  MR_Char param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_char_csharp_4_p_0(
  MR_Word param_1,
  MR_Char param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_char_java_4_p_0(
  MR_Word param_1,
  MR_Char param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_multi_string_c_4_p_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_multi_string_csharp_4_p_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_multi_string_java_4_p_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_string_c_4_p_0(
  MR_Word param_1,
  MR_String param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_string_csharp_4_p_0(
  MR_Word param_1,
  MR_String param_2);

void MR_CALL 
backend_libs__c_util__output_quoted_string_java_4_p_0(
  MR_Word param_1,
  MR_String param_2);

void MR_CALL 
backend_libs__c_util__output_to_be_quoted_char_c_4_p_0(
  MR_Word param_1,
  MR_Char param_2);

void MR_CALL 
backend_libs__c_util__output_to_be_quoted_char_csharp_4_p_0(
  MR_Word param_1,
  MR_Char param_2);

void MR_CALL 
backend_libs__c_util__output_to_be_quoted_char_java_4_p_0(
  MR_Word param_1,
  MR_Char param_2);

void MR_CALL 
backend_libs__c_util__output_uint16_expr_4_p_0(
  MR_Word param_1,
  uint16_t param_2);

void MR_CALL 
backend_libs__c_util__output_uint32_expr_4_p_0(
  MR_Word param_1,
  uint32_t param_2);

void MR_CALL 
backend_libs__c_util__output_uint64_expr_4_p_0(
  MR_Word param_1,
  uint64_t param_2);

void MR_CALL 
backend_libs__c_util__output_uint8_expr_4_p_0(
  MR_Word param_1,
  uint8_t param_2);

void MR_CALL 
backend_libs__c_util__output_uint_expr_4_p_0(
  MR_Word param_1,
  MR_Unsigned param_2);

void MR_CALL 
backend_libs__c_util__unary_prefix_op_2_p_0(
  MR_Word param_1,
  MR_String * param_2);

MR_String MR_CALL 
backend_libs__c_util__hex_hash32_1_f_0(
  MR_String param_1);

MR_Word MR_CALL 
backend_libs__c_util__lookup_line_numbers_2_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_String MR_CALL 
backend_libs__c_util__make_float_literal_1_f_0(
  MR_Float param_1);

MR_String MR_CALL 
backend_libs__c_util__make_int64_literal_1_f_0(
  int64_t param_1);

MR_String MR_CALL 
backend_libs__c_util__make_uint64_literal_1_f_0(
  uint64_t param_1);

MR_String MR_CALL 
backend_libs__c_util__prepare_to_quote_char_c_1_f_0(
  MR_Char param_1);

MR_String MR_CALL 
backend_libs__c_util__prepare_to_quote_string_c_1_f_0(
  MR_String param_1);

MR_String MR_CALL 
backend_libs__c_util__quote_char_c_1_f_0(
  MR_Char param_1);

MR_String MR_CALL 
backend_libs__c_util__quote_string_c_1_f_0(
  MR_String param_1);

void MR_CALL 
backend_libs__c_util____Compare____maybe_set_line_numbers_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
backend_libs__c_util____Compare____multi_string_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
backend_libs__c_util____Unify____maybe_set_line_numbers_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
backend_libs__c_util____Unify____multi_string_0_0(
  MR_Word param_1,
  MR_Word param_2);

void mercury__backend_libs__c_util__init(void);
void mercury__backend_libs__c_util__init_type_tables(void);
void mercury__backend_libs__c_util__init_debugger(void);
const char *mercury__backend_libs__c_util__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_backend_libs.c_util

// :- end_interface backend_libs.c_util.
