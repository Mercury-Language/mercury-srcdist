:- module (check_hlds.polymorphism_info).
:- interface.
:- use_module list.
:- use_module map.
:- use_module maybe.
:- use_module pair.
:- use_module (hlds.const_struct).
:- use_module (parse_tree.prog_data).
:- type cache_maps
    --->    cache_maps(((check_hlds.polymorphism_info).cm_snapshot_num) :: int, ((check_hlds.polymorphism_info).cm_type_info_var_map) :: check_hlds.polymorphism_info.type_info_var_map, ((check_hlds.polymorphism_info).cm_typeclass_info_map) :: check_hlds.polymorphism_info.typeclass_info_map, ((check_hlds.polymorphism_info).cm_int_const_map) :: check_hlds.polymorphism_info.int_const_map, ((check_hlds.polymorphism_info).cm_const_struct_var_map) :: check_hlds.polymorphism_info.const_struct_var_map).
:- type const_or_var_arg
    --->    cova_const(hlds.const_struct.const_struct_arg)
    ;       cova_var(parse_tree.prog_data.prog_var).
:- type const_struct_var_map == map.map(hlds.const_struct.const_struct_arg, parse_tree.prog_data.prog_var).
:- type int_const_map == map.map(int, parse_tree.prog_data.prog_var).
:- type maybe_must_requantify
    --->    no_must_requantify 
    ;       must_requantify .
:- type maybe_selected_pred
    --->    is_not_selected_pred 
    ;       is_selected_pred .
:- type poly_info.
:- type type_info_var_map == map.map(parse_tree.prog_data.type_ctor, map.map(list.list(parse_tree.prog_data.mer_type), pair.pair(parse_tree.prog_data.prog_var, maybe.maybe(hlds.const_struct.const_struct_arg)))).
:- type typeclass_info_map == map.map(parse_tree.prog_data.class_name, map.map(list.list(parse_tree.prog_data.mer_type), check_hlds.polymorphism_info.typeclass_info_map_entry)).
:- type typeclass_info_map_entry
    --->    typeclass_info_map_entry(parse_tree.prog_data.cons_id, map.map(list.list(check_hlds.polymorphism_info.const_or_var_arg), pair.pair(parse_tree.prog_data.prog_var, maybe.maybe(hlds.const_struct.const_struct_arg)))).
:- type var_maps
    --->    var_maps(((check_hlds.polymorphism_info).vm_snapshot_num) :: int, ((check_hlds.polymorphism_info).vm_varset) :: parse_tree.prog_data.prog_varset, ((check_hlds.polymorphism_info).vm_vartypes) :: hlds.vartypes.vartypes, ((check_hlds.polymorphism_info).vm_rtti_varmaps) :: hlds.hlds_rtti.rtti_varmaps, ((check_hlds.polymorphism_info).vm_cache_maps) :: check_hlds.polymorphism_info.cache_maps).
