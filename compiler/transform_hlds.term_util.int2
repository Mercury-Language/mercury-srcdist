:- module (transform_hlds.term_util).
:- interface.
:- use_module bool.
:- use_module list.
:- use_module map.
:- use_module unit.
:- use_module (hlds.hlds_pred).
:- use_module (parse_tree.prog_data_pragma).
:- use_module (transform_hlds.term_errors).
:- type arg_size_info == parse_tree.prog_data_pragma.generic_arg_size_info(list.list(transform_hlds.term_errors.term_error)).
:- type pass_info
    --->    pass_info(transform_hlds.term_norm.functor_info, int, int).
:- type termination_info == parse_tree.prog_data_pragma.generic_termination_info(unit.unit, list.list(transform_hlds.term_errors.term_error)).
:- type used_args == map.map(hlds.hlds_pred.pred_proc_id, list.list(bool.bool)).
:- type_representation((transform_hlds.term_util).arg_size_info, is_eqv_to(parse_tree.prog_data_pragma.generic_arg_size_info(list.list(transform_hlds.term_errors.term_error)))).
:- type_representation((transform_hlds.term_util).pass_info, is_word_aligned_ptr).
:- type_representation((transform_hlds.term_util).termination_info, is_eqv_to(parse_tree.prog_data_pragma.generic_termination_info(unit.unit, list.list(transform_hlds.term_errors.term_error)))).
:- type_representation((transform_hlds.term_util).used_args, is_eqv_to(map.map(hlds.hlds_pred.pred_proc_id, list.list(bool.bool)))).
