/*
** Automatically generated from `prog_out.m'
** by the Mercury compiler,
** version rotd-2014-09-30
** configured for x86_64-apple-darwin13.3.0.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


/* :- module parse_tree.prog_out. */
/* :- interface. */

#ifndef MR_HEADER_GUARD_parse_tree__prog_out
#define MR_HEADER_GUARD_parse_tree__prog_out

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef PARSE_TREE__PROG_OUT_DECL_GUARD
#define PARSE_TREE__PROG_OUT_DECL_GUARD
#include "parse_tree.mih"

#endif




#line 149 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__can_fail_to_string_1_f_0(
#line 149 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 147 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__determinism_to_string_1_f_0(
#line 147 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 145 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__arg_tabling_method_to_string_1_f_0(
#line 145 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 143 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__maybe_arg_tabling_method_to_string_1_f_0(
#line 143 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 141 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_eval_method_3_p_0(
#line 141 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 140 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__eval_method_to_string_1_f_0(
#line 140 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 136 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__eval_method_to_pragma_name_1_f_0(
#line 136 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 131 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__purity_prefix_to_string_1_f_0(
#line 131 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 130 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_purity_prefix_3_p_0(
#line 130 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 124 "prog_out.m"
MR_bool MR_CALL 
parse_tree__prog_out__purity_name_2_p_1(
#line 124 "prog_out.m"
  MR_Word * parse_tree__prog_out__param_1,
#line 124 "prog_out.m"
  MR_String parse_tree__prog_out__param_2);

#line 123 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__purity_name_2_p_0(
#line 123 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 123 "prog_out.m"
  MR_String * parse_tree__prog_out__param_2);

#line 118 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_purity_3_p_0(
#line 118 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 114 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__pred_or_func_to_str_1_f_0(
#line 114 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 110 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__pred_or_func_to_full_str_1_f_0(
#line 110 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 106 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_pred_or_func_3_p_0(
#line 106 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 102 "prog_out.m"
MR_bool MR_CALL 
parse_tree__prog_out__builtin_type_to_string_2_p_1(
#line 102 "prog_out.m"
  MR_Word * parse_tree__prog_out__param_1,
#line 102 "prog_out.m"
  MR_String parse_tree__prog_out__param_2);

#line 101 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__builtin_type_to_string_2_p_0(
#line 101 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 101 "prog_out.m"
  MR_String * parse_tree__prog_out__param_2);

#line 98 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__type_name_to_string_1_f_0(
#line 98 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 96 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_type_name_3_p_0(
#line 96 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 94 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__promise_to_string_1_f_2(
#line 94 "prog_out.m"
  MR_Word * parse_tree__prog_out__param_1,
#line 94 "prog_out.m"
  MR_String * parse_tree__prog_out__param_2,
#line 94 "prog_out.m"
  MR_Cont parse_tree__prog_out__param_3,
#line 94 "prog_out.m"
  void * parse_tree__prog_out__param_4);

#line 93 "prog_out.m"
MR_bool MR_CALL 
parse_tree__prog_out__promise_to_string_1_f_1(
#line 93 "prog_out.m"
  MR_Word * parse_tree__prog_out__param_1,
#line 93 "prog_out.m"
  MR_String parse_tree__prog_out__param_2);

#line 92 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__promise_to_string_1_f_0(
#line 92 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 89 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_promise_type_3_p_0(
#line 89 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 87 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_string_list_3_p_0(
#line 87 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 85 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__module_spec_to_escaped_string_1_f_0(
#line 85 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 84 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_module_spec_3_p_0(
#line 84 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 79 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__simple_call_id_to_sym_name_and_arity_2_p_0(
#line 79 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 79 "prog_out.m"
  MR_Word * parse_tree__prog_out__param_2);

#line 77 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__simple_call_id_to_string_3_f_0(
#line 77 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 77 "prog_out.m"
  MR_Word parse_tree__prog_out__param_2,
#line 77 "prog_out.m"
  MR_Integer parse_tree__prog_out__param_3);

#line 75 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_simple_call_id_5_p_0(
#line 75 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 75 "prog_out.m"
  MR_Word parse_tree__prog_out__param_2,
#line 75 "prog_out.m"
  MR_Integer parse_tree__prog_out__param_3);

#line 73 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__simple_call_id_to_string_2_f_0(
#line 73 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 73 "prog_out.m"
  MR_Word parse_tree__prog_out__param_2);

#line 71 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_simple_call_id_4_p_0(
#line 71 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 71 "prog_out.m"
  MR_Word parse_tree__prog_out__param_2);

#line 69 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__simple_call_id_to_string_1_f_0(
#line 69 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 68 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_simple_call_id_3_p_0(
#line 68 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 66 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__sym_name_and_arity_to_string_1_f_0(
#line 66 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 58 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_quoted_sym_name_3_p_0(
#line 58 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 51 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_sym_name_and_arity_3_p_0(
#line 51 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 49 "prog_out.m"
MR_String MR_CALL 
parse_tree__prog_out__sym_name_to_escaped_string_1_f_0(
#line 49 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 48 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_sym_name_3_p_0(
#line 48 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

#line 41 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__context_to_string_2_p_0(
#line 41 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1,
#line 41 "prog_out.m"
  MR_String * parse_tree__prog_out__param_2);

#line 35 "prog_out.m"
void MR_CALL 
parse_tree__prog_out__write_context_3_p_0(
#line 35 "prog_out.m"
  MR_Word parse_tree__prog_out__param_1);

void mercury__parse_tree__prog_out__init(void);
void mercury__parse_tree__prog_out__init_type_tables(void);
void mercury__parse_tree__prog_out__init_debugger(void);

#ifdef __cplusplus
}
#endif

#endif /* MR_HEADER_GUARD_parse_tree.prog_out */

/* :- end_interface parse_tree.prog_out. */
