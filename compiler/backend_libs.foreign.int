:- module (backend_libs.foreign).
:- interface.
:- import_module bool.
:- import_module hlds.
:- import_module list.
:- import_module maybe.
:- import_module mdbcomp.
:- import_module parse_tree.
:- import_module (hlds.hlds_data).
:- import_module (hlds.hlds_module).
:- import_module (hlds.hlds_pred).
:- import_module (libs.globals).
:- import_module (mdbcomp.prim_data).
:- import_module (parse_tree.error_util).
:- import_module (parse_tree.prog_data).
:- import_module (parse_tree.prog_foreign).
:- type exported_type.
:- func decl_guard(((mdbcomp.prim_data).sym_name)) = string.
:- pred extrude_pragma_implementation((list.list(((libs.globals).foreign_language))), (list.list(((parse_tree.prog_data).pragma_var))), ((mdbcomp.prim_data).sym_name), ((mdbcomp.prim_data).pred_or_func), ((parse_tree.prog_data).prog_context), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), ((parse_tree.prog_data).pragma_foreign_proc_attributes), ((parse_tree.prog_data).pragma_foreign_proc_attributes), ((parse_tree.prog_data).pragma_foreign_code_impl), ((parse_tree.prog_data).pragma_foreign_code_impl)).
:- mode extrude_pragma_implementation((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred filter_bodys(((libs.globals).foreign_language), ((parse_tree.prog_foreign).foreign_body_info), ((parse_tree.prog_foreign).foreign_body_info), ((parse_tree.prog_foreign).foreign_body_info)).
:- mode filter_bodys((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred filter_decls(((libs.globals).foreign_language), ((parse_tree.prog_foreign).foreign_decl_info), ((parse_tree.prog_foreign).foreign_decl_info), ((parse_tree.prog_foreign).foreign_decl_info)).
:- mode filter_decls((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred filter_exports(((libs.globals).foreign_language), (list.list(((hlds.hlds_module).pragma_exported_proc))), (list.list(((hlds.hlds_module).pragma_exported_proc))), (list.list(((hlds.hlds_module).pragma_exported_proc)))).
:- mode filter_exports((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred filter_imports(((libs.globals).foreign_language), ((parse_tree.prog_data).foreign_import_module_info_list), ((parse_tree.prog_data).foreign_import_module_info_list), ((parse_tree.prog_data).foreign_import_module_info_list)).
:- mode filter_imports((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred foreign_type_body_has_user_defined_eq_comp_pred(((hlds.hlds_module).module_info), ((hlds.hlds_data).foreign_type_body), ((parse_tree.prog_data).unify_compare)).
:- mode foreign_type_body_has_user_defined_eq_comp_pred((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred foreign_type_body_to_exported_type(((hlds.hlds_module).module_info), ((hlds.hlds_data).foreign_type_body), ((mdbcomp.prim_data).sym_name), (maybe.maybe(((parse_tree.prog_data).unify_compare))), (list.list(((parse_tree.prog_data).foreign_type_assertion)))).
:- mode foreign_type_body_to_exported_type((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)) is det.
:- pred have_foreign_type_for_backend(((libs.globals).compilation_target), ((hlds.hlds_data).foreign_type_body), (bool.bool)).
:- mode have_foreign_type_for_backend((builtin.in), (builtin.in), (builtin.out)) is det.
:- func is_foreign_type(((backend_libs.foreign).exported_type)) = (maybe.maybe((list.list(((parse_tree.prog_data).foreign_type_assertion))))).
:- pred make_pragma_import(((hlds.hlds_pred).pred_info), ((hlds.hlds_pred).proc_info), string, ((parse_tree.prog_data).prog_context), ((parse_tree.prog_data).pragma_foreign_code_impl), ((parse_tree.prog_data).prog_varset), (list.list(((parse_tree.prog_data).pragma_var))), (list.list(((parse_tree.prog_data).mer_type))), ((parse_tree.prog_data).arity), ((mdbcomp.prim_data).pred_or_func), ((hlds.hlds_module).module_info), ((hlds.hlds_module).module_info), (list.list(((parse_tree.error_util).error_spec))), (list.list(((parse_tree.error_util).error_spec)))).
:- mode make_pragma_import((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func non_foreign_type(((parse_tree.prog_data).mer_type)) = ((backend_libs.foreign).exported_type).
:- func to_exported_type(((hlds.hlds_module).module_info), ((parse_tree.prog_data).mer_type)) = ((backend_libs.foreign).exported_type).
:- func to_type_string(((libs.globals).foreign_language), ((backend_libs.foreign).exported_type)) = string.
:- func to_type_string(((libs.globals).foreign_language), ((hlds.hlds_module).module_info), ((parse_tree.prog_data).mer_type)) = string.
