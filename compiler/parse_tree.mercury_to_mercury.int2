:- module (parse_tree.mercury_to_mercury).
:- interface.
:- type maybe_exist_constraints
    --->    no_exist_constraints 
    ;       have_exist_constraints_print_paren(list.list(parse_tree.prog_data.prog_constraint)).
:- type needs_brackets
    --->    needs_brackets 
    ;       does_not_need_brackets .
:- type_representation((parse_tree.mercury_to_mercury).needs_brackets, du_repn(enum("needs_brackets", "does_not_need_brackets", [], []))).
