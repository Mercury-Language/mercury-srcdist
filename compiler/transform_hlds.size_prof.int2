:- module (transform_hlds.size_prof).
:- interface.
:- type construct_transform
    --->    term_words 
    ;       term_cells .
:- type_representation((transform_hlds.size_prof).construct_transform, du_repn(enum("term_words", "term_cells", [], []))).
:- type_representation((transform_hlds.size_prof).known_size_map, is_eqv_to(map.map(parse_tree.prog_data.prog_var, int))).
:- type_representation((transform_hlds.size_prof).rev_type_ctor_map, is_eqv_to(map.map(parse_tree.prog_data.prog_var, parse_tree.prog_data.type_ctor))).
:- type_representation((transform_hlds.size_prof).rev_type_info_map, is_eqv_to(map.map(parse_tree.prog_data.prog_var, parse_tree.prog_data.mer_type))).
:- type_representation((transform_hlds.size_prof).type_ctor_map, is_eqv_to(map.map(parse_tree.prog_data.type_ctor, parse_tree.prog_data.prog_var))).
:- type_representation((transform_hlds.size_prof).type_info_map, is_eqv_to(map.map(parse_tree.prog_data.mer_type, parse_tree.prog_data.prog_var))).
