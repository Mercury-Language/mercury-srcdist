/*
** Automatically generated from `code_util.m'
** by the Mercury compiler,
** version 14.01-beta-2014-02-06, configured for x86_64-apple-darwin13.0.0.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


/* :- module ll_backend.code_util. */
/* :- interface. */

#ifndef MR_HEADER_GUARD_ll_backend__code_util
#define MR_HEADER_GUARD_ll_backend__code_util

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef LL_BACKEND__CODE_UTIL_DECL_GUARD
#define LL_BACKEND__CODE_UTIL_DECL_GUARD
#include "ll_backend.mih"

#endif




#line 42 "ll_backend.code_util.mih.tmp"
extern const MR_TypeCtorInfo_Struct ll_backend__code_util__ll_backend__code_util__type_ctor_info_immed_0;

#line 44 "code_util.m"
void MR_CALL 
ll_backend__code_util____Compare____immed_0_0(
#line 44 "code_util.m"
  MR_Word * ll_backend__code_util__param_1,
#line 44 "code_util.m"
  MR_Word ll_backend__code_util__param_2,
#line 44 "code_util.m"
  MR_Word ll_backend__code_util__param_3);

#line 44 "code_util.m"
MR_bool MR_CALL 
ll_backend__code_util____Unify____immed_0_0(
#line 44 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 44 "code_util.m"
  MR_Word ll_backend__code_util__param_2);

#line 104 "code_util.m"
void MR_CALL 
ll_backend__code_util__instrs_rvals_and_lvals_3_p_0(
#line 104 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 104 "code_util.m"
  MR_Word * ll_backend__code_util__param_2,
#line 104 "code_util.m"
  MR_Word * ll_backend__code_util__param_3);

#line 101 "code_util.m"
void MR_CALL 
ll_backend__code_util__instr_rvals_and_lvals_3_p_0(
#line 101 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 101 "code_util.m"
  MR_Word * ll_backend__code_util__param_2,
#line 101 "code_util.m"
  MR_Word * ll_backend__code_util__param_3);

#line 97 "code_util.m"
MR_Integer MR_CALL 
ll_backend__code_util__size_of_cell_args_1_f_0(
#line 97 "code_util.m"
  MR_Word ll_backend__code_util__param_1);

#line 95 "code_util.m"
MR_Integer MR_CALL 
ll_backend__code_util__encode_num_generic_call_vars_2_f_0(
#line 95 "code_util.m"
  MR_Integer ll_backend__code_util__param_1,
#line 95 "code_util.m"
  MR_Integer ll_backend__code_util__param_2);

#line 88 "code_util.m"
void MR_CALL 
ll_backend__code_util__build_input_arg_list_2_p_0(
#line 88 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 88 "code_util.m"
  MR_Word * ll_backend__code_util__param_2);

#line 83 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__lvals_in_lvals_1_f_0(
#line 83 "code_util.m"
  MR_Word ll_backend__code_util__param_1);

#line 82 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__lvals_in_lval_1_f_0(
#line 82 "code_util.m"
  MR_Word ll_backend__code_util__param_1);

#line 81 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__lvals_in_rval_1_f_0(
#line 81 "code_util.m"
  MR_Word ll_backend__code_util__param_1);

#line 75 "code_util.m"
void MR_CALL 
ll_backend__code_util__negate_the_test_2_p_0(
#line 75 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 75 "code_util.m"
  MR_Word * ll_backend__code_util__param_2);

#line 73 "code_util.m"
void MR_CALL 
ll_backend__code_util__neg_rval_2_p_0(
#line 73 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 73 "code_util.m"
  MR_Word * ll_backend__code_util__param_2);

#line 68 "code_util.m"
void MR_CALL 
ll_backend__code_util__goal_may_alloc_temp_frame_2_p_0(
#line 68 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 68 "code_util.m"
  MR_Word * ll_backend__code_util__param_2);

#line 66 "code_util.m"
void MR_CALL 
ll_backend__code_util__max_mentioned_abs_regs_3_p_0(
#line 66 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 66 "code_util.m"
  MR_Integer * ll_backend__code_util__param_2,
#line 66 "code_util.m"
  MR_Integer * ll_backend__code_util__param_3);

#line 65 "code_util.m"
void MR_CALL 
ll_backend__code_util__max_mentioned_regs_3_p_0(
#line 65 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 65 "code_util.m"
  MR_Integer * ll_backend__code_util__param_2,
#line 65 "code_util.m"
  MR_Integer * ll_backend__code_util__param_3);

#line 63 "code_util.m"
void MR_CALL 
ll_backend__code_util__arg_loc_to_register_2_p_0(
#line 63 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 63 "code_util.m"
  MR_Word * ll_backend__code_util__param_2);

#line 61 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__extract_proc_label_from_code_addr_1_f_0(
#line 61 "code_util.m"
  MR_Word ll_backend__code_util__param_1);

#line 59 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__make_internal_label_4_f_0(
#line 59 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 59 "code_util.m"
  MR_Word ll_backend__code_util__param_2,
#line 59 "code_util.m"
  MR_Integer ll_backend__code_util__param_3,
#line 59 "code_util.m"
  MR_Integer ll_backend__code_util__param_4);

#line 55 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__make_local_entry_label_4_f_0(
#line 55 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 55 "code_util.m"
  MR_Word ll_backend__code_util__param_2,
#line 55 "code_util.m"
  MR_Integer ll_backend__code_util__param_3,
#line 55 "code_util.m"
  MR_Word ll_backend__code_util__param_4);

#line 47 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__make_entry_label_from_rtti_2_f_0(
#line 47 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 47 "code_util.m"
  MR_Word ll_backend__code_util__param_2);

#line 45 "code_util.m"
MR_Word MR_CALL 
ll_backend__code_util__make_entry_label_4_f_0(
#line 45 "code_util.m"
  MR_Word ll_backend__code_util__param_1,
#line 45 "code_util.m"
  MR_Word ll_backend__code_util__param_2,
#line 45 "code_util.m"
  MR_Integer ll_backend__code_util__param_3,
#line 45 "code_util.m"
  MR_Word ll_backend__code_util__param_4);

void mercury__ll_backend__code_util__init(void);
void mercury__ll_backend__code_util__init_type_tables(void);
void mercury__ll_backend__code_util__init_debugger(void);

#ifdef __cplusplus
}
#endif

#endif /* MR_HEADER_GUARD_ll_backend.code_util */

/* :- end_interface ll_backend.code_util. */
