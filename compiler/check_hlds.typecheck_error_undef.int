:- module check_hlds.typecheck_error_undef.
:- interface.
:- use_module hlds.
:- use_module list.
:- use_module mdbcomp.
:- use_module parse_tree.
:- use_module check_hlds.typecheck_error_util.
:- use_module check_hlds.typecheck_info.
:- use_module hlds.hlds_cons.
:- use_module hlds.hlds_data.
:- use_module hlds.hlds_module.
:- use_module hlds.hlds_pred.
:- use_module mdbcomp.sym_name.
:- use_module parse_tree.error_spec.
:- use_module parse_tree.prog_data.
:- type cons_error
    --->    foreign_type_constructor(parse_tree.prog_data.type_ctor, hlds.hlds_data.hlds_type_defn)
    ;       abstract_imported_type 
    ;       invalid_field_update(mdbcomp.sym_name.sym_name, hlds.hlds_cons.hlds_ctor_field_defn, parse_tree.prog_data.tvarset, list.list(parse_tree.prog_data.tvar))
    ;       new_on_non_existential_type(parse_tree.prog_data.type_ctor).
:- func maybe_report_no_clauses(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.pred_info) = list.list(parse_tree.error_spec.error_spec).
:- func maybe_report_no_clauses_stub(hlds.hlds_module.module_info, hlds.hlds_pred.pred_id, hlds.hlds_pred.pred_info) = list.list(parse_tree.error_spec.error_spec).
:- func report_error_undef_cons(check_hlds.typecheck_info.type_error_clause_context, check_hlds.typecheck_error_util.type_error_goal_context, parse_tree.prog_data.prog_context, list.list(check_hlds.typecheck_error_undef.cons_error), parse_tree.prog_data.cons_id, parse_tree.prog_data.arity) = parse_tree.error_spec.error_spec.
:- func report_error_undef_event(parse_tree.prog_data.prog_context, string) = parse_tree.error_spec.error_spec.
:- func report_error_undef_event_arity(parse_tree.prog_data.prog_context, string, list.list(parse_tree.prog_data.mer_type), list.list(parse_tree.prog_data.prog_var)) = parse_tree.error_spec.error_spec.
:- func report_error_undef_pred(check_hlds.typecheck_info.type_error_clause_context, parse_tree.prog_data.prog_context, parse_tree.prog_data.sym_name_pred_form_arity) = parse_tree.error_spec.error_spec.
