:- module backend_libs.string_switch_util.
:- interface.
:- use_module assoc_list.
:- use_module hlds.
:- use_module list.
:- use_module map.
:- use_module maybe.
:- use_module pair.
:- use_module string.
:- use_module backend_libs.builtin_ops.
:- use_module hlds.hlds_goal.
:- type string_hash_slot(CaseRep)
    --->    string_hash_slot(string, int, CaseRep).
:- type table_size_upgrade
    --->    keep_first_size 
    ;       allow_doubling .
:- type trie_node
    --->    trie_leaf((backend_libs.string_switch_util).leaf_matched :: list.list(int), (backend_libs.string_switch_util).leaf_unmatched :: list.list(int), hlds.hlds_goal.case_id)
    ;       trie_choice((backend_libs.string_switch_util).choice_matched :: list.list(int), (backend_libs.string_switch_util).choice_next_level :: map.map(int, backend_libs.string_switch_util.trie_node), (backend_libs.string_switch_util).choice_end :: maybe.maybe(hlds.hlds_goal.case_id)).
:- inst trie_choice for (backend_libs.string_switch_util).trie_node/0
    --->    trie_choice(ground, ground, ground).
