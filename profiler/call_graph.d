# vim: ts=8 sw=8 noexpandtab ft=make

# Automatically generated module dependencies for
# module `call_graph' in source file `call_graph.m'.
# Generated by Mercury compiler version rotd-2023-09-11
# configured for x86_64-pc-linux-gnu.

# RULE date_file_deps
# target group names:
#   dates_and_err
# source group names:
#   source
#   long deps
#   short deps
#   type_repn self dep
call_graph.optdate call_graph.trans_opt_date call_graph.err call_graph.c_date call_graph.java_date : \
		call_graph.m \
	\
		bool.int \
		builtin.int \
		digraph.int \
		globals.int \
		io.int \
		list.int \
		maybe.int \
		options.int \
		private_builtin.int \
		read.int \
		string.int \
		string.format.int \
		string.parse_util.int \
	\
		array.int2 \
		assoc_list.int2 \
		bitmap.int2 \
		char.int2 \
		construct.int2 \
		deconstruct.int2 \
		enum.int2 \
		getopt.int2 \
		map.int2 \
		ops.int2 \
		pair.int2 \
		pretty_printer.int2 \
		set.int2 \
		set_ordlist.int2 \
		sparse_bitset.int2 \
		stream.int2 \
		term.int2 \
		term_context.int2 \
		time.int2 \
		tree234.int2 \
		type_desc.int2 \
		univ.int2 \
	\
		call_graph.int

# RULE objs_on_mihs
call_graph.pic_o call_graph.$O : \
		array.mih \
		assoc_list.mih \
		bitmap.mih \
		bool.mih \
		builtin.mih \
		char.mih \
		construct.mih \
		deconstruct.mih \
		digraph.mih \
		enum.mih \
		getopt.mih \
		globals.mih \
		io.mih \
		list.mih \
		map.mih \
		maybe.mih \
		ops.mih \
		options.mih \
		pair.mih \
		pretty_printer.mih \
		private_builtin.mih \
		read.mih \
		set.mih \
		set_ordlist.mih \
		sparse_bitset.mih \
		stream.mih \
		string.mih \
		term.mih \
		term_context.mih \
		time.mih \
		tree234.mih \
		type_desc.mih \
		univ.mih \
		string.format.mih \
		string.parse_util.mih

# RULE mh_and_mih_on_c
call_graph.mh call_graph.mih : call_graph.c

ifeq ($(findstring java,$(GRADE)),java)

# RULE module_dep_on_java
call_graph.module_dep : jmercury/call_graph.java

else

# RULE module_dep_on_c
call_graph.module_dep : call_graph.c

endif # conditional fragment

# RULE self_and_parent_date_deps
# target group names:
#   date files
# source group names:
#   source
#   long dep int3s
#   short dep int3s
call_graph.date call_graph.date0 : \
		call_graph.m \
	\
		bool.int3 \
		builtin.int3 \
		digraph.int3 \
		globals.int3 \
		io.int3 \
		list.int3 \
		maybe.int3 \
		options.int3 \
		private_builtin.int3 \
		read.int3 \
		string.int3 \
		string.format.int3 \
		string.parse_util.int3 \
	\
		array.int3 \
		assoc_list.int3 \
		bitmap.int3 \
		char.int3 \
		construct.int3 \
		deconstruct.int3 \
		enum.int3 \
		getopt.int3 \
		map.int3 \
		ops.int3 \
		pair.int3 \
		pretty_printer.int3 \
		set.int3 \
		set_ordlist.int3 \
		sparse_bitset.int3 \
		stream.int3 \
		term.int3 \
		term_context.int3 \
		time.int3 \
		tree234.int3 \
		type_desc.int3 \
		univ.int3

# RULE self_and_parent_date0_deps
# target group names:
#   date0s
# source group names:
#   source
#   long dep int3s
#   short dep int3s
call_graph.date0 : \
		call_graph.m \
	\
		bool.int3 \
		builtin.int3 \
		digraph.int3 \
		globals.int3 \
		io.int3 \
		list.int3 \
		maybe.int3 \
		options.int3 \
		private_builtin.int3 \
		read.int3 \
		string.int3 \
		string.format.int3 \
		string.parse_util.int3 \
	\
		array.int3 \
		assoc_list.int3 \
		bitmap.int3 \
		char.int3 \
		construct.int3 \
		deconstruct.int3 \
		enum.int3 \
		getopt.int3 \
		map.int3 \
		ops.int3 \
		pair.int3 \
		pretty_printer.int3 \
		set.int3 \
		set_ordlist.int3 \
		sparse_bitset.int3 \
		stream.int3 \
		term.int3 \
		term_context.int3 \
		time.int3 \
		tree234.int3 \
		type_desc.int3 \
		univ.int3

# RULE foreign_deps_for_mh
call_graph.$O call_graph.pic_o : \
		array.mh \
		bitmap.mh \
		io.mh \
		string.mh \
		time.mh \
		io.stream_ops.mh

# RULE int0_on_date0
call_graph.int0 : call_graph.date0
	@:

# RULE int_on_date
call_graph.int : call_graph.date
	@:

# RULE int2_on_date
call_graph.int2 : call_graph.date
	@:

# RULE int3_on_date3
call_graph.int3 : call_graph.date3
	@:

# RULE opt_on_opt_date
call_graph.opt : call_graph.optdate
	@:

# RULE trans_opt_on_trans_opt_date
call_graph.trans_opt : call_graph.trans_opt_date
	@:

