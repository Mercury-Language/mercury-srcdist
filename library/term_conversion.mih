/*
** Automatically generated from `term_conversion.m'
** by the Mercury compiler,
** version rotd-2023-06-02
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module term_conversion.
// :- interface.

#ifndef MR_HEADER_GUARD_term_conversion
#define MR_HEADER_GUARD_term_conversion

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef TERM_CONVERSION_DECL_GUARD
#define TERM_CONVERSION_DECL_GUARD

#endif



extern const MR_TypeCtorInfo_Struct mercury__term_conversion__term_conversion__type_ctor_info_term_to_type_arg_context_0;

extern const MR_TypeCtorInfo_Struct mercury__term_conversion__term_conversion__type_ctor_info_term_to_type_context_0;

extern const MR_TypeCtorInfo_Struct mercury__term_conversion__term_conversion__type_ctor_info_term_to_type_error_1;

extern const MR_TypeCtorInfo_Struct mercury__term_conversion__term_conversion__type_ctor_info_term_to_type_result_1;

extern const MR_TypeCtorInfo_Struct mercury__term_conversion__term_conversion__type_ctor_info_term_to_type_result_2;

void MR_CALL 
mercury__term_conversion__det_term_to_type_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Box * param_4);

MR_bool MR_CALL 
mercury__term_conversion__term_to_type_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Box * param_4);

void MR_CALL 
mercury__term_conversion__try_term_to_type_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__term_conversion__type_to_term_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__term_conversion__univ_to_term_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

MR_Box MR_CALL 
mercury__term_conversion__det_term_to_type_1_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__term_conversion__try_term_to_type_1_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__term_conversion__type_to_term_1_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3);

MR_Word MR_CALL 
mercury__term_conversion__univ_to_term_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

void MR_CALL 
mercury__term_conversion____Compare____term_to_type_arg_context_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mercury__term_conversion____Compare____term_to_type_context_0_0(
  MR_Word * param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mercury__term_conversion____Compare____term_to_type_error_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mercury__term_conversion____Compare____term_to_type_result_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mercury__term_conversion____Compare____term_to_type_result_2_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3,
  MR_Word param_4,
  MR_Word param_5);

MR_bool MR_CALL 
mercury__term_conversion____Unify____term_to_type_arg_context_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mercury__term_conversion____Unify____term_to_type_context_0_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mercury__term_conversion____Unify____term_to_type_error_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mercury__term_conversion____Unify____term_to_type_result_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_bool MR_CALL 
mercury__term_conversion____Unify____term_to_type_result_2_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4);

void mercury__term_conversion__init(void);
void mercury__term_conversion__init_type_tables(void);
void mercury__term_conversion__init_debugger(void);
const char *mercury__term_conversion__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_term_conversion

// :- end_interface term_conversion.
