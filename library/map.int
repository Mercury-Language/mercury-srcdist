:- module map.
:- interface.
:- use_module assoc_list.
:- use_module list.
:- use_module maybe.
:- use_module set.
:- use_module term.
:- use_module tree234.
:- type map(K, V) == tree234.tree234(K, V).
:- pred apply_to_list(list.list(K), map.map(K, V), list.list(V)).
:- mode apply_to_list(builtin.in, builtin.in, builtin.out) is det.
:- func apply_to_list(list.list(K), map.map(K, V)) = list.list(V).
:- func common_subset(map.map(K, V), map.map(K, V)) = map.map(K, V).
:- pred compose_maps(map.map(A, B), map.map(B, C), map.map(A, C)).
:- mode compose_maps(builtin.in, builtin.in, builtin.out) is det.
:- pred contains(map.map(K, _V), K).
:- mode contains(builtin.in, builtin.in) is semidet.
:- pred count(map.map(K, V), int).
:- mode count(builtin.in, builtin.out) is det.
:- func count(map.map(K, V)) = int.
:- pred delete(K, map.map(K, V), map.map(K, V)).
:- mode delete(builtin.in, builtin.in, builtin.out) is det.
:- func delete(map.map(K, V), K) = map.map(K, V).
:- pred delete_list(list.list(K), map.map(K, V), map.map(K, V)).
:- mode delete_list(builtin.in, builtin.in, builtin.out) is det.
:- func delete_list(map.map(K, V), list.list(K)) = map.map(K, V).
:- pred delete_sorted_list(list.list(K), map.map(K, V), map.map(K, V)).
:- mode delete_sorted_list(builtin.in, builtin.in, builtin.out) is det.
:- func delete_sorted_list(map.map(K, V), list.list(K)) = map.map(K, V).
:- func det_elem(K, map.map(K, V)) = V.
:- func 'det_elem :='(K, map.map(K, V), V) = map.map(K, V).
:- pred det_insert(K, V, map.map(K, V), map.map(K, V)).
:- mode det_insert(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- func det_insert(map.map(K, V), K, V) = map.map(K, V).
:- pred det_insert_from_assoc_list(assoc_list.assoc_list(K, V), map.map(K, V), map.map(K, V)).
:- mode det_insert_from_assoc_list(builtin.in, builtin.in, builtin.out) is det.
:- func det_insert_from_assoc_list(map.map(K, V), assoc_list.assoc_list(K, V)) = map.map(K, V).
:- pred det_insert_from_corresponding_lists(list.list(K), list.list(V), map.map(K, V), map.map(K, V)).
:- mode det_insert_from_corresponding_lists(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- func det_insert_from_corresponding_lists(map.map(K, V), list.list(K), list.list(V)) = map.map(K, V).
:- pred det_intersect(pred(V, V, V), map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode det_intersect(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is det.
:- func det_intersect((func(V, V) = V), map.map(K, V), map.map(K, V)) = map.map(K, V).
:- mode det_intersect(builtin.in((func(builtin.in, builtin.in) = builtin.out is semidet)), builtin.in, builtin.in) = builtin.out is det.
:- func det_max_key(map.map(K, V)) = K.
:- func det_min_key(map.map(K, V)) = K.
:- pred det_remove(K, V, map.map(K, V), map.map(K, V)).
:- mode det_remove(builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- pred det_transform_value(pred(V, V), K, map.map(K, V), map.map(K, V)).
:- mode det_transform_value(builtin.in((pred(builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- func det_transform_value(((func V) = V), K, map.map(K, V)) = map.map(K, V).
:- pred det_union(pred(V, V, V), map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode det_union(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is det.
:- func det_union((func(V, V) = V), map.map(K, V), map.map(K, V)) = map.map(K, V).
:- mode det_union(builtin.in((func(builtin.in, builtin.in) = builtin.out is semidet)), builtin.in, builtin.in) = builtin.out is det.
:- pred det_update(K, V, map.map(K, V), map.map(K, V)).
:- mode det_update(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- func det_update(map.map(K, V), K, V) = map.map(K, V).
:- func elem(K, map.map(K, V)) = V is semidet.
:- func 'elem :='(K, map.map(K, V), V) = map.map(K, V).
:- pred equal(map.map(K, V), map.map(K, V)).
:- mode equal(builtin.in, builtin.in) is semidet.
:- pred filter_map_values(pred(K, V, W), map.map(K, V), map.map(K, W)).
:- mode filter_map_values(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out) is det.
:- pred filter_map_values_only(pred(V, W), map.map(K, V), map.map(K, W)).
:- mode filter_map_values_only(builtin.in((pred(builtin.in, builtin.out) is semidet)), builtin.in, builtin.out) is det.
:- pred foldl(pred(K, V, A, A), map.map(K, V), A, A).
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.mdi, builtin.muo) is det.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo) is det.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is semidet.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.mdi, builtin.muo) is semidet.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.di, builtin.uo) is semidet.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out) is cc_multi)), builtin.in, builtin.in, builtin.out) is cc_multi.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo) is cc_multi)), builtin.in, builtin.di, builtin.uo) is cc_multi.
:- mode foldl(builtin.in((pred(builtin.in, builtin.in, builtin.mdi, builtin.muo) is cc_multi)), builtin.in, builtin.mdi, builtin.muo) is cc_multi.
:- func foldl((func(K, V, A) = A), map.map(K, V), A) = A.
:- pred foldl2(pred(K, V, A, A, B, B), map.map(K, V), A, A, B, B).
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is cc_multi.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is cc_multi.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is cc_multi.
:- mode foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo) is cc_multi)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo) is cc_multi.
:- pred foldl2_values(pred(V, A, A, B, B), map.map(K, V), A, A, B, B).
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is cc_multi.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is cc_multi.
:- mode foldl2_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is cc_multi.
:- pred foldl3(pred(K, V, A, A, B, B, C, C), map.map(K, V), A, A, B, B, C, C).
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldl3_values(pred(V, A, A, B, B, C, C), map.map(K, V), A, A, B, B, C, C).
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is cc_multi.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is cc_multi.
:- mode foldl3_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is cc_multi)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is cc_multi.
:- pred foldl4(pred(K, V, A, A, B, B, C, C, D, D), map.map(K, V), A, A, B, B, C, C, D, D).
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldl4_values(pred(V, A, A, B, B, C, C, D, D), map.map(K, V), A, A, B, B, C, C, D, D).
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl4_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldl5(pred(K, V, A, A, B, B, C, C, D, D, E, E), map.map(K, V), A, A, B, B, C, C, D, D, E, E).
:- mode foldl5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldl5_values(pred(V, A, A, B, B, C, C, D, D, E, E), map.map(K, V), A, A, B, B, C, C, D, D, E, E).
:- mode foldl5_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl5_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl5_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl5_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl5_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl5_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldl6(pred(K, V, A, A, B, B, C, C, D, D, E, E, F, F), map.map(K, V), A, A, B, B, C, C, D, D, E, E, F, F).
:- mode foldl6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldl6_values(pred(V, A, A, B, B, C, C, D, D, E, E, F, F), map.map(K, V), A, A, B, B, C, C, D, D, E, E, F, F).
:- mode foldl6_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldl6_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldl6_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldl6_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldl6_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldl6_values(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldl_values(pred(V, A, A), map.map(K, V), A, A).
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.mdi, builtin.muo) is det.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo) is det.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is semidet.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.mdi, builtin.muo) is semidet.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.di, builtin.uo) is semidet.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.in, builtin.out) is cc_multi)), builtin.in, builtin.in, builtin.out) is cc_multi.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.di, builtin.uo) is cc_multi)), builtin.in, builtin.di, builtin.uo) is cc_multi.
:- mode foldl_values(builtin.in((pred(builtin.in, builtin.mdi, builtin.muo) is cc_multi)), builtin.in, builtin.mdi, builtin.muo) is cc_multi.
:- pred foldr(pred(K, V, A, A), map.map(K, V), A, A).
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.mdi, builtin.muo) is det.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo) is det.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is semidet.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.mdi, builtin.muo) is semidet.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.di, builtin.uo) is semidet.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out) is cc_multi)), builtin.in, builtin.in, builtin.out) is cc_multi.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.mdi, builtin.muo) is cc_multi)), builtin.in, builtin.mdi, builtin.muo) is cc_multi.
:- mode foldr(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo) is cc_multi)), builtin.in, builtin.di, builtin.uo) is cc_multi.
:- func foldr((func(K, V, A) = A), map.map(K, V), A) = A.
:- pred foldr2(pred(K, V, A, A, B, B), map.map(K, V), A, A, B, B).
:- mode foldr2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldr2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldr2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldr2(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldr2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldr2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldr2(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldr3(pred(K, V, A, A, B, B, C, C), map.map(K, V), A, A, B, B, C, C).
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldr3(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldr4(pred(K, V, A, A, B, B, C, C, D, D), map.map(K, V), A, A, B, B, C, C, D, D).
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldr4(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldr5(pred(K, V, A, A, B, B, C, C, D, D, E, E), map.map(K, V), A, A, B, B, C, C, D, D, E, E).
:- mode foldr5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldr5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldr5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldr5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldr5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldr5(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred foldr6(pred(K, V, A, A, B, B, C, C, D, D, E, E, F, F), map.map(K, V), A, A, B, B, C, C, D, D, E, E, F, F).
:- mode foldr6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode foldr6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode foldr6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode foldr6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode foldr6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode foldr6(builtin.in((pred(builtin.in, builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred from_assoc_list(assoc_list.assoc_list(K, V), map.map(K, V)).
:- mode from_assoc_list(builtin.in, builtin.out) is det.
:- func from_assoc_list(assoc_list.assoc_list(K, V)) = map.map(K, V).
:- pred from_corresponding_lists(list.list(K), list.list(V), map.map(K, V)).
:- mode from_corresponding_lists(builtin.in, builtin.in, builtin.out) is det.
:- func from_corresponding_lists(list.list(K), list.list(V)) = map.map(K, V).
:- pred from_rev_sorted_assoc_list(assoc_list.assoc_list(K, V), map.map(K, V)).
:- mode from_rev_sorted_assoc_list(builtin.in, builtin.out) is det.
:- func from_rev_sorted_assoc_list(assoc_list.assoc_list(K, V)) = map.map(K, V).
:- pred from_sorted_assoc_list(assoc_list.assoc_list(K, V), map.map(K, V)).
:- mode from_sorted_assoc_list(builtin.in, builtin.out) is det.
:- func from_sorted_assoc_list(assoc_list.assoc_list(K, V)) = map.map(K, V).
:- pred init(map.map(V_1, V_2)).
:- mode init(builtin.uo) is det.
:- func init = map.map(K, V).
:- mode init = builtin.uo is det.
:- pred insert(K, V, map.map(K, V), map.map(K, V)).
:- mode insert(builtin.in, builtin.in, builtin.in, builtin.out) is semidet.
:- func insert(map.map(K, V), K, V) = map.map(K, V) is semidet.
:- pred intersect(pred(V, V, V), map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode intersect(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is semidet.
:- mode intersect(builtin.in((pred(builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- func intersect((func(V, V) = V), map.map(K, V), map.map(K, V)) = map.map(K, V).
:- pred intersect_list(pred(V, V, V), map.map(K, V), list.list(map.map(K, V)), map.map(K, V)).
:- mode intersect_list(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is semidet.
:- mode intersect_list(builtin.in((pred(builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- pred inverse_search(map.map(K, V), V, K).
:- mode inverse_search(builtin.in, builtin.in, builtin.out) is nondet.
:- pred is_empty(map.map(V_1, V_2)).
:- mode is_empty(builtin.in) is semidet.
:- pred keys(map.map(K, _V), list.list(K)).
:- mode keys(builtin.in, builtin.out) is det.
:- func keys(map.map(K, _V)) = list.list(K).
:- pred keys_and_values(map.map(K, V), list.list(K), list.list(V)).
:- mode keys_and_values(builtin.in, builtin.out, builtin.out) is det.
:- pred keys_as_set(map.map(K, _V), set.set(K)).
:- mode keys_as_set(builtin.in, builtin.out) is det.
:- func keys_as_set(map.map(K, _V)) = set.set(K).
:- pred lookup(map.map(K, V), K, V).
:- mode lookup(builtin.in, builtin.in, builtin.out) is det.
:- func lookup(map.map(K, V), K) = V.
:- pred lower_bound_lookup(map.map(K, V), K, K, V).
:- mode lower_bound_lookup(builtin.in, builtin.in, builtin.out, builtin.out) is det.
:- pred lower_bound_search(map.map(K, V), K, K, V).
:- mode lower_bound_search(builtin.in, builtin.in, builtin.out, builtin.out) is semidet.
:- pred map_foldl(pred(K, V, W, A, A), map.map(K, V), map.map(K, W), A, A).
:- mode map_foldl(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode map_foldl(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode map_foldl(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode map_foldl(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode map_foldl(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode map_foldl(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred map_foldl2(pred(K, V, W, A, A, B, B), map.map(K, V), map.map(K, W), A, A, B, B).
:- mode map_foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode map_foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode map_foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode map_foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode map_foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode map_foldl2(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred map_foldl3(pred(K, V, W, A, A, B, B, C, C), map.map(K, V), map.map(K, W), A, A, B, B, C, C).
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode map_foldl3(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred map_foldl4(pred(K, V, W, A, A, B, B, C, C, D, D), map.map(K, V), map.map(K, W), A, A, B, B, C, C, D, D).
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is det.
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.mdi, builtin.muo) is semidet.
:- mode map_foldl4(builtin.in((pred(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is semidet.
:- pred map_values(pred(K, V, W), map.map(K, V), map.map(K, W)).
:- mode map_values(builtin.in((pred(builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.out) is det.
:- mode map_values(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out) is semidet.
:- func map_values((func(K, V) = W), map.map(K, V)) = map.map(K, W).
:- pred map_values_foldl(pred(V, W, A, A), map.map(K, V), map.map(K, W), A, A).
:- mode map_values_foldl(builtin.in((pred(builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode map_values_foldl(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode map_values_foldl(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- pred map_values_foldl2(pred(V, W, A, A, B, B), map.map(K, V), map.map(K, W), A, A, B, B).
:- mode map_values_foldl2(builtin.in((pred(builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_values_foldl2(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode map_values_foldl2(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode map_values_foldl2(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- pred map_values_foldl3(pred(V, W, A, A, B, B, C, C), map.map(K, V), map.map(K, W), A, A, B, B, C, C).
:- mode map_values_foldl3(builtin.in((pred(builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_values_foldl3(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo, builtin.di, builtin.uo) is det.
:- mode map_values_foldl3(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- mode map_values_foldl3(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- mode map_values_foldl3(builtin.in((pred(builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet)), builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- pred map_values_only(pred(V, W), map.map(K, V), map.map(K, W)).
:- mode map_values_only(builtin.in((pred(builtin.in, builtin.out) is det)), builtin.in, builtin.out) is det.
:- mode map_values_only(builtin.in((pred(builtin.in, builtin.out) is semidet)), builtin.in, builtin.out) is semidet.
:- func map_values_only(((func V) = W), map.map(K, V)) = map.map(K, W).
:- pred max_key(map.map(K, V), K).
:- mode max_key(builtin.in, builtin.out) is semidet.
:- func max_key(map.map(K, V)) = K is semidet.
:- pred member(map.map(K, V), K, V).
:- mode member(builtin.in, builtin.out, builtin.out) is nondet.
:- pred merge(map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode merge(builtin.in, builtin.in, builtin.out) is det.
:- func merge(map.map(K, V), map.map(K, V)) = map.map(K, V).
:- pred min_key(map.map(K, V), K).
:- mode min_key(builtin.in, builtin.out) is semidet.
:- func min_key(map.map(K, V)) = K is semidet.
:- pred old_merge(map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode old_merge(builtin.in, builtin.in, builtin.out) is det.
:- func old_merge(map.map(K, V), map.map(K, V)) = map.map(K, V).
:- pred optimize(map.map(K, V), map.map(K, V)).
:- mode optimize(builtin.in, builtin.out) is det.
:- func optimize(map.map(K, V)) = map.map(K, V).
:- pred overlay(map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode overlay(builtin.in, builtin.in, builtin.out) is det.
:- func overlay(map.map(K, V), map.map(K, V)) = map.map(K, V).
:- pred overlay_large_map(map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode overlay_large_map(builtin.in, builtin.in, builtin.out) is det.
:- func overlay_large_map(map.map(K, V), map.map(K, V)) = map.map(K, V).
:- pred remove(K, V, map.map(K, V), map.map(K, V)).
:- mode remove(builtin.in, builtin.out, builtin.in, builtin.out) is semidet.
:- pred remove_smallest(K, V, map.map(K, V), map.map(K, V)).
:- mode remove_smallest(builtin.out, builtin.out, builtin.in, builtin.out) is semidet.
:- func reverse_map(map.map(K, V)) = map.map(V, set.set(K)).
:- pred search(map.map(K, V), K, V).
:- mode search(builtin.in, builtin.in, builtin.out) is semidet.
:- func search(map.map(K, V), K) = V is semidet.
:- pred search_insert(K, V, maybe.maybe(V), map.map(K, V), map.map(K, V)).
:- mode search_insert(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out) is det.
:- pred select(map.map(K, V), set.set(K), map.map(K, V)).
:- mode select(builtin.in, builtin.in, builtin.out) is det.
:- func select(map.map(K, V), set.set(K)) = map.map(K, V).
:- pred select_sorted_list(map.map(K, V), list.list(K), map.map(K, V)).
:- mode select_sorted_list(builtin.in, builtin.in, builtin.out) is det.
:- func select_sorted_list(map.map(K, V), list.list(K)) = map.map(K, V).
:- pred select_unselect(map.map(K, V), set.set(K), map.map(K, V), map.map(K, V)).
:- mode select_unselect(builtin.in, builtin.in, builtin.out, builtin.out) is det.
:- pred select_unselect_sorted_list(map.map(K, V), list.list(K), map.map(K, V), map.map(K, V)).
:- mode select_unselect_sorted_list(builtin.in, builtin.in, builtin.out, builtin.out) is det.
:- pred set(K, V, map.map(K, V), map.map(K, V)).
:- mode set(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- func set(map.map(K, V), K, V) = map.map(K, V).
:- pred set_from_assoc_list(assoc_list.assoc_list(K, V), map.map(K, V), map.map(K, V)).
:- mode set_from_assoc_list(builtin.in, builtin.in, builtin.out) is det.
:- func set_from_assoc_list(map.map(K, V), assoc_list.assoc_list(K, V)) = map.map(K, V).
:- pred set_from_corresponding_lists(list.list(K), list.list(V), map.map(K, V), map.map(K, V)).
:- mode set_from_corresponding_lists(builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- func set_from_corresponding_lists(map.map(K, V), list.list(K), list.list(V)) = map.map(K, V).
:- func singleton(K, V) = map.map(K, V).
:- pred sorted_keys(map.map(K, _V), list.list(K)).
:- mode sorted_keys(builtin.in, builtin.out) is det.
:- func sorted_keys(map.map(K, _V)) = list.list(K).
:- pred sorted_keys_match(map.map(K, V), list.list(K)).
:- mode sorted_keys_match(builtin.in, builtin.in) is semidet.
:- pred to_assoc_list(map.map(K, V), assoc_list.assoc_list(K, V)).
:- mode to_assoc_list(builtin.in, builtin.out) is det.
:- func to_assoc_list(map.map(K, V)) = assoc_list.assoc_list(K, V).
:- pred to_sorted_assoc_list(map.map(K, V), assoc_list.assoc_list(K, V)).
:- mode to_sorted_assoc_list(builtin.in, builtin.out) is det.
:- func to_sorted_assoc_list(map.map(K, V)) = assoc_list.assoc_list(K, V).
:- pred transform_value(pred(V, V), K, map.map(K, V), map.map(K, V)).
:- mode transform_value(builtin.in((pred(builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is semidet.
:- pred union(pred(V, V, V), map.map(K, V), map.map(K, V), map.map(K, V)).
:- mode union(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is semidet.
:- mode union(builtin.in((pred(builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- func union((func(V, V) = V), map.map(K, V), map.map(K, V)) = map.map(K, V).
:- pred union_list(pred(V, V, V), map.map(K, V), list.list(map.map(K, V)), map.map(K, V)).
:- mode union_list(builtin.in((pred(builtin.in, builtin.in, builtin.out) is semidet)), builtin.in, builtin.in, builtin.out) is semidet.
:- mode union_list(builtin.in((pred(builtin.in, builtin.in, builtin.out) is det)), builtin.in, builtin.in, builtin.out) is det.
:- pred update(K, V, map.map(K, V), map.map(K, V)).
:- mode update(builtin.in, builtin.in, builtin.in, builtin.out) is semidet.
:- func update(map.map(K, V), K, V) = map.map(K, V) is semidet.
:- pred upper_bound_lookup(map.map(K, V), K, K, V).
:- mode upper_bound_lookup(builtin.in, builtin.in, builtin.out, builtin.out) is det.
:- pred upper_bound_search(map.map(K, V), K, K, V).
:- mode upper_bound_search(builtin.in, builtin.in, builtin.out, builtin.out) is semidet.
:- pred values(map.map(_K, V), list.list(V)).
:- mode values(builtin.in, builtin.out) is det.
:- func values(map.map(_K, V)) = list.list(V).
:- pragma type_spec(map.det_insert(builtin.in, builtin.in, builtin.in, builtin.out), K = term.var(Anon1)).
:- pragma type_spec(map.det_insert(builtin.in, builtin.in, builtin.in, builtin.out), K = int).
:- pragma type_spec(map.insert(builtin.in, builtin.in, builtin.in, builtin.out), K = term.var(Anon1)).
:- pragma type_spec(map.insert(builtin.in, builtin.in, builtin.in, builtin.out), K = int).
:- pragma type_spec(map.set(builtin.in, builtin.in, builtin.in, builtin.out), K = term.var(Anon1)).
:- pragma type_spec(map.set(builtin.in, builtin.in, builtin.in, builtin.out), K = int).
:- pragma type_spec(map.update(builtin.in, builtin.in, builtin.in, builtin.out), K = term.var(Anon1)).
:- pragma type_spec(map.update(builtin.in, builtin.in, builtin.in, builtin.out), K = int).
:- pragma type_spec(pred(map.lookup/3), K = term.var(Anon1)).
:- pragma type_spec(pred(map.lookup/3), K = int).
:- pragma type_spec(pred(map.overlay/3), K = term.var(Anon1)).
:- pragma type_spec(pred(map.search/3), K = term.var(Anon1)).
:- pragma type_spec(pred(map.search/3), K = int).
:- pragma type_spec(pred(map.select/3), K = term.var(Anon1)).
:- pragma type_spec(pred(map.select_sorted_list/3), K = term.var(Anon1)).
:- pragma type_spec(pred(map.det_update/4), K = term.var(Anon1)).
:- pragma type_spec(pred(map.det_update/4), K = int).
:- pragma type_spec(pred(map.search_insert/5), K = term.var(Anon1)).
:- pragma type_spec(pred(map.search_insert/5), K = int).
:- pragma type_spec(func(map.det_elem/2), K = term.var(Anon1)).
:- pragma type_spec(func(map.det_elem/2), K = int).
:- pragma type_spec(func(map.elem/2), K = term.var(Anon1)).
:- pragma type_spec(func(map.elem/2), K = int).
:- pragma type_spec(func(map.lookup/2), K = term.var(Anon1)).
:- pragma type_spec(func(map.lookup/2), K = int).
:- pragma type_spec(func(map.overlay/2), K = term.var(Anon1)).
:- pragma type_spec(func(map.search/2), K = term.var(Anon1)).
:- pragma type_spec(func(map.search/2), K = int).
:- pragma type_spec(func(map.select/2), K = term.var(Anon1)).
:- pragma type_spec(func(map.select_sorted_list/2), K = term.var(Anon1)).
:- pragma type_spec(func(map.'det_elem :='/3), K = term.var(Anon1)).
:- pragma type_spec(func(map.'det_elem :='/3), K = int).
:- pragma type_spec(func(map.'elem :='/3), K = term.var(Anon1)).
:- pragma type_spec(func(map.'elem :='/3), K = int).
