:- module ops.

:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__arg_priority_1'((builtin.in)) = (builtin.out), finite(0, [no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__lookup_binary_prefix_op_5'((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(5, [no, no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__lookup_infix_op_5'((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(5, [no, no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__lookup_op_2'((builtin.in), (builtin.in)), finite(0, [no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__lookup_op_infos_4'((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(9, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__lookup_operator_term_4'((builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(0, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__lookup_postfix_op_4'((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(6, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__lookup_prefix_op_4'((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(6, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.'ClassMethod_for_ops__op_table____ops__mercury_op_table__arity0______ops__max_priority_1'((builtin.in)) = (builtin.out), finite(0, [no, no]), cannot_loop).
:- pragma termination_info(ops.adjust_priority_for_assoc((builtin.in), (builtin.in), (builtin.out)), finite(0, [yes, no, no]), cannot_loop).
:- pragma termination_info(ops.arg_priority((builtin.in)) = (builtin.out), infinite, can_loop).
:- pragma termination_info((ops.init_mercury_op_table) = (builtin.uo), finite(0, [no]), cannot_loop).
:- pragma termination_info(ops.lookup_binary_prefix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), infinite, can_loop).
:- pragma termination_info(ops.lookup_infix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), infinite, can_loop).
:- pragma termination_info(ops.lookup_mercury_binary_prefix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(5, [no, no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.lookup_mercury_infix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(5, [no, no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.lookup_mercury_op((builtin.in), (builtin.in)), finite(0, [no, no]), cannot_loop).
:- pragma termination_info(ops.lookup_mercury_op_infos((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(9, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.lookup_mercury_operator_term((builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(0, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.lookup_mercury_postfix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(6, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.lookup_mercury_prefix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(6, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.lookup_op((builtin.in), (builtin.in)), infinite, can_loop).
:- pragma termination_info(ops.lookup_op_infos((builtin.in), (builtin.in), (builtin.out), (builtin.out)), infinite, can_loop).
:- pragma termination_info(ops.lookup_operator_term((builtin.in), (builtin.out), (builtin.out), (builtin.out)), infinite, can_loop).
:- pragma termination_info(ops.lookup_postfix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out)), infinite, can_loop).
:- pragma termination_info(ops.lookup_prefix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out)), infinite, can_loop).
:- pragma termination_info(ops.max_priority((builtin.in)) = (builtin.out), infinite, can_loop).
:- pragma termination_info(ops.mercury_arg_priority((builtin.in)) = (builtin.out), finite(0, [no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_max_priority((builtin.in)) = (builtin.out), finite(0, [no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table((builtin.in), (builtin.out), (builtin.out)), finite(9, [no, no, no]), cannot_loop).
:- pragma termination_info((ops.mercury_op_table_arg_priority) = (builtin.out), finite(0, [no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_binary_prefix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(-4, [yes, yes, no, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_infix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(-4, [yes, yes, no, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_lookup_operator_term((builtin.out), (builtin.out), (builtin.out)), finite(0, [no, no, no]), cannot_loop).
:- pragma termination_info((ops.mercury_op_table_max_priority) = (builtin.out), finite(0, [no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_postfix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(-3, [yes, yes, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_prefix_op((builtin.in), (builtin.in), (builtin.out), (builtin.out)), finite(-3, [yes, yes, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_search_binary_prefix_op((builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(5, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_search_infix_op((builtin.in), (builtin.out), (builtin.out), (builtin.out)), finite(5, [no, no, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_search_op((builtin.in)), finite(0, [no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_search_op_infos((builtin.in), (builtin.out), (builtin.out)), finite(9, [no, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_search_postfix_op((builtin.in), (builtin.out), (builtin.out)), finite(6, [no, no, no]), cannot_loop).
:- pragma termination_info(ops.mercury_op_table_search_prefix_op((builtin.in), (builtin.out), (builtin.out)), finite(6, [no, no, no]), cannot_loop).

:- pragma exceptions(predicate, (ops.adjust_priority_for_assoc), 3, 0, will_not_throw).
:- pragma exceptions(function, (ops.arg_priority), 1, 0, may_throw(user_exception)).
:- pragma exceptions(function, (ops.init_mercury_op_table), 0, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_binary_prefix_op), 5, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, (ops.lookup_infix_op), 5, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, (ops.lookup_mercury_binary_prefix_op), 5, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_mercury_infix_op), 5, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_mercury_op), 2, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_mercury_op_infos), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_mercury_operator_term), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_mercury_postfix_op), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_mercury_prefix_op), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.lookup_op), 2, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, (ops.lookup_op_infos), 4, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, (ops.lookup_operator_term), 4, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, (ops.lookup_postfix_op), 4, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, (ops.lookup_prefix_op), 4, 0, may_throw(user_exception)).
:- pragma exceptions(function, (ops.max_priority), 1, 0, may_throw(user_exception)).
:- pragma exceptions(function, (ops.mercury_arg_priority), 1, 0, will_not_throw).
:- pragma exceptions(function, (ops.mercury_max_priority), 1, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table), 3, 0, will_not_throw).
:- pragma exceptions(function, (ops.mercury_op_table_arg_priority), 0, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_binary_prefix_op), 5, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_infix_op), 5, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_lookup_operator_term), 3, 0, will_not_throw).
:- pragma exceptions(function, (ops.mercury_op_table_max_priority), 0, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_postfix_op), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_prefix_op), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_search_binary_prefix_op), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_search_infix_op), 4, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_search_op), 1, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_search_op_infos), 3, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_search_postfix_op), 3, 0, will_not_throw).
:- pragma exceptions(predicate, (ops.mercury_op_table_search_prefix_op), 3, 0, will_not_throw).
