/*
** Automatically generated from `bag.m'
** by the Mercury compiler,
** version rotd-2022-02-14
** configured for x86_64-pc-linux-gnu.
** Do not edit.
**
** The autoconfigured grade settings governing
** the generation of this C file were
**
** TAG_BITS=2
** UNBOXED_FLOAT=no
** UNBOXED_INT64S=no
** PREGENERATED_DIST=yes
** HIGHLEVEL_CODE=yes
**
** END_OF_C_GRADE_INFO
*/


// :- module bag.
// :- interface.

#ifndef MR_HEADER_GUARD_bag
#define MR_HEADER_GUARD_bag

#ifdef __cplusplus
extern "C" {
#endif

#include "mercury.h"


#ifndef BAG_DECL_GUARD
#define BAG_DECL_GUARD

#endif



extern const MR_TypeCtorInfo_Struct mercury__bag__bag__type_ctor_info_bag_1;

void MR_CALL 
mercury__bag__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_100_101_116_95_114_101_109_111_118_101_95_108_105_115_116_95_95_91_84_32_61_32_118_97_114_40_86_95_50_41_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
mercury__bag__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_100_101_116_95_114_101_109_111_118_101_95_115_101_116_95_95_91_84_32_61_32_118_97_114_40_86_95_50_41_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
mercury__bag__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_105_110_115_101_114_116_95_95_91_84_32_61_32_118_97_114_40_86_95_50_41_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
mercury__bag__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_105_110_115_101_114_116_95_108_105_115_116_95_95_91_84_32_61_32_118_97_114_40_86_95_50_41_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
mercury__bag__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_105_110_115_101_114_116_95_115_101_116_95_95_91_84_32_61_32_118_97_114_40_86_95_50_41_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

MR_bool MR_CALL 
mercury__bag__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_114_101_109_111_118_101_95_95_91_84_32_61_32_118_97_114_40_86_95_50_41_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

MR_bool MR_CALL 
mercury__bag__f_84_121_112_101_83_112_101_99_79_102_95_95_112_114_101_100_95_95_114_101_109_111_118_101_95_108_105_115_116_95_95_91_84_32_61_32_118_97_114_40_86_95_50_41_93_95_48_95_49_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

MR_bool MR_CALL 
mercury__bag__contains_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3);

void MR_CALL 
mercury__bag__count_value_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3,
  MR_Integer * param_4);

void MR_CALL 
mercury__bag__delete_3_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__delete_all_3_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__det_insert_duplicates_4_p_0(
  MR_Word param_1,
  MR_Integer param_2,
  MR_Box param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
mercury__bag__det_remove_3_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__det_remove_list_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__det_remove_set_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__foldl_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
mercury__bag__foldl_4_p_1(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
mercury__bag__foldl_4_p_2(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

MR_bool MR_CALL 
mercury__bag__foldl_4_p_3(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

MR_bool MR_CALL 
mercury__bag__foldl_4_p_4(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

MR_bool MR_CALL 
mercury__bag__foldl_4_p_5(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Box param_5,
  MR_Box * param_6);

void MR_CALL 
mercury__bag__foldl2_6_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Box param_6,
  MR_Box * param_7,
  MR_Box param_8,
  MR_Box * param_9);

void MR_CALL 
mercury__bag__foldl2_6_p_1(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Box param_6,
  MR_Box * param_7,
  MR_Box param_8,
  MR_Box * param_9);

void MR_CALL 
mercury__bag__foldl2_6_p_2(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Box param_6,
  MR_Box * param_7,
  MR_Box param_8,
  MR_Box * param_9);

MR_bool MR_CALL 
mercury__bag__foldl2_6_p_3(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Box param_6,
  MR_Box * param_7,
  MR_Box param_8,
  MR_Box * param_9);

MR_bool MR_CALL 
mercury__bag__foldl2_6_p_4(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Box param_6,
  MR_Box * param_7,
  MR_Box param_8,
  MR_Box * param_9);

MR_bool MR_CALL 
mercury__bag__foldl2_6_p_5(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word param_5,
  MR_Box param_6,
  MR_Box * param_7,
  MR_Box param_8,
  MR_Box * param_9);

void MR_CALL 
mercury__bag__from_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
mercury__bag__from_set_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
mercury__bag__from_sorted_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
mercury__bag__init_1_p_0(
  MR_Word param_1,
  MR_Word * param_2);

void MR_CALL 
mercury__bag__insert_3_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__insert_duplicates_4_p_0(
  MR_Word param_1,
  MR_Integer param_2,
  MR_Box param_3,
  MR_Word param_4,
  MR_Word * param_5);

void MR_CALL 
mercury__bag__insert_list_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__insert_set_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__intersect_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mercury__bag__intersect_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__intersect_small_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__intersect_small_loop_4_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word param_4,
  MR_Word * param_5);

MR_bool MR_CALL 
mercury__bag__is_duplicated_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box * param_3);

MR_bool MR_CALL 
mercury__bag__is_empty_1_p_0(
  MR_Word param_1,
  MR_Word param_2);

MR_bool MR_CALL 
mercury__bag__is_subbag_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mercury__bag__least_upper_bound_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__least_upper_bound_small_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__least_upper_bound_small_loop_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__member_2_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3);

void MR_CALL 
mercury__bag__member_3_p_0(
  MR_Word param_1,
  MR_Box * param_2,
  MR_Word param_3,
  MR_Word * param_4,
  MR_Cont param_5,
  void * param_6);

void MR_CALL 
mercury__bag__prepend_n_xs_4_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Integer param_3,
  MR_Word param_4,
  MR_Word * param_5);

MR_bool MR_CALL 
mercury__bag__remove_3_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__remove_all_3_p_0(
  MR_Word param_1,
  MR_Box param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__remove_list_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__remove_set_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__remove_smallest_3_p_0(
  MR_Word param_1,
  MR_Box * param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_bool MR_CALL 
mercury__bag__subset_compare_3_p_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_bool MR_CALL 
mercury__bag__subset_compare_loop_3_p_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

void MR_CALL 
mercury__bag__subtract_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__subtract_small_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__subtract_small_loop_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__to_assoc_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
mercury__bag__to_list_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
mercury__bag__to_list_only_duplicates_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
mercury__bag__to_list_without_duplicates_2_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word * param_3);

void MR_CALL 
mercury__bag__union_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__union_small_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

void MR_CALL 
mercury__bag__union_small_loop_3_p_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3,
  MR_Word * param_4);

MR_Word MR_CALL 
mercury__bag__bag_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Integer MR_CALL 
mercury__bag__count_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Integer MR_CALL 
mercury__bag__count_unique_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Integer MR_CALL 
mercury__bag__count_value_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3);

MR_Word MR_CALL 
mercury__bag__delete_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3);

MR_Word MR_CALL 
mercury__bag__delete_all_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3);

MR_Word MR_CALL 
mercury__bag__det_insert_duplicates_3_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Integer param_3,
  MR_Box param_4);

MR_Word MR_CALL 
mercury__bag__det_remove_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3);

MR_Word MR_CALL 
mercury__bag__det_remove_list_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__det_remove_set_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__from_list_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__from_set_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__from_sorted_list_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__init_0_f_0(
  MR_Word param_1);

MR_Word MR_CALL 
mercury__bag__insert_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Box param_3);

MR_Word MR_CALL 
mercury__bag__insert_list_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__insert_set_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__intersect_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__intersect_small_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__least_upper_bound_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__least_upper_bound_small_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__singleton_1_f_0(
  MR_Word param_1,
  MR_Box param_2);

MR_Word MR_CALL 
mercury__bag__subtract_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__subtract_small_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__to_assoc_list_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__to_list_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__to_list_only_duplicates_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__to_list_without_duplicates_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__to_set_1_f_0(
  MR_Word param_1,
  MR_Word param_2);

MR_Word MR_CALL 
mercury__bag__union_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

MR_Word MR_CALL 
mercury__bag__union_small_2_f_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void MR_CALL 
mercury__bag____Compare____bag_1_0(
  MR_Word param_1,
  MR_Word * param_2,
  MR_Word param_3,
  MR_Word param_4);

MR_bool MR_CALL 
mercury__bag____Unify____bag_1_0(
  MR_Word param_1,
  MR_Word param_2,
  MR_Word param_3);

void mercury__bag__init(void);
void mercury__bag__init_type_tables(void);
void mercury__bag__init_debugger(void);
const char *mercury__bag__grade_check(void);

#ifdef __cplusplus
}
#endif

#endif // MR_HEADER_GUARD_bag

// :- end_interface bag.
