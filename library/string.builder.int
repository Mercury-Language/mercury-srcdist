:- module (string.builder).
:- interface.
:- use_module char.
:- use_module stream.
:- type handle
    --->    handle .
:- type state.
:- instance (stream.output(string.builder.handle, string.builder.state)).
:- instance (stream.stream(string.builder.handle, string.builder.state)).
:- instance (stream.writer(string.builder.handle, char.char, string.builder.state)).
:- instance (stream.writer(string.builder.handle, string, string.builder.state)).
:- pred append_char(char.char, string.builder.state, string.builder.state).
:- mode append_char((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred append_string(string, string.builder.state, string.builder.state).
:- mode append_string((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred append_strings(list.list(string), string.builder.state, string.builder.state).
:- mode append_strings((builtin.in), (builtin.di), (builtin.uo)) is det.
:- func init = string.builder.state.
:- mode init = (builtin.uo) is det.
:- func to_string(string.builder.state) = string.
:- mode to_string((builtin.di)) = (builtin.uo) is det.
