:- module diet.
:- interface.
:- use_module bool.
:- use_module enum.
:- use_module list.
:- type diet(T).
:- typeclass diet_element(T) where [
	pred less_than(T, T),
	mode less_than((builtin.in), (builtin.in)) is semidet,
	func successor(T) = T,
	func predecessor(T) = T
].
:- instance (diet.diet_element(int)).
:- pred all_true((pred T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode all_true(builtin.in((pred((builtin.in)) is semidet)), (builtin.in)) is semidet.
:- pred contains(diet.diet(T), T) <= (diet.diet_element(T)).
:- mode contains((builtin.in), (builtin.in)) is semidet.
:- func count(diet.diet(T)) = int <= (enum.enum(T)).
:- pred delete(T, diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode delete((builtin.in), (builtin.in), (builtin.out)) is det.
:- func delete(diet.diet(T), T) = diet.diet(T) <= (diet.diet_element(T)).
:- pred delete_list(list.list(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode delete_list((builtin.in), (builtin.in), (builtin.out)) is det.
:- func delete_list(diet.diet(T), list.list(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- pred difference(diet.diet(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode difference((builtin.in), (builtin.in), (builtin.out)) is det.
:- func difference(diet.diet(T), diet.diet(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- pred divide((pred T), diet.diet(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode divide(builtin.in((pred((builtin.in)) is semidet)), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred divide_by_set(diet.diet(T), diet.diet(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode divide_by_set((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred empty(diet.diet(T)).
:- mode empty((builtin.in)) is semidet.
:- mode empty((builtin.out)) is det.
:- pred equal(diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode equal((builtin.in), (builtin.in)) is semidet.
:- func filter((pred T), diet.diet(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- mode filter(((pred((builtin.in)) is semidet) >> (pred((builtin.in)) is semidet)), (builtin.in)) = (builtin.out) is det.
:- pred filter((pred T), diet.diet(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode filter(((pred((builtin.in)) is semidet) >> (pred((builtin.in)) is semidet)), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred foldl(pred(T, A, A), diet.diet(T), A, A) <= (diet.diet_element(T)).
:- mode foldl(((pred((builtin.in), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out)) is det.
:- mode foldl(((pred((builtin.in), (builtin.mdi), (builtin.muo)) is det) >> (pred((builtin.in), (builtin.mdi), (builtin.muo)) is det)), (builtin.in), (builtin.mdi), (builtin.muo)) is det.
:- mode foldl(((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode foldl(((pred((builtin.in), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- mode foldl(((pred((builtin.in), (builtin.mdi), (builtin.muo)) is semidet) >> (pred((builtin.in), (builtin.mdi), (builtin.muo)) is semidet)), (builtin.in), (builtin.mdi), (builtin.muo)) is semidet.
:- mode foldl(((pred((builtin.in), (builtin.di), (builtin.uo)) is semidet) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is semidet)), (builtin.in), (builtin.di), (builtin.uo)) is semidet.
:- func foldl((func(T, A) = A), diet.diet(T), A) = A <= (diet.diet_element(T)).
:- pred foldl2(pred(T, A, A, B, B), diet.diet(T), A, A, B, B) <= (diet.diet_element(T)).
:- mode foldl2(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldl2(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det.
:- mode foldl2(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldl2(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldl2(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet.
:- mode foldl2(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet.
:- pred foldl3(pred(T, A, A, B, B, C, C), diet.diet(T), A, A, B, B, C, C) <= (diet.diet_element(T)).
:- mode foldl3(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldl3(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det.
:- mode foldl3(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldl3(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldl3(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet.
:- mode foldl3(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet.
:- pred foldl4(pred(T, A, A, B, B, C, C, D, D), diet.diet(T), A, A, B, B, C, C, D, D) <= (diet.diet_element(T)).
:- mode foldl4(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldl4(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det.
:- mode foldl4(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldl4(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldl4(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet.
:- mode foldl4(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet.
:- pred foldl5(pred(T, A, A, B, B, C, C, D, D, E, E), diet.diet(T), A, A, B, B, C, C, D, D, E, E) <= (diet.diet_element(T)).
:- mode foldl5(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldl5(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is det.
:- mode foldl5(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldl5(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldl5(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.mdi), (builtin.muo)) is semidet.
:- mode foldl5(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is semidet.
:- pred foldl_intervals(pred(T, T, A, A), diet.diet(T), A, A) <= (diet.diet_element(T)).
:- mode foldl_intervals(((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out)) is det.
:- mode foldl_intervals(((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode foldl_intervals(((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred foldr(pred(T, A, A), diet.diet(T), A, A) <= (diet.diet_element(T)).
:- mode foldr(((pred((builtin.in), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out)) is det.
:- mode foldr(((pred((builtin.in), (builtin.mdi), (builtin.muo)) is det) >> (pred((builtin.in), (builtin.mdi), (builtin.muo)) is det)), (builtin.in), (builtin.mdi), (builtin.muo)) is det.
:- mode foldr(((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode foldr(((pred((builtin.in), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- mode foldr(((pred((builtin.in), (builtin.mdi), (builtin.muo)) is semidet) >> (pred((builtin.in), (builtin.mdi), (builtin.muo)) is semidet)), (builtin.in), (builtin.mdi), (builtin.muo)) is semidet.
:- mode foldr(((pred((builtin.in), (builtin.di), (builtin.uo)) is semidet) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is semidet)), (builtin.in), (builtin.di), (builtin.uo)) is semidet.
:- func foldr((func(T, A) = A), diet.diet(T), A) = A <= (diet.diet_element(T)).
:- pred foldr_intervals(pred(T, T, A, A), diet.diet(T), A, A) <= (diet.diet_element(T)).
:- mode foldr_intervals(((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out)) is det.
:- mode foldr_intervals(((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode foldr_intervals(((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet) >> (pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred from_interval_list(list.list({T, T}), diet.diet(T)) <= (diet.diet_element(T)).
:- mode from_interval_list((builtin.in), (builtin.out)) is det.
:- pred from_list(list.list(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode from_list((builtin.in), (builtin.out)) is det.
:- func from_list(list.list(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- pred init(diet.diet(T)).
:- mode init((builtin.out)) is det.
:- func init = diet.diet(T).
:- pred insert(T, diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode insert((builtin.in), (builtin.in), (builtin.out)) is det.
:- func insert(diet.diet(T), T) = diet.diet(T) <= (diet.diet_element(T)).
:- pred insert_interval(T, T, diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode insert_interval((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred insert_list(list.list(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode insert_list((builtin.in), (builtin.in), (builtin.out)) is det.
:- func insert_list(diet.diet(T), list.list(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- pred insert_new(T, diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode insert_new((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred intersect(diet.diet(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode intersect((builtin.in), (builtin.in), (builtin.out)) is det.
:- func intersect(diet.diet(T), diet.diet(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- pred intersect_list(list.list(diet.diet(T)), diet.diet(T)) <= (diet.diet_element(T)).
:- mode intersect_list((builtin.in), (builtin.out)) is det.
:- func intersect_list(list.list(diet.diet(T))) = diet.diet(T) <= (diet.diet_element(T)).
:- pred is_empty(diet.diet(T)).
:- mode is_empty((builtin.in)) is semidet.
:- pred is_non_empty(diet.diet(T)).
:- mode is_non_empty((builtin.in)) is semidet.
:- pred is_singleton(diet.diet(T), T) <= (diet.diet_element(T)).
:- mode is_singleton((builtin.in), (builtin.out)) is semidet.
:- pred list_to_set(list.list(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode list_to_set((builtin.in), (builtin.out)) is det.
:- func list_to_set(list.list(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- func make_interval_set(T, T) = diet.diet(T) <= (diet.diet_element(T)).
:- func make_singleton_set(T) = diet.diet(T) <= (diet.diet_element(T)).
:- pred member(T, diet.diet(T)) <= (diet.diet_element(T)).
:- mode member((builtin.in), (builtin.in)) is semidet.
:- mode member((builtin.out), (builtin.in)) is nondet.
:- pred remove(T, diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode remove((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred remove_least(T, diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode remove_least((builtin.out), (builtin.in), (builtin.out)) is semidet.
:- pred remove_list(list.list(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode remove_list((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred sorted_list_to_set(list.list(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode sorted_list_to_set((builtin.in), (builtin.out)) is det.
:- func sorted_list_to_set(list.list(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- pred split(T, diet.diet(T), diet.diet(T), bool.bool, diet.diet(T)) <= (diet.diet_element(T)).
:- mode split((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)) is det.
:- pred subset(diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode subset((builtin.in), (builtin.in)) is semidet.
:- pred superset(diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode superset((builtin.in), (builtin.in)) is semidet.
:- pred to_sorted_interval_list(diet.diet(T), list.list({T, T})) <= (diet.diet_element(T)).
:- mode to_sorted_interval_list((builtin.in), (builtin.out)) is det.
:- pred to_sorted_list(diet.diet(T), list.list(T)) <= (diet.diet_element(T)).
:- mode to_sorted_list((builtin.in), (builtin.out)) is det.
:- func to_sorted_list(diet.diet(T)) = list.list(T) <= (diet.diet_element(T)).
:- pred union(diet.diet(T), diet.diet(T), diet.diet(T)) <= (diet.diet_element(T)).
:- mode union((builtin.in), (builtin.in), (builtin.out)) is det.
:- func union(diet.diet(T), diet.diet(T)) = diet.diet(T) <= (diet.diet_element(T)).
:- pred union_list(list.list(diet.diet(T)), diet.diet(T)) <= (diet.diet_element(T)).
:- mode union_list((builtin.in), (builtin.out)) is det.
:- func union_list(list.list(diet.diet(T))) = diet.diet(T) <= (diet.diet_element(T)).
:- pragma obsolete((diet.empty)/1, [init/0, init/1, is_empty/1]).
