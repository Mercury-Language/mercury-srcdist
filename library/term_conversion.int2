:- module term_conversion.
:- interface.
:- use_module list.
:- use_module term.
:- type term_to_type_arg_context
    --->    arg_context(term.const, int, term.context).
:- type term_to_type_context == list.list(term_conversion.term_to_type_arg_context).
:- type term_to_type_error(T)
    --->    type_error(term.term(T), type_desc.type_desc, term.context, term_conversion.term_to_type_context)
    ;       mode_error(term.var(T), term_conversion.term_to_type_context).
:- type term_to_type_result(T) == term_conversion.term_to_type_result(T, term.generic).
:- type term_to_type_result(T, U)
    --->    ok(T)
    ;       error(term_conversion.term_to_type_error(U)).
:- type_representation(term_conversion.term_to_type_arg_context, is_word_aligned_ptr).
:- type_representation(term_conversion.term_to_type_context, is_eqv_to(list.list(term_conversion.term_to_type_arg_context))).
:- type_representation(term_conversion.term_to_type_result(V_1), is_eqv_to(term_conversion.term_to_type_result(V_1, term.generic))).
