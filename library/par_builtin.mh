/*
** Automatically generated from `par_builtin.m'
** by the Mercury compiler,
** version rotd-2009-06-06, configured for i686-pc-linux-gnu.
** Do not edit.
*/
#ifndef PAR_BUILTIN_MH
#define PAR_BUILTIN_MH

#ifdef __cplusplus
extern "C" {
#endif

#ifdef MR_HIGHLEVEL_CODE
#include "mercury.h"
#else
  #ifndef MERCURY_HDR_EXCLUDE_IMP_H
  #include "mercury_imp.h"
  #endif
#endif
#ifdef MR_DEEP_PROFILING
#include "mercury_deep_profiling.h"
#endif

#ifndef PAR_BUILTIN_DECL_GUARD
#define PAR_BUILTIN_DECL_GUARD
#line 89 "par_builtin.m"

    #include "mercury_context.h"
    #include "mercury_thread.h"

    typedef struct MR_Future MR_Future;

#ifdef MR_THREAD_SAFE
    struct MR_Future {
        /* lock preventing concurrent accesses */
        MercuryLock     MR_fut_lock;
        /* whether this future has been signalled yet */
        int             MR_fut_signalled;

        /* linked list of all the contexts blocked on this future */
        MR_Context      *MR_fut_suspended;
        MR_Word         MR_fut_value;
    };
#else /* !MR_THREAD_SAFE */
    struct MR_Future {
        char dummy; /* ANSI C doesn't allow empty structs */
    };
#endif /* !MR_THREAD_SAFE */

#line 52 "par_builtin.mh.tmp"
#line 160 "par_builtin.m"

#ifdef MR_CONSERVATIVE_GC
    void MR_finalize_future(void *obj, void *cd);
#endif

#line 59 "par_builtin.mh.tmp"
#line 239 "par_builtin.m"

/*
INIT mercury_sys_init_par_builtin_modules
*/

#if (!defined MR_HIGHLEVEL_CODE) && (defined MR_THREAD_SAFE)
    MR_define_extern_entry(mercury__par_builtin__wait_resume);
#endif

#line 70 "par_builtin.mh.tmp"

#endif

#ifdef __cplusplus
}
#endif

#endif /* PAR_BUILTIN_MH */
