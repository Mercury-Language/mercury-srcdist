:- module (bit_buffer.read).
:- interface.
:- use_module io.
:- type io_read_buffer == bit_buffer.read.read_buffer(io.binary_input_stream, io.state, io.error).
:- type read_buffer == bit_buffer.read.read_buffer(bit_buffer.error_stream, bit_buffer.error_state, bit_buffer.error_stream_error).
:- type read_buffer(Stream, State, Error).
:- inst (uniq_read_buffer) == ground.
:- mode (read_buffer_di) == builtin.in(((bit_buffer.read).uniq_read_buffer)).
:- mode (read_buffer_ui) == builtin.in(((bit_buffer.read).uniq_read_buffer)).
:- mode (read_buffer_uo) == builtin.out(((bit_buffer.read).uniq_read_buffer)).
:- type_representation(io_read_buffer, is_eqv_to(bit_buffer.read.read_buffer(io.binary_input_stream, io.state, io.error))).
:- type_representation(read_buffer, is_eqv_to(bit_buffer.read.read_buffer(bit_buffer.error_stream, bit_buffer.error_state, bit_buffer.error_stream_error))).
:- type_representation(read_buffer(V_1, V_2, V_3), du_repn(notag("read_buffer", []))).
