:- module maybe.
:- interface.
:- import_module list.
:- type maybe(T)
    --->    no 
    ;       yes(T).
:- type maybe_error
    --->    ok 
    ;       error(string).
:- type maybe_error(T) == maybe.maybe_error(T, string).
:- type maybe_error(T, E)
    --->    ok(T)
    ;       error(E).
:- type maybe_errors(T) == maybe.maybe_errors(T, string).
:- type maybe_errors(T, E)
    --->    ok(T)
    ;       error(E, list.list(E)).
:- inst (maybe(I)) for maybe.maybe/1 == bound(no ; yes(I)).
:- inst (maybe_error(I)) for maybe.maybe_error/2 == bound(error(ground) ; ok(I)).
:- inst (maybe_error_ok(I)) for maybe.maybe_error/2 == bound(ok(I)).
:- inst (maybe_errors_ok(I)) for maybe.maybe_errors/2 == bound(ok(I)).
:- inst (maybe_yes(I)) for maybe.maybe/1 == bound(yes(I)).
