:- module dir.
:- interface.
:- use_module bool.
:- use_module io.
:- type file_error
    --->    file_error(string, dir.file_operation, io.error).
:- type file_operation
    --->    file_open 
    ;       file_close 
    ;       file_get_id 
    ;       file_get_type 
    ;       file_check_accessibility 
    ;       file_read_dir_entry .
:- type fold_params
    --->    fold_params((dir.fp_subdirs) :: dir.maybe_subdirs, (dir.fp_on_error) :: dir.on_error).
:- type foldl_pred(T) == pred(string, string, io.file_type, bool.bool, T, T, io.io, io.io).
:- type maybe_follow_symlinks
    --->    do_not_follow_symlinks 
    ;       follow_symlinks .
:- type maybe_subdirs
    --->    do_not_enter_subdirs 
    ;       enter_subdirs(dir.maybe_follow_symlinks).
:- type on_error
    --->    on_error_stop 
    ;       on_error_keep_going .
:- inst (foldl_pred) == (pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det).
:- type_representation(file_error, is_word_aligned_ptr).
:- type_representation(file_operation, du_repn(enum("file_open", "file_close", ["file_get_id", "file_get_type", "file_check_accessibility", "file_read_dir_entry"],  no_c_j_cs))).
:- type_representation(fold_params, is_word_aligned_ptr).
:- type_representation(foldl_pred(V_1), is_eqv_to(pred(string, string, io.file_type, bool.bool, V_1, V_1, io.io, io.io))).
:- type_representation(maybe_file_error, is_eqv_to(dir.maybe_file_error(unit.unit))).
:- type_representation(maybe_follow_symlinks, du_repn(enum("do_not_follow_symlinks", "follow_symlinks", [],  no_c_j_cs))).
:- type_representation(on_error, du_repn(enum("on_error_stop", "on_error_keep_going", [],  no_c_j_cs))).
:- implementation.
:- pragma foreign_import_module("C", dir).
:- pragma foreign_import_module("C#", dir).
:- pragma foreign_import_module("Java", dir).
:- type stream
    --->    stream .
:- pragma foreign_type(c, stream, "ML_DIR_STREAM").
:- pragma foreign_type(java, stream, "java.util.Iterator").
:- pragma foreign_type(csharp, stream, "System.Collections.IEnumerator").
