:- module io.
:- interface.
:- include_module (io.call_system).
:- include_module (io.environment).
:- include_module (io.file).
:- import_module array.
:- import_module bitmap.
:- import_module bool.
:- import_module char.
:- import_module deconstruct.
:- import_module list.
:- import_module map.
:- import_module maybe.
:- import_module ops.
:- import_module stream.
:- import_module string.
:- import_module time.
:- import_module univ.
:- pragma foreign_import_module("C", io).
:- pragma foreign_import_module("C#", io).
:- pragma foreign_import_module("Java", io).
:- type access_type
    --->    read 
    ;       write 
    ;       execute .
:- type binary_input_stream.
:- type binary_output_stream.
:- type environment_var_map == map.map(string, string).
:- type error.
:- type file_id.
:- type file_type
    --->    regular_file 
    ;       directory 
    ;       symbolic_link 
    ;       named_pipe 
    ;       socket 
    ;       character_device 
    ;       block_device 
    ;       message_queue 
    ;       semaphore 
    ;       shared_memory 
    ;       unknown .
:- type input_stream.
:- type io == io.state.
:- type maybe_incomplete_result(T)
    --->    ok(T)
    ;       eof 
    ;       incomplete(list.list(uint8))
    ;       error(io.error).
:- type maybe_partial_res(T)
    --->    ok(T)
    ;       error(T, io.error).
:- type maybe_partial_res_2(T1, T2)
    --->    ok2(T1, T2)
    ;       error2(T1, T2, io.error).
:- type maybe_stream_info
    --->    stream((io.maybe_stream_id) :: int, (io.maybe_stream_mode) :: io.stream_mode, (io.maybe_stream_content) :: io.stream_content, (io.maybe_stream_source) :: io.stream_source)
    ;       unknown_stream .
:- type output_stream.
:- type posn
    --->    posn((io.posn_current_line_number) :: int, (io.posn_offset_of_start_of_line) :: int, (io.posn_current_offset) :: int).
:- type read_result(T)
    --->    ok(T)
    ;       eof 
    ;       error(string, int).
:- type res
    --->    ok 
    ;       error(io.error).
:- type res(T)
    --->    ok(T)
    ;       error(io.error).
:- type result
    --->    ok 
    ;       eof 
    ;       error(io.error).
:- type result(T)
    --->    ok(T)
    ;       eof 
    ;       error(io.error).
:- type state.
:- type stream.
:- type stream_content
    --->    text 
    ;       binary 
    ;       preopen .
:- type stream_db == map.map(io.stream_id, io.stream_info).
:- type stream_id.
:- type stream_info
    --->    stream((io.stream_id) :: int, (io.stream_mode) :: io.stream_mode, (io.stream_content) :: io.stream_content, (io.stream_source) :: io.stream_source).
:- type stream_mode
    --->    input 
    ;       output 
    ;       append .
:- type stream_source
    --->    file(string)
    ;       stdin 
    ;       stdout 
    ;       stderr .
:- type system_error.
:- pragma foreign_type(c, system_error, "MR_Integer").
:- pragma foreign_type(java, system_error, "java.lang.Exception").
:- pragma foreign_type(csharp, system_error, "System.Exception").
:- type system_result
    --->    exited(int)
    ;       signalled(int).
:- type text_input_stream == io.input_stream.
:- type text_output_stream == io.output_stream.
:- type whence
    --->    set 
    ;       cur 
    ;       end .
:- inst maybe_partial_res(T) for io.maybe_partial_res/1
    --->    error(T, ground)
    ;       ok(T).
:- instance (stream.error(io.error)).
:- instance (stream.input(io.binary_input_stream, io.io)).
:- instance (stream.input(io.text_input_stream, io.io)).
:- instance (stream.line_oriented(io.text_input_stream, io.io)).
:- instance (stream.line_oriented(io.text_output_stream, io.io)).
:- instance (stream.output(io.binary_output_stream, io.io)).
:- instance (stream.output(io.text_output_stream, io.io)).
:- instance (stream.putback(io.binary_input_stream, int, io.io, io.error)).
:- instance (stream.putback(io.binary_input_stream, int8, io.io, io.error)).
:- instance (stream.putback(io.binary_input_stream, uint8, io.io, io.error)).
:- instance (stream.putback(io.text_input_stream, char.char, io.io, io.error)).
:- instance (stream.reader(io.binary_input_stream, int, io.io, io.error)).
:- instance (stream.reader(io.binary_input_stream, int8, io.io, io.error)).
:- instance (stream.reader(io.binary_input_stream, uint8, io.io, io.error)).
:- instance (stream.reader(io.text_input_stream, char.char, io.io, io.error)).
:- instance (stream.reader(io.text_input_stream, string.line, io.io, io.error)).
:- instance (stream.reader(io.text_input_stream, string.text_file, io.io, io.error)).
:- instance (stream.seekable(io.binary_input_stream, io.io)).
:- instance (stream.seekable(io.binary_output_stream, io.io)).
:- instance (stream.stream(io.binary_input_stream, io.io)).
:- instance (stream.stream(io.binary_output_stream, io.io)).
:- instance (stream.stream(io.text_input_stream, io.io)).
:- instance (stream.stream(io.text_output_stream, io.io)).
:- instance (stream.unboxed_reader(io.binary_input_stream, int8, io.io, io.error)).
:- instance (stream.unboxed_reader(io.binary_input_stream, uint8, io.io, io.error)).
:- instance (stream.unboxed_reader(io.text_input_stream, char.char, io.io, io.error)).
:- instance (stream.writer(io.binary_output_stream, bitmap.byte, io.io)).
:- instance (stream.writer(io.binary_output_stream, int8, io.io)).
:- instance (stream.writer(io.binary_output_stream, uint8, io.io)).
:- instance (stream.writer(io.text_output_stream, char.char, io.io)).
:- instance (stream.writer(io.text_output_stream, univ.univ, io.io)).
:- instance (stream.writer(io.text_output_stream, int, io.io)).
:- instance (stream.writer(io.text_output_stream, uint, io.io)).
:- instance (stream.writer(io.text_output_stream, int8, io.io)).
:- instance (stream.writer(io.text_output_stream, uint8, io.io)).
:- instance (stream.writer(io.text_output_stream, int16, io.io)).
:- instance (stream.writer(io.text_output_stream, uint16, io.io)).
:- instance (stream.writer(io.text_output_stream, int32, io.io)).
:- instance (stream.writer(io.text_output_stream, uint32, io.io)).
:- instance (stream.writer(io.text_output_stream, float, io.io)).
:- instance (stream.writer(io.text_output_stream, string, io.io)).
:- pred binary_input_stream(io.binary_input_stream, io.io, io.io).
:- mode binary_input_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_input_stream_foldl(pred(int, T, T), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl(((pred((builtin.in), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl(((pred((builtin.in), (builtin.in), (builtin.out)) is cc_multi) >> (pred((builtin.in), (builtin.in), (builtin.out)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl(io.binary_input_stream, pred(int, T, T), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl((builtin.in), builtin.in((pred((builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl((builtin.in), builtin.in((pred((builtin.in), (builtin.in), (builtin.out)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io(pred(int, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io(builtin.in((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io(builtin.in((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io(io.binary_input_stream, pred(int, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io((builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io((builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io_maybe_stop(pred(int, bool.bool, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_maybe_stop(((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_maybe_stop(((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io_maybe_stop(io.binary_input_stream, pred(int, bool.bool, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_maybe_stop((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_maybe_stop((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl_io(pred(int, io.io, io.io), io.res, io.io, io.io).
:- mode binary_input_stream_foldl_io(((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl_io(((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl_io(io.binary_input_stream, pred(int, io.io, io.io), io.res, io.io, io.io).
:- mode binary_input_stream_foldl_io((builtin.in), builtin.in((pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl_io((builtin.in), builtin.in((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- func binary_input_stream_get_stream(io.binary_input_stream) = io.stream.
:- func binary_input_stream_info(io.stream_db, io.binary_input_stream) = io.maybe_stream_info.
:- pred binary_input_stream_name(string, io.io, io.io).
:- mode binary_input_stream_name((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_input_stream_name(io.binary_input_stream, string, io.io, io.io).
:- mode binary_input_stream_name((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_input_stream_offset(io.binary_input_stream, int, io.io, io.io).
:- mode binary_input_stream_offset((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_input_stream_offset64(io.binary_input_stream, int64, io.io, io.io).
:- mode binary_input_stream_offset64((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_output_stream(io.binary_output_stream, io.io, io.io).
:- mode binary_output_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- func binary_output_stream_get_stream(io.binary_output_stream) = io.stream.
:- func binary_output_stream_info(io.stream_db, io.binary_output_stream) = io.maybe_stream_info.
:- pred binary_output_stream_name(string, io.io, io.io).
:- mode binary_output_stream_name((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_output_stream_name(io.binary_output_stream, string, io.io, io.io).
:- mode binary_output_stream_name((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_output_stream_offset(io.binary_output_stream, int, io.io, io.io).
:- mode binary_output_stream_offset((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_output_stream_offset64(io.binary_output_stream, int64, io.io, io.io).
:- mode binary_output_stream_offset64((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred call_system(string, io.res(int), io.io, io.io).
:- mode call_system((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred call_system_return_signal(string, io.res(io.system_result), io.io, io.io).
:- mode call_system_return_signal((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred check_file_accessibility(string, list.list(io.access_type), io.res, io.io, io.io).
:- mode check_file_accessibility((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred close_binary_input(io.binary_input_stream, io.io, io.io).
:- mode close_binary_input((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred close_binary_output(io.binary_output_stream, io.io, io.io).
:- mode close_binary_output((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred close_input(io.text_input_stream, io.io, io.io).
:- mode close_input((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred close_output(io.text_output_stream, io.io, io.io).
:- mode close_output((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred command_line_arguments(list.list(string), io.io, io.io).
:- mode command_line_arguments((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred error_message(io.error, string).
:- mode error_message((builtin.in), (builtin.out)) is det.
:- func error_message(io.error) = string.
:- pred file_id(string, io.res(io.file_id), io.io, io.io).
:- mode file_id((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred file_modification_time(string, io.res(time.time_t), io.io, io.io).
:- mode file_modification_time((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred file_type(bool.bool, string, io.res(io.file_type), io.io, io.io).
:- mode file_type((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred finalize_state(io.io, io.io).
:- mode finalize_state((builtin.di), (builtin.uo)) is det.
:- pred flush_binary_output(io.io, io.io).
:- mode flush_binary_output((builtin.di), (builtin.uo)) is det.
:- pred flush_binary_output(io.binary_output_stream, io.io, io.io).
:- mode flush_binary_output((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred flush_output(io.io, io.io).
:- mode flush_output((builtin.di), (builtin.uo)) is det.
:- pred flush_output(io.text_output_stream, io.io, io.io).
:- mode flush_output((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred format(string, list.list(string.poly_type), io.io, io.io).
:- mode format((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred format(io.text_output_stream, string, list.list(string.poly_type), io.io, io.io).
:- mode format((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred get_environment_var(string, maybe.maybe(string), io.io, io.io).
:- mode get_environment_var((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_environment_var_map(io.environment_var_map, io.io, io.io).
:- mode get_environment_var_map((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_exit_status(int, io.io, io.io).
:- mode get_exit_status((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_globals(univ.univ, io.io, io.io).
:- mode get_globals((builtin.out), (builtin.di), (builtin.uo)) is det.
:- func get_io_stream_info(io.stream_db, T) = io.maybe_stream_info is semidet.
:- pred get_line_number(int, io.io, io.io).
:- mode get_line_number((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_line_number(io.text_input_stream, int, io.io, io.io).
:- mode get_line_number((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_op_table(ops.table, io.io, io.io).
:- mode get_op_table((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_output_line_number(int, io.io, io.io).
:- mode get_output_line_number((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_output_line_number(io.text_output_stream, int, io.io, io.io).
:- mode get_output_line_number((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_stream_db(io.stream_db, io.io, io.io).
:- mode get_stream_db((builtin.out), (builtin.di), (builtin.uo)) is det.
:- impure pred get_stream_db_with_locking(io.stream_db).
:- mode get_stream_db_with_locking((builtin.out)) is det.
:- pred get_temp_directory(string, io.io, io.io).
:- mode get_temp_directory((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred have_cygwin is semidet.
:- pred have_dotnet is semidet.
:- pred have_make_temp_directory is semidet.
:- pred have_set_environment_var is semidet.
:- pred have_symlinks is semidet.
:- pred have_win32 is semidet.
:- pred ignore_whitespace(io.result, io.io, io.io).
:- mode ignore_whitespace((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred ignore_whitespace(io.text_input_stream, io.result, io.io, io.io).
:- mode ignore_whitespace((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred init_state(io.io, io.io).
:- mode init_state((builtin.di), (builtin.uo)) is det.
:- pred input_stream(io.text_input_stream, io.io, io.io).
:- mode input_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred input_stream_foldl(pred(char.char, T, T), T, io.maybe_partial_res(T), io.io, io.io).
:- mode input_stream_foldl(((pred((builtin.in), (builtin.in), (builtin.out)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl(((pred((builtin.in), (builtin.in), (builtin.out)) is cc_multi) >> (pred((builtin.in), (builtin.in), (builtin.out)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred input_stream_foldl(io.text_input_stream, pred(char.char, T, T), T, io.maybe_partial_res(T), io.io, io.io).
:- mode input_stream_foldl((builtin.in), builtin.in((pred((builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl((builtin.in), builtin.in((pred((builtin.in), (builtin.in), (builtin.out)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred input_stream_foldl2_io(pred(char.char, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode input_stream_foldl2_io(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl2_io(((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred input_stream_foldl2_io(io.text_input_stream, pred(char.char, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode input_stream_foldl2_io((builtin.in), builtin.in((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl2_io((builtin.in), builtin.in((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred input_stream_foldl2_io_maybe_stop(pred(char.char, bool.bool, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode input_stream_foldl2_io_maybe_stop(((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl2_io_maybe_stop(((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred input_stream_foldl2_io_maybe_stop(io.text_input_stream, pred(char.char, bool.bool, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode input_stream_foldl2_io_maybe_stop((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl2_io_maybe_stop((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred input_stream_foldl_io(pred(char.char, io.io, io.io), io.res, io.io, io.io).
:- mode input_stream_foldl_io(((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl_io(((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred input_stream_foldl_io(io.text_input_stream, pred(char.char, io.io, io.io), io.res, io.io, io.io).
:- mode input_stream_foldl_io((builtin.in), builtin.in((pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode input_stream_foldl_io((builtin.in), builtin.in((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- func input_stream_get_stream(io.input_stream) = io.stream.
:- func input_stream_info(io.stream_db, io.text_input_stream) = io.maybe_stream_info.
:- pred input_stream_name(string, io.io, io.io).
:- mode input_stream_name((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred input_stream_name(io.text_input_stream, string, io.io, io.io).
:- mode input_stream_name((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred is_error(io.system_error, string, maybe.maybe(io.error), io.io, io.io).
:- mode is_error((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred is_maybe_win32_error(io.system_error, string, maybe.maybe(io.error), io.io, io.io).
:- mode is_maybe_win32_error((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred make_err_msg(io.system_error, string, string, io.io, io.io).
:- mode make_err_msg((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- func make_io_error(string) = io.error.
:- pred make_maybe_win32_err_msg(io.system_error, string, string, io.io, io.io).
:- mode make_maybe_win32_err_msg((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred make_symlink(string, string, io.res, io.io, io.io).
:- mode make_symlink((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred make_temp_directory(io.res(string), io.io, io.io).
:- mode make_temp_directory((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred make_temp_directory(string, string, string, io.res(string), io.io, io.io).
:- mode make_temp_directory((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred make_temp_file(io.res(string), io.io, io.io).
:- mode make_temp_file((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred make_temp_file(string, string, string, io.res(string), io.io, io.io).
:- mode make_temp_file((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred nl(io.io, io.io).
:- mode nl((builtin.di), (builtin.uo)) is det.
:- pred nl(io.text_output_stream, io.io, io.io).
:- mode nl((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred open_append(string, io.res(io.text_output_stream), io.io, io.io).
:- mode open_append((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred open_binary_append(string, io.res(io.binary_output_stream), io.io, io.io).
:- mode open_binary_append((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred open_binary_input(string, io.res(io.binary_input_stream), io.io, io.io).
:- mode open_binary_input((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred open_binary_output(string, io.res(io.binary_output_stream), io.io, io.io).
:- mode open_binary_output((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred open_input(string, io.res(io.text_input_stream), io.io, io.io).
:- mode open_input((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred open_output(string, io.res(io.text_output_stream), io.io, io.io).
:- mode open_output((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred output_stream(io.text_output_stream, io.io, io.io).
:- mode output_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- func output_stream_get_stream(io.output_stream) = io.stream.
:- func output_stream_info(io.stream_db, io.text_output_stream) = io.maybe_stream_info.
:- pred output_stream_name(string, io.io, io.io).
:- mode output_stream_name((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred output_stream_name(io.text_output_stream, string, io.io, io.io).
:- mode output_stream_name((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred print(T, io.io, io.io).
:- mode print((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred print(io.text_output_stream, T, io.io, io.io).
:- mode print((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred print(io.text_output_stream, deconstruct.noncanon_handling, T, io.io, io.io).
:- mode print((builtin.in), builtin.in((deconstruct.do_not_allow)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode print((builtin.in), builtin.in((deconstruct.canonicalize)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode print((builtin.in), builtin.in((deconstruct.include_details_cc)), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- mode print((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred print_cc(T, io.io, io.io).
:- mode print_cc((builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred print_line(T, io.io, io.io).
:- mode print_line((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred print_line(io.text_output_stream, T, io.io, io.io).
:- mode print_line((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred print_line(io.text_output_stream, deconstruct.noncanon_handling, T, io.io, io.io).
:- mode print_line((builtin.in), builtin.in((deconstruct.do_not_allow)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode print_line((builtin.in), builtin.in((deconstruct.canonicalize)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode print_line((builtin.in), builtin.in((deconstruct.include_details_cc)), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- mode print_line((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred print_line_cc(T, io.io, io.io).
:- mode print_line_cc((builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred progname(string, string, io.io, io.io).
:- mode progname((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred progname_base(string, string, io.io, io.io).
:- mode progname_base((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred putback_byte(int, io.io, io.io).
:- mode putback_byte((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred putback_byte(io.binary_input_stream, int, io.io, io.io).
:- mode putback_byte((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred putback_char(char.char, io.io, io.io).
:- mode putback_char((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred putback_char(io.text_input_stream, char.char, io.io, io.io).
:- mode putback_char((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred putback_int8(int8, io.io, io.io).
:- mode putback_int8((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred putback_int8(io.binary_input_stream, int8, io.io, io.io).
:- mode putback_int8((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred putback_uint8(uint8, io.io, io.io).
:- mode putback_uint8((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred putback_uint8(io.binary_input_stream, uint8, io.io, io.io).
:- mode putback_uint8((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred read(io.read_result(T), io.io, io.io).
:- mode read((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read(io.text_input_stream, io.read_result(T), io.io, io.io).
:- mode read((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary(io.result(T), io.io, io.io).
:- mode read_binary((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary(io.binary_input_stream, io.result(T), io.io, io.io).
:- mode read_binary((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_file(io.result(list.list(int)), io.io, io.io).
:- mode read_binary_file((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_file(io.binary_input_stream, io.result(list.list(int)), io.io, io.io).
:- mode read_binary_file((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_file_as_bitmap(io.res(bitmap.bitmap), io.io, io.io).
:- mode read_binary_file_as_bitmap((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_file_as_bitmap(io.binary_input_stream, io.res(bitmap.bitmap), io.io, io.io).
:- mode read_binary_file_as_bitmap((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int16(io.maybe_incomplete_result(int16), io.io, io.io).
:- mode read_binary_int16((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int16(io.binary_input_stream, io.maybe_incomplete_result(int16), io.io, io.io).
:- mode read_binary_int16((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int16_be(io.maybe_incomplete_result(int16), io.io, io.io).
:- mode read_binary_int16_be((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int16_be(io.binary_input_stream, io.maybe_incomplete_result(int16), io.io, io.io).
:- mode read_binary_int16_be((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int16_le(io.maybe_incomplete_result(int16), io.io, io.io).
:- mode read_binary_int16_le((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int16_le(io.binary_input_stream, io.maybe_incomplete_result(int16), io.io, io.io).
:- mode read_binary_int16_le((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int32(io.maybe_incomplete_result(int32), io.io, io.io).
:- mode read_binary_int32((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int32(io.binary_input_stream, io.maybe_incomplete_result(int32), io.io, io.io).
:- mode read_binary_int32((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int32_be(io.maybe_incomplete_result(int32), io.io, io.io).
:- mode read_binary_int32_be((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int32_be(io.binary_input_stream, io.maybe_incomplete_result(int32), io.io, io.io).
:- mode read_binary_int32_be((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int32_le(io.maybe_incomplete_result(int32), io.io, io.io).
:- mode read_binary_int32_le((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int32_le(io.binary_input_stream, io.maybe_incomplete_result(int32), io.io, io.io).
:- mode read_binary_int32_le((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int64(io.maybe_incomplete_result(int64), io.io, io.io).
:- mode read_binary_int64((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int64(io.binary_input_stream, io.maybe_incomplete_result(int64), io.io, io.io).
:- mode read_binary_int64((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int64_be(io.maybe_incomplete_result(int64), io.io, io.io).
:- mode read_binary_int64_be((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int64_be(io.binary_input_stream, io.maybe_incomplete_result(int64), io.io, io.io).
:- mode read_binary_int64_be((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int64_le(io.maybe_incomplete_result(int64), io.io, io.io).
:- mode read_binary_int64_le((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int64_le(io.binary_input_stream, io.maybe_incomplete_result(int64), io.io, io.io).
:- mode read_binary_int64_le((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int8(io.result(int8), io.io, io.io).
:- mode read_binary_int8((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int8(io.binary_input_stream, io.result(int8), io.io, io.io).
:- mode read_binary_int8((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_int8_unboxed(io.binary_input_stream, io.result, int8, io.io, io.io).
:- mode read_binary_int8_unboxed((builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint16(io.maybe_incomplete_result(uint16), io.io, io.io).
:- mode read_binary_uint16((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint16(io.binary_input_stream, io.maybe_incomplete_result(uint16), io.io, io.io).
:- mode read_binary_uint16((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint16_be(io.maybe_incomplete_result(uint16), io.io, io.io).
:- mode read_binary_uint16_be((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint16_be(io.binary_input_stream, io.maybe_incomplete_result(uint16), io.io, io.io).
:- mode read_binary_uint16_be((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint16_le(io.maybe_incomplete_result(uint16), io.io, io.io).
:- mode read_binary_uint16_le((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint16_le(io.binary_input_stream, io.maybe_incomplete_result(uint16), io.io, io.io).
:- mode read_binary_uint16_le((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint32(io.maybe_incomplete_result(uint32), io.io, io.io).
:- mode read_binary_uint32((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint32(io.binary_input_stream, io.maybe_incomplete_result(uint32), io.io, io.io).
:- mode read_binary_uint32((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint32_be(io.maybe_incomplete_result(uint32), io.io, io.io).
:- mode read_binary_uint32_be((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint32_be(io.binary_input_stream, io.maybe_incomplete_result(uint32), io.io, io.io).
:- mode read_binary_uint32_be((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint32_le(io.maybe_incomplete_result(uint32), io.io, io.io).
:- mode read_binary_uint32_le((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint32_le(io.binary_input_stream, io.maybe_incomplete_result(uint32), io.io, io.io).
:- mode read_binary_uint32_le((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint64(io.maybe_incomplete_result(uint64), io.io, io.io).
:- mode read_binary_uint64((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint64(io.binary_input_stream, io.maybe_incomplete_result(uint64), io.io, io.io).
:- mode read_binary_uint64((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint64_be(io.maybe_incomplete_result(uint64), io.io, io.io).
:- mode read_binary_uint64_be((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint64_be(io.binary_input_stream, io.maybe_incomplete_result(uint64), io.io, io.io).
:- mode read_binary_uint64_be((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint64_le(io.maybe_incomplete_result(uint64), io.io, io.io).
:- mode read_binary_uint64_le((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint64_le(io.binary_input_stream, io.maybe_incomplete_result(uint64), io.io, io.io).
:- mode read_binary_uint64_le((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint8(io.result(uint8), io.io, io.io).
:- mode read_binary_uint8((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint8(io.binary_input_stream, io.result(uint8), io.io, io.io).
:- mode read_binary_uint8((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_uint8_unboxed(io.binary_input_stream, io.result, uint8, io.io, io.io).
:- mode read_binary_uint8_unboxed((builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_bitmap(bitmap.bitmap, bitmap.bitmap, int, io.res, io.io, io.io).
:- mode read_bitmap((bitmap.bitmap_di), (bitmap.bitmap_uo), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_bitmap(io.binary_input_stream, bitmap.bitmap, bitmap.bitmap, int, io.res, io.io, io.io).
:- mode read_bitmap((builtin.in), (bitmap.bitmap_di), (bitmap.bitmap_uo), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_bitmap(bitmap.byte_index, bitmap.num_bytes, bitmap.bitmap, bitmap.bitmap, bitmap.num_bytes, io.res, io.io, io.io).
:- mode read_bitmap((builtin.in), (builtin.in), (bitmap.bitmap_di), (bitmap.bitmap_uo), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_bitmap(io.binary_input_stream, bitmap.byte_index, bitmap.num_bytes, bitmap.bitmap, bitmap.bitmap, bitmap.num_bytes, io.res, io.io, io.io).
:- mode read_bitmap((builtin.in), (builtin.in), (builtin.in), (bitmap.bitmap_di), (bitmap.bitmap_uo), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_byte(io.result(int), io.io, io.io).
:- mode read_byte((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_byte(io.binary_input_stream, io.result(int), io.io, io.io).
:- mode read_byte((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_char(io.result(char.char), io.io, io.io).
:- mode read_char((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_char(io.text_input_stream, io.result(char.char), io.io, io.io).
:- mode read_char((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_char_unboxed(io.text_input_stream, io.result, char.char, io.io, io.io).
:- mode read_char_unboxed((builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file(io.maybe_partial_res(list.list(char.char)), io.io, io.io).
:- mode read_file((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file(io.text_input_stream, io.maybe_partial_res(list.list(char.char)), io.io, io.io).
:- mode read_file((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file_as_string(io.maybe_partial_res(string), io.io, io.io).
:- mode read_file_as_string((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file_as_string(io.text_input_stream, io.maybe_partial_res(string), io.io, io.io).
:- mode read_file_as_string((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file_as_string_and_num_code_units(io.maybe_partial_res_2(string, int), io.io, io.io).
:- mode read_file_as_string_and_num_code_units((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file_as_string_and_num_code_units(io.text_input_stream, io.maybe_partial_res_2(string, int), io.io, io.io).
:- mode read_file_as_string_and_num_code_units((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_from_string(string, string, int, io.read_result(T), io.posn, io.posn).
:- mode read_from_string((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- pred read_line(io.result(list.list(char.char)), io.io, io.io).
:- mode read_line((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_line(io.text_input_stream, io.result(list.list(char.char)), io.io, io.io).
:- mode read_line((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_line_as_string(io.result(string), io.io, io.io).
:- mode read_line_as_string((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_line_as_string(io.text_input_stream, io.result(string), io.io, io.io).
:- mode read_line_as_string((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_named_file_as_lines(string, io.res(list.list(string)), io.io, io.io).
:- mode read_named_file_as_lines((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_named_file_as_string(string, io.res(string), io.io, io.io).
:- mode read_named_file_as_string((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_symlink(string, io.res(string), io.io, io.io).
:- mode read_symlink((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_word(io.result(list.list(char.char)), io.io, io.io).
:- mode read_word((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_word(io.text_input_stream, io.result(list.list(char.char)), io.io, io.io).
:- mode read_word((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred remove_file(string, io.res, io.io, io.io).
:- mode remove_file((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred remove_file_recursively(string, io.res, io.io, io.io).
:- mode remove_file_recursively((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred rename_file(string, string, io.res, io.io, io.io).
:- mode rename_file((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred report_full_memory_stats(io.io, io.io).
:- mode report_full_memory_stats((builtin.di), (builtin.uo)) is det.
:- pred report_full_memory_stats(io.text_output_stream, io.io, io.io).
:- mode report_full_memory_stats((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred report_standard_stats(io.io, io.io).
:- mode report_standard_stats((builtin.di), (builtin.uo)) is det.
:- pred report_standard_stats(io.text_output_stream, io.io, io.io).
:- mode report_standard_stats((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred report_stats(string, io.io, io.io).
:- mode report_stats((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred report_stats(io.text_output_stream, string, io.io, io.io).
:- mode report_stats((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred report_tabling_statistics(io.io, io.io).
:- mode report_tabling_statistics((builtin.di), (builtin.uo)) is det.
:- pred report_tabling_statistics(io.text_output_stream, io.io, io.io).
:- mode report_tabling_statistics((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred seek_binary_input(io.binary_input_stream, io.whence, int, io.io, io.io).
:- mode seek_binary_input((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred seek_binary_input64(io.binary_input_stream, io.whence, int64, io.io, io.io).
:- mode seek_binary_input64((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred seek_binary_output(io.binary_output_stream, io.whence, int, io.io, io.io).
:- mode seek_binary_output((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred seek_binary_output64(io.binary_output_stream, io.whence, int64, io.io, io.io).
:- mode seek_binary_output64((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_binary_input_stream(io.binary_input_stream, io.binary_input_stream, io.io, io.io).
:- mode set_binary_input_stream((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_binary_output_stream(io.binary_output_stream, io.binary_output_stream, io.io, io.io).
:- mode set_binary_output_stream((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_environment_var(string, string, io.io, io.io).
:- mode set_environment_var((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_environment_var(string, string, io.res, io.io, io.io).
:- mode set_environment_var((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_exit_status(int, io.io, io.io).
:- mode set_exit_status((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_globals(univ.univ, io.io, io.io).
:- mode set_globals((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_input_stream(io.text_input_stream, io.text_input_stream, io.io, io.io).
:- mode set_input_stream((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_line_number(int, io.io, io.io).
:- mode set_line_number((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_line_number(io.text_input_stream, int, io.io, io.io).
:- mode set_line_number((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_op_table(ops.table, io.io, io.io).
:- mode set_op_table((builtin.di), (builtin.di), (builtin.uo)) is det.
:- pred set_output_line_number(int, io.io, io.io).
:- mode set_output_line_number((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_output_line_number(io.text_output_stream, int, io.io, io.io).
:- mode set_output_line_number((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_output_stream(io.text_output_stream, io.text_output_stream, io.io, io.io).
:- mode set_output_stream((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- func stderr_stream = io.text_output_stream.
:- pred stderr_stream(io.text_output_stream, io.io, io.io).
:- mode stderr_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred stdin_binary_stream(io.binary_input_stream, io.io, io.io).
:- mode stdin_binary_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- func stdin_stream = io.text_input_stream.
:- pred stdin_stream(io.text_input_stream, io.io, io.io).
:- mode stdin_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred stdout_binary_stream(io.binary_output_stream, io.io, io.io).
:- mode stdout_binary_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- func stdout_stream = io.text_output_stream.
:- pred stdout_stream(io.text_output_stream, io.io, io.io).
:- mode stdout_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred throw_on_output_error(io.system_error, io.io, io.io).
:- mode throw_on_output_error((builtin.in), (builtin.di), (builtin.uo)) is det.
:- semipure pred unsafe_get_io_state(io.io).
:- mode unsafe_get_io_state((builtin.uo)) is det.
:- impure pred unsafe_set_io_state(io.io).
:- mode unsafe_set_io_state((builtin.di)) is det.
:- pred update_globals(pred(univ.univ, univ.univ), io.io, io.io).
:- mode update_globals(builtin.in((pred((builtin.in), (builtin.out)) is det)), (builtin.di), (builtin.uo)) is det.
:- pred write(T, io.io, io.io).
:- mode write((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write(io.text_output_stream, T, io.io, io.io).
:- mode write((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write(io.text_output_stream, deconstruct.noncanon_handling, T, io.io, io.io).
:- mode write((builtin.in), builtin.in((deconstruct.do_not_allow)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode write((builtin.in), builtin.in((deconstruct.canonicalize)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode write((builtin.in), builtin.in((deconstruct.include_details_cc)), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- mode write((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_array(array.array(T), string, pred(T, io.io, io.io), io.io, io.io).
:- mode write_array((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- mode write_array((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_array(io.text_output_stream, array.array(T), string, pred(T, io.io, io.io), io.io, io.io).
:- mode write_array((builtin.in), (builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- mode write_array((builtin.in), (builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_binary(T, io.io, io.io).
:- mode write_binary((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary(io.binary_output_stream, T, io.io, io.io).
:- mode write_binary((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int16(int16, io.io, io.io).
:- mode write_binary_int16((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int16(io.binary_output_stream, int16, io.io, io.io).
:- mode write_binary_int16((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int16_be(int16, io.io, io.io).
:- mode write_binary_int16_be((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int16_be(io.binary_output_stream, int16, io.io, io.io).
:- mode write_binary_int16_be((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int16_le(int16, io.io, io.io).
:- mode write_binary_int16_le((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int16_le(io.binary_output_stream, int16, io.io, io.io).
:- mode write_binary_int16_le((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int32(int32, io.io, io.io).
:- mode write_binary_int32((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int32(io.binary_output_stream, int32, io.io, io.io).
:- mode write_binary_int32((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int32_be(int32, io.io, io.io).
:- mode write_binary_int32_be((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int32_be(io.binary_output_stream, int32, io.io, io.io).
:- mode write_binary_int32_be((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int32_le(int32, io.io, io.io).
:- mode write_binary_int32_le((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int32_le(io.binary_output_stream, int32, io.io, io.io).
:- mode write_binary_int32_le((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int64(int64, io.io, io.io).
:- mode write_binary_int64((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int64(io.binary_output_stream, int64, io.io, io.io).
:- mode write_binary_int64((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int64_be(int64, io.io, io.io).
:- mode write_binary_int64_be((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int64_be(io.binary_output_stream, int64, io.io, io.io).
:- mode write_binary_int64_be((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int64_le(int64, io.io, io.io).
:- mode write_binary_int64_le((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int64_le(io.binary_output_stream, int64, io.io, io.io).
:- mode write_binary_int64_le((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int8(int8, io.io, io.io).
:- mode write_binary_int8((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_int8(io.binary_output_stream, int8, io.io, io.io).
:- mode write_binary_int8((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint16(uint16, io.io, io.io).
:- mode write_binary_uint16((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint16(io.binary_output_stream, uint16, io.io, io.io).
:- mode write_binary_uint16((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint16_be(uint16, io.io, io.io).
:- mode write_binary_uint16_be((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint16_be(io.binary_output_stream, uint16, io.io, io.io).
:- mode write_binary_uint16_be((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint16_le(uint16, io.io, io.io).
:- mode write_binary_uint16_le((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint16_le(io.binary_output_stream, uint16, io.io, io.io).
:- mode write_binary_uint16_le((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint32(uint32, io.io, io.io).
:- mode write_binary_uint32((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint32(io.binary_output_stream, uint32, io.io, io.io).
:- mode write_binary_uint32((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint32_be(uint32, io.io, io.io).
:- mode write_binary_uint32_be((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint32_be(io.binary_output_stream, uint32, io.io, io.io).
:- mode write_binary_uint32_be((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint32_le(uint32, io.io, io.io).
:- mode write_binary_uint32_le((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint32_le(io.binary_output_stream, uint32, io.io, io.io).
:- mode write_binary_uint32_le((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint64(uint64, io.io, io.io).
:- mode write_binary_uint64((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint64(io.binary_output_stream, uint64, io.io, io.io).
:- mode write_binary_uint64((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint64_be(uint64, io.io, io.io).
:- mode write_binary_uint64_be((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint64_be(io.binary_output_stream, uint64, io.io, io.io).
:- mode write_binary_uint64_be((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint64_le(uint64, io.io, io.io).
:- mode write_binary_uint64_le((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint64_le(io.binary_output_stream, uint64, io.io, io.io).
:- mode write_binary_uint64_le((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint8(uint8, io.io, io.io).
:- mode write_binary_uint8((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_binary_uint8(io.binary_output_stream, uint8, io.io, io.io).
:- mode write_binary_uint8((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_bitmap(bitmap.bitmap, io.io, io.io).
:- mode write_bitmap((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_bitmap(io.binary_output_stream, bitmap.bitmap, io.io, io.io).
:- mode write_bitmap((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_bitmap(bitmap.bitmap, int, int, io.io, io.io).
:- mode write_bitmap((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_bitmap(io.binary_output_stream, bitmap.bitmap, int, int, io.io, io.io).
:- mode write_bitmap((builtin.in), (builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_byte(int, io.io, io.io).
:- mode write_byte((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_byte(io.binary_output_stream, int, io.io, io.io).
:- mode write_byte((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_cc(T, io.io, io.io).
:- mode write_cc((builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_cc(io.text_output_stream, T, io.io, io.io).
:- mode write_cc((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_char(char.char, io.io, io.io).
:- mode write_char((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_char(io.text_output_stream, char.char, io.io, io.io).
:- mode write_char((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_float(float, io.io, io.io).
:- mode write_float((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_float(io.text_output_stream, float, io.io, io.io).
:- mode write_float((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int(int, io.io, io.io).
:- mode write_int((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int(io.text_output_stream, int, io.io, io.io).
:- mode write_int((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int16(int16, io.io, io.io).
:- mode write_int16((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int16(io.text_output_stream, int16, io.io, io.io).
:- mode write_int16((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int32(int32, io.io, io.io).
:- mode write_int32((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int32(io.text_output_stream, int32, io.io, io.io).
:- mode write_int32((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int64(int64, io.io, io.io).
:- mode write_int64((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int64(io.text_output_stream, int64, io.io, io.io).
:- mode write_int64((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int8(int8, io.io, io.io).
:- mode write_int8((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_int8(io.text_output_stream, int8, io.io, io.io).
:- mode write_int8((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_line(T, io.io, io.io).
:- mode write_line((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_line(io.text_output_stream, T, io.io, io.io).
:- mode write_line((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_line(io.text_output_stream, deconstruct.noncanon_handling, T, io.io, io.io).
:- mode write_line((builtin.in), builtin.in((deconstruct.do_not_allow)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode write_line((builtin.in), builtin.in((deconstruct.canonicalize)), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode write_line((builtin.in), builtin.in((deconstruct.include_details_cc)), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- mode write_line((builtin.in), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_line_cc(T, io.io, io.io).
:- mode write_line_cc((builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_line_cc(io.text_output_stream, T, io.io, io.io).
:- mode write_line_cc((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_list(list.list(T), string, pred(T, io.io, io.io), io.io, io.io).
:- mode write_list((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- mode write_list((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_list(io.text_output_stream, list.list(T), string, pred(T, io.io, io.io), io.io, io.io).
:- mode write_list((builtin.in), (builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- mode write_list((builtin.in), (builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_many(list.list(string.poly_type), io.io, io.io).
:- mode write_many((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_many(io.text_output_stream, list.list(string.poly_type), io.io, io.io).
:- mode write_many((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_string(string, io.io, io.io).
:- mode write_string((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_string(io.text_output_stream, string, io.io, io.io).
:- mode write_string((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_strings(list.list(string), io.io, io.io).
:- mode write_strings((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_strings(io.text_output_stream, list.list(string), io.io, io.io).
:- mode write_strings((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint(uint, io.io, io.io).
:- mode write_uint((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint(io.text_output_stream, uint, io.io, io.io).
:- mode write_uint((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint16(uint16, io.io, io.io).
:- mode write_uint16((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint16(io.text_output_stream, uint16, io.io, io.io).
:- mode write_uint16((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint32(uint32, io.io, io.io).
:- mode write_uint32((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint32(io.text_output_stream, uint32, io.io, io.io).
:- mode write_uint32((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint64(uint64, io.io, io.io).
:- mode write_uint64((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint64(io.text_output_stream, uint64, io.io, io.io).
:- mode write_uint64((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint8(uint8, io.io, io.io).
:- mode write_uint8((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred write_uint8(io.text_output_stream, uint8, io.io, io.io).
:- mode write_uint8((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pragma obsolete(pred((io.call_system_return_signal)/4), [((io.call_system).call_system)/4]).
:- pragma obsolete(pred((io.call_system_return_signal)/4), [((io.call_system).call_system_return_signal)/4]).
:- pragma obsolete(pred((io.check_file_accessibility)/5), [((io.file).check_file_accessibility)/5]).
:- pragma obsolete(pred((io.file_modification_time)/4), [((io.file).file_modification_time)/4]).
:- pragma obsolete(pred((io.file_type)/5), [((io.file).file_type)/5]).
:- pragma obsolete(pred((io.get_environment_var)/4), [((io.environment).get_environment_var)/4]).
:- pragma obsolete(pred((io.get_environment_var_map)/3), [((io.environment).get_environment_var_map)/3]).
:- pragma obsolete(pred((io.get_globals)/3), []).
:- pragma obsolete(pred((io.get_temp_directory)/3), [((io.file).get_temp_directory)/3]).
:- pragma obsolete(pred((io.have_make_temp_directory)/0), [((io.file).have_make_temp_directory)/0]).
:- pragma obsolete(pred((io.have_set_environment_var)/0), [((io.environment).have_set_environment_var)/0]).
:- pragma obsolete(pred((io.have_symlinks)/0), [((io.file).have_symlinks)/0]).
:- pragma obsolete(pred((io.make_symlink)/5), [((io.file).make_symlink)/5]).
:- pragma obsolete(pred((io.make_temp_directory)/3), [((io.file).make_temp_directory)/3]).
:- pragma obsolete(pred((io.make_temp_directory)/6), [((io.file).make_temp_directory)/6]).
:- pragma obsolete(pred((io.make_temp_file)/3), [((io.file).make_temp_file)/3]).
:- pragma obsolete(pred((io.make_temp_file)/6), [((io.file).make_temp_file)/6]).
:- pragma obsolete(pred((io.read_bitmap)/6), [(bitmap.read_bitmap)/6]).
:- pragma obsolete(pred((io.read_bitmap)/7), [(bitmap.read_bitmap)/7]).
:- pragma obsolete(pred((io.read_bitmap)/8), [(bitmap.read_bitmap_range)/8]).
:- pragma obsolete(pred((io.read_bitmap)/9), [(bitmap.read_bitmap_range)/9]).
:- pragma obsolete(pred((io.read_symlink)/4), [((io.file).read_symlink)/4]).
:- pragma obsolete(pred((io.remove_file)/4), [((io.file).remove_file)/4]).
:- pragma obsolete(pred((io.remove_file_recursively)/4), [((io.file).remove_file_recursively)/4]).
:- pragma obsolete(pred((io.rename_file)/5), [((io.file).rename_file)/5]).
:- pragma obsolete(pred((io.report_full_memory_stats)/2), [(benchmarking.report_full_memory_stats)/2]).
:- pragma obsolete(pred((io.report_full_memory_stats)/3), [(benchmarking.report_full_memory_stats)/3]).
:- pragma obsolete(pred((io.report_standard_stats)/2), [(benchmarking.report_standard_stats)/2]).
:- pragma obsolete(pred((io.report_standard_stats)/3), [(benchmarking.report_standard_stats)/3]).
:- pragma obsolete(pred((io.report_stats)/3), [(benchmarking.report_stats)/3]).
:- pragma obsolete(pred((io.report_stats)/4), [(benchmarking.report_stats)/4]).
:- pragma obsolete(pred((io.report_tabling_statistics)/2), [(benchmarking.report_tabling_statistics)/2]).
:- pragma obsolete(pred((io.report_tabling_statistics)/3), [(benchmarking.report_tabling_statistics)/3]).
:- pragma obsolete(pred((io.set_environment_var)/4), [((io.environment).set_environment_var)/4]).
:- pragma obsolete(pred((io.set_environment_var)/5), [((io.environment).set_environment_var)/5]).
:- pragma obsolete(pred((io.set_globals)/3), []).
:- pragma obsolete(pred((io.update_globals)/3), []).
:- pragma obsolete(pred((io.write_bitmap)/3), [(bitmap.write_bitmap)/3]).
:- pragma obsolete(pred((io.write_bitmap)/4), [(bitmap.write_bitmap)/4]).
:- pragma obsolete(pred((io.write_bitmap)/5), [(bitmap.write_bitmap_range)/5]).
:- pragma obsolete(pred((io.write_bitmap)/6), [(bitmap.write_bitmap_range)/6]).
:- implementation.
:- import_module benchmarking.
:- import_module dir.
:- import_module exception.
:- import_module int.
:- import_module int16.
:- import_module int32.
:- import_module int64.
:- import_module int8.
:- import_module mercury_term_parser.
:- import_module require.
:- import_module term.
:- import_module term_conversion.
:- import_module type_desc.
:- import_module uint16.
:- import_module uint32.
:- import_module uint64.
:- import_module uint8.
:- import_module (io.call_system).
:- import_module (io.environment).
:- import_module (io.file).
:- import_module (stream.string_writer).
:- use_module rtti_implementation.
:- use_module table_builtin.
:- pragma foreign_import_module("C", string).
:- pragma foreign_import_module("C", time).
:- type binary_input_stream
    --->    binary_input_stream(io.stream).
:- type binary_output_stream
    --->    binary_output_stream(io.stream).
:- type buffer
    --->    buffer(array.array(char.char)).
:- pragma foreign_type(c, buffer, "char *", [can_pass_as_mercury_type]).
:- type byte_order
    --->    big_endian 
    ;       little_endian .
:- type chunk_inner_res(T)
    --->    ok(T)
    ;       error(T, io.error)
    ;       more(T).
:- type chunk_inner_res0
    --->    ok 
    ;       error(io.error)
    ;       more .
:- type error
    --->    io_error(string).
:- type file_id
    --->    file_id .
:- pragma foreign_type(c, file_id, "ML_File_Id")
    where
        comparison is (io.compare_file_id).
:- type input_stream
    --->    input_stream(io.stream).
:- type maybe_incomplete_result_code
    --->    mirc_ok 
    ;       mirc_eof 
    ;       mirc_incomplete 
    ;       mirc_error .
:- type output_stream
    --->    output_stream(io.stream).
:- type read_line_as_string_result
    --->    ok 
    ;       eof 
    ;       null_char 
    ;       error .
:- type result_code
    --->    result_code_ok 
    ;       result_code_eof 
    ;       result_code_error .
:- pragma foreign_type(c, state, "MR_Word", [can_pass_as_mercury_type])
    where
        equality is (io.io_state_equal),
        comparison is (io.io_state_compare).
:- pragma foreign_type(java, state, "java.lang.Object", [can_pass_as_mercury_type])
    where
        equality is (io.io_state_equal),
        comparison is (io.io_state_compare).
:- pragma foreign_type(csharp, state, "int", [can_pass_as_mercury_type])
    where
        equality is (io.io_state_equal),
        comparison is (io.io_state_compare).
:- type stream
    --->    stream(builtin.c_pointer).
:- pragma foreign_type(c, stream, "MercuryFilePtr", [can_pass_as_mercury_type]).
:- pragma foreign_type(java, stream, "io.MR_MercuryFileStruct").
:- pragma foreign_type(csharp, stream, "io.MR_MercuryFileStruct").
:- type stream_id == int.
:- inst uniq_buffer for io.buffer/0
    --->    buffer((array.uniq_array)).
:- mode (buffer_di) == builtin.di((io.uniq_buffer)).
:- mode (buffer_uo) == builtin.out((io.uniq_buffer)).
:- instance (stream.error(io.error)).
:- instance (stream.input(io.binary_input_stream, io.io)).
:- instance (stream.input(io.text_input_stream, io.io)).
:- instance (stream.line_oriented(io.text_input_stream, io.io)).
:- instance (stream.line_oriented(io.text_output_stream, io.io)).
:- instance (stream.output(io.binary_output_stream, io.io)).
:- instance (stream.output(io.text_output_stream, io.io)).
:- instance (stream.putback(io.binary_input_stream, int, io.io, io.error)).
:- instance (stream.putback(io.binary_input_stream, int8, io.io, io.error)).
:- instance (stream.putback(io.binary_input_stream, uint8, io.io, io.error)).
:- instance (stream.putback(io.text_input_stream, char.char, io.io, io.error)).
:- instance (stream.reader(io.binary_input_stream, int, io.io, io.error)).
:- instance (stream.reader(io.binary_input_stream, int8, io.io, io.error)).
:- instance (stream.reader(io.binary_input_stream, uint8, io.io, io.error)).
:- instance (stream.reader(io.text_input_stream, char.char, io.io, io.error)).
:- instance (stream.reader(io.text_input_stream, string.line, io.io, io.error)).
:- instance (stream.reader(io.text_input_stream, string.text_file, io.io, io.error)).
:- instance (stream.seekable(io.binary_input_stream, io.io)).
:- instance (stream.seekable(io.binary_output_stream, io.io)).
:- instance (stream.stream(io.binary_input_stream, io.io)).
:- instance (stream.stream(io.binary_output_stream, io.io)).
:- instance (stream.stream(io.text_input_stream, io.io)).
:- instance (stream.stream(io.text_output_stream, io.io)).
:- instance (stream.unboxed_reader(io.binary_input_stream, int8, io.io, io.error)).
:- instance (stream.unboxed_reader(io.binary_input_stream, uint8, io.io, io.error)).
:- instance (stream.unboxed_reader(io.text_input_stream, char.char, io.io, io.error)).
:- instance (stream.writer(io.binary_output_stream, bitmap.byte, io.io)).
:- instance (stream.writer(io.binary_output_stream, int8, io.io)).
:- instance (stream.writer(io.binary_output_stream, uint8, io.io)).
:- instance (stream.writer(io.text_output_stream, char.char, io.io)).
:- instance (stream.writer(io.text_output_stream, univ.univ, io.io)).
:- instance (stream.writer(io.text_output_stream, int, io.io)).
:- instance (stream.writer(io.text_output_stream, uint, io.io)).
:- instance (stream.writer(io.text_output_stream, int8, io.io)).
:- instance (stream.writer(io.text_output_stream, uint8, io.io)).
:- instance (stream.writer(io.text_output_stream, int16, io.io)).
:- instance (stream.writer(io.text_output_stream, uint16, io.io)).
:- instance (stream.writer(io.text_output_stream, int32, io.io)).
:- instance (stream.writer(io.text_output_stream, uint32, io.io)).
:- instance (stream.writer(io.text_output_stream, float, io.io)).
:- instance (stream.writer(io.text_output_stream, string, io.io)).
:- pred alloc_buffer(int, io.buffer).
:- mode alloc_buffer((builtin.in), (io.buffer_uo)) is det.
:- pred binary_input_stream_2(io.stream, io.io, io.io).
:- mode binary_input_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_input_stream_file_size(io.binary_input_stream, int64, io.io, io.io).
:- mode binary_input_stream_file_size((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_input_stream_foldl2_io_chunk(io.binary_input_stream, pred(int, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_chunk((builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_chunk((builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io_inner(int, io.binary_input_stream, pred(int, T, T, io.io, io.io), T, io.chunk_inner_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_inner((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_inner((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io_maybe_stop_chunk(io.binary_input_stream, pred(int, bool.bool, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_maybe_stop_chunk((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_maybe_stop_chunk((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io_maybe_stop_inner(int, io.binary_input_stream, pred(int, bool.bool, T, T, io.io, io.io), T, io.chunk_inner_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_maybe_stop_inner((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_maybe_stop_inner((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io_maybe_stop_plain(io.binary_input_stream, pred(int, bool.bool, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_maybe_stop_plain((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_maybe_stop_plain((builtin.in), ((pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl2_io_plain(io.binary_input_stream, pred(int, T, T, io.io, io.io), T, io.maybe_partial_res(T), io.io, io.io).
:- mode binary_input_stream_foldl2_io_plain((builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl2_io_plain((builtin.in), ((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl_io_chunk(io.binary_input_stream, pred(int, io.io, io.io), io.res, io.io, io.io).
:- mode binary_input_stream_foldl_io_chunk((builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl_io_chunk((builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl_io_inner(int, io.binary_input_stream, pred(int, io.io, io.io), io.chunk_inner_res0, io.io, io.io).
:- mode binary_input_stream_foldl_io_inner((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl_io_inner((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_input_stream_foldl_io_plain(io.binary_input_stream, pred(int, io.io, io.io), io.res, io.io, io.io).
:- mode binary_input_stream_foldl_io_plain((builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode binary_input_stream_foldl_io_plain((builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred binary_output_stream_2(io.stream, io.io, io.io).
:- mode binary_output_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred binary_stream_offset_2(io.stream, int64, io.system_error, io.io, io.io).
:- mode binary_stream_offset_2((builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred buffer_to_string(io.buffer, int, string).
:- mode buffer_to_string((io.buffer_di), (builtin.in), (builtin.uo)) is semidet.
:- pred call_pred_no_result(pred(io.io, io.io), {}, io.io, io.io).
:- mode call_pred_no_result(((pred((builtin.di), (builtin.uo)) is det) >> (pred((builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode call_pred_no_result(((pred((builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- func chunk_size = int.
:- pred close_stream(io.stream, io.system_error, io.io, io.io).
:- mode close_stream((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred compare_file_id(builtin.comparison_result, io.file_id, io.file_id).
:- mode compare_file_id((builtin.uo), (builtin.in), (builtin.in)) is det.
:- pred compare_file_id_2(int, io.file_id, io.file_id).
:- mode compare_file_id_2((builtin.out), (builtin.in), (builtin.in)) is det.
:- pred do_open_binary(string, string, int, io.stream, io.system_error, io.io, io.io).
:- mode do_open_binary((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_open_text(string, string, int, io.stream, io.system_error, io.io, io.io).
:- mode do_open_text((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_read_binary_uint16(io.stream, io.byte_order, io.maybe_incomplete_result_code, uint16, list.list(uint8), io.system_error, io.io, io.io).
:- mode do_read_binary_uint16((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_read_binary_uint32(io.stream, io.byte_order, io.maybe_incomplete_result_code, uint32, list.list(uint8), io.system_error, io.io, io.io).
:- mode do_read_binary_uint32((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_read_binary_uint64(io.stream, io.byte_order, io.maybe_incomplete_result_code, uint64, list.list(uint8), io.system_error, io.io, io.io).
:- mode do_read_binary_uint64((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_array(array.array(T), string, pred(T, io.io, io.io), int, int, io.io, io.io).
:- mode do_write_array((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- mode do_write_array((builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is cc_multi.
:- pred do_write_binary_uint16(io.stream, uint16, io.system_error, io.io, io.io).
:- mode do_write_binary_uint16((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint16_be(io.stream, uint16, io.system_error, io.io, io.io).
:- mode do_write_binary_uint16_be((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint16_le(io.stream, uint16, io.system_error, io.io, io.io).
:- mode do_write_binary_uint16_le((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint32(io.stream, uint32, io.system_error, io.io, io.io).
:- mode do_write_binary_uint32((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint32_be(io.stream, uint32, io.system_error, io.io, io.io).
:- mode do_write_binary_uint32_be((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint32_le(io.stream, uint32, io.system_error, io.io, io.io).
:- mode do_write_binary_uint32_le((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint64(io.stream, uint64, io.system_error, io.io, io.io).
:- mode do_write_binary_uint64((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint64_be(io.stream, uint64, io.system_error, io.io, io.io).
:- mode do_write_binary_uint64_be((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_binary_uint64_le(io.stream, uint64, io.system_error, io.io, io.io).
:- mode do_write_binary_uint64_le((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_byte(io.stream, int, io.system_error, io.io, io.io).
:- mode do_write_byte((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_char(io.stream, char.char, io.system_error, io.io, io.io).
:- mode do_write_char((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_float(io.stream, float, io.system_error, io.io, io.io).
:- mode do_write_float((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_int(io.stream, int, io.system_error, io.io, io.io).
:- mode do_write_int((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_int16(io.stream, int16, io.system_error, io.io, io.io).
:- mode do_write_int16((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_int32(io.stream, int32, io.system_error, io.io, io.io).
:- mode do_write_int32((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_int64(io.stream, int64, io.system_error, io.io, io.io).
:- mode do_write_int64((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_int8(io.stream, int8, io.system_error, io.io, io.io).
:- mode do_write_int8((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_string(io.stream, string, io.system_error, io.io, io.io).
:- mode do_write_string((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_uint(io.stream, uint, io.system_error, io.io, io.io).
:- mode do_write_uint((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_uint16(io.stream, uint16, io.system_error, io.io, io.io).
:- mode do_write_uint16((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_uint32(io.stream, uint32, io.system_error, io.io, io.io).
:- mode do_write_uint32((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_uint64(io.stream, uint64, io.system_error, io.io, io.io).
:- mode do_write_uint64((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred do_write_uint8(io.stream, uint8, io.system_error, io.io, io.io).
:- mode do_write_uint8((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred file_id_2(string, io.file_id, io.system_error, io.io, io.io).
:- mode file_id_2((builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred flush_binary_output_2(io.stream, io.system_error, io.io, io.io).
:- mode flush_binary_output_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred flush_output_2(io.stream, io.system_error, io.io, io.io).
:- mode flush_output_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred gc_init(type_desc.type_desc, type_desc.type_desc, io.io, io.io).
:- mode gc_init((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred get_line_number_2(io.stream, int, io.io, io.io).
:- mode get_line_number_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred get_output_line_number_2(io.stream, int, io.io, io.io).
:- mode get_output_line_number_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- func get_stream_id(io.stream) = io.stream_id.
:- pred init_current_streams(io.io, io.io).
:- mode init_current_streams((builtin.di), (builtin.uo)) is det.
:- pred init_std_streams(io.io, io.io).
:- mode init_std_streams((builtin.di), (builtin.uo)) is det.
:- pred input_stream_2(io.stream, io.io, io.io).
:- mode input_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred input_stream_file_size(io.input_stream, int, io.io, io.io).
:- mode input_stream_file_size((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred insert_std_stream_names(io.io, io.io).
:- mode insert_std_stream_names((builtin.di), (builtin.uo)) is det.
:- pred insert_stream_info(io.stream, io.stream_info, io.io, io.io).
:- mode insert_stream_info((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred io_state_compare(builtin.comparison_result, io.state, io.state).
:- mode io_state_compare((builtin.uo), (builtin.in), (builtin.in)) is det.
:- pred io_state_equal(io.state, io.state).
:- mode io_state_equal((builtin.in), (builtin.in)) is semidet.
:- pred is_success(io.system_error).
:- mode is_success((builtin.in)) is semidet.
:- pred lock_globals(io.io, io.io).
:- mode lock_globals((builtin.di), (builtin.uo)) is det.
:- pred lock_stream_db(io.io, io.io).
:- mode lock_stream_db((builtin.di), (builtin.uo)) is det.
:- pred make_win32_err_msg(io.system_error, string, string, io.io, io.io).
:- mode make_win32_err_msg((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred may_delete_stream_info(int, io.io, io.io).
:- mode may_delete_stream_info((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred maybe_delete_stream_info(io.stream, io.io, io.io).
:- mode maybe_delete_stream_info((builtin.in), (builtin.di), (builtin.uo)) is det.
:- func maybe_stream_info(io.stream_db, io.stream) = io.maybe_stream_info.
:- pred native_byte_order_is_big_endian is semidet.
:- func no_error = io.system_error.
:- pred output_stream_2(io.stream, io.io, io.io).
:- mode output_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred print_to_stream(io.stream, T, io.io, io.io).
:- mode print_to_stream((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred process_read_term(mercury_term_parser.read_term, int, io.read_result(T)).
:- mode process_read_term((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred putback_byte_2(io.stream, int, bool.bool, io.io, io.io).
:- mode putback_byte_2((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred putback_char_2(io.stream, char.char, bool.bool, io.io, io.io).
:- mode putback_char_2((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred putback_uint8_2(io.stream, uint8, bool.bool, io.io, io.io).
:- mode putback_uint8_2((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_file_2(io.binary_input_stream, list.list(int), io.result(list.list(int)), io.io, io.io).
:- mode read_binary_file_2((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_file_as_bitmap_from_stream(io.binary_input_stream, bitmap.num_bytes, io.res, list.list(bitmap.bitmap), list.list(bitmap.bitmap), io.io, io.io).
:- mode read_binary_file_as_bitmap_from_stream((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_binary_from_current_input_stream(io.result(T), io.io, io.io).
:- mode read_binary_from_current_input_stream((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_byte_val(io.input_stream, io.result_code, int, io.system_error, io.io, io.io).
:- mode read_byte_val((builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_byte_val_2(io.stream, io.result_code, int, io.system_error, io.io, io.io).
:- mode read_byte_val_2((builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_char_code(io.input_stream, io.result_code, char.char, io.system_error, io.io, io.io).
:- mode read_char_code((builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_char_code_2(io.stream, io.result_code, char.char, io.system_error, io.io, io.io).
:- mode read_char_code_2((builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file_2(io.input_stream, list.list(char.char), io.maybe_partial_res(list.list(char.char)), io.io, io.io).
:- mode read_file_2((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file_as_string_2(io.stream, string, int, io.system_error, bool.bool, io.io, io.io).
:- mode read_file_as_string_2((builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_file_as_string_loop(io.input_stream, io.buffer, io.buffer, int, int, int, int, io.system_error, io.io, io.io).
:- mode read_file_as_string_loop((builtin.in), (io.buffer_di), (io.buffer_uo), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_into_array(io.input_stream, array.array(char.char), array.array(char.char), int, int, int, io.system_error, io.io, io.io).
:- mode read_into_array((builtin.in), (array.array_di), (array.array_uo), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_into_buffer(io.stream, io.buffer, io.buffer, int, int, int, io.system_error, io.io, io.io).
:- mode read_into_buffer((builtin.in), (io.buffer_di), (io.buffer_uo), (builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_line_2(io.input_stream, io.result_code, list.list(char.char), io.system_error, io.io, io.io).
:- mode read_line_2((builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_line_as_string_2(io.stream, bool.bool, io.read_line_as_string_result, string, io.system_error, io.io, io.io).
:- mode read_line_as_string_2((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred read_word_2(io.input_stream, io.result(list.list(char.char)), io.io, io.io).
:- mode read_word_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred resize_buffer(int, int, io.buffer, io.buffer).
:- mode resize_buffer((builtin.in), (builtin.in), (io.buffer_di), (io.buffer_uo)) is det.
:- pred restore_input_stream(pred(T, io.io, io.io), io.input_stream, io.res, io.io, io.io).
:- mode restore_input_stream(((pred((builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode restore_input_stream(((pred((builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred restore_output_stream(pred(io.io, io.io), io.output_stream, io.res, io.io, io.io).
:- mode restore_output_stream(((pred((builtin.di), (builtin.uo)) is det) >> (pred((builtin.di), (builtin.uo)) is det)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode restore_output_stream(((pred((builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.di), (builtin.uo)) is cc_multi)), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- func result0_to_stream_result0(io.result) = stream.result(io.error).
:- func result1_to_stream_result1(io.result(T)) = stream.result(T, io.error).
:- pred seek_binary_2(io.stream, int, int64, io.system_error, io.io, io.io).
:- mode seek_binary_2((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_binary_input_stream_2(io.stream, io.stream, io.io, io.io).
:- mode set_binary_input_stream_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_binary_output_stream_2(io.stream, io.stream, io.io, io.io).
:- mode set_binary_output_stream_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_input_stream_2(io.stream, io.stream, io.io, io.io).
:- mode set_input_stream_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_line_number_2(io.stream, int, io.io, io.io).
:- mode set_line_number_2((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_output_line_number_2(io.stream, int, io.io, io.io).
:- mode set_output_line_number_2((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred set_output_stream_2(io.stream, io.stream, io.io, io.io).
:- mode set_output_stream_2((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred set_stream_db(io.stream_db, io.io, io.io).
:- mode set_stream_db((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred should_reduce_stack_usage(bool.bool).
:- mode should_reduce_stack_usage((builtin.out)) is det.
:- func source_name(io.stream_source) = string.
:- func stderr_stream_2 = io.stream.
:- pred stderr_stream_2(io.stream, io.io, io.io).
:- mode stderr_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred stdin_binary_stream_2(io.stream, io.io, io.io).
:- mode stdin_binary_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- func stdin_stream_2 = io.stream.
:- pred stdin_stream_2(io.stream, io.io, io.io).
:- mode stdin_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred stdout_binary_stream_2(io.stream, io.io, io.io).
:- mode stdout_binary_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- func stdout_stream_2 = io.stream.
:- pred stdout_stream_2(io.stream, io.io, io.io).
:- mode stdout_stream_2((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred stream_file_size(io.stream, int64, io.io, io.io).
:- mode stream_file_size((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred stream_info(io.stream, maybe.maybe(io.stream_info), io.io, io.io).
:- mode stream_info((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred stream_name(io.stream, string, io.io, io.io).
:- mode stream_name((builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- func stream_whence_to_io_whence(stream.whence) = io.whence.
:- pred throw_on_close_error(io.system_error, io.io, io.io).
:- mode throw_on_close_error((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred throw_on_error(io.system_error, string, io.io, io.io).
:- mode throw_on_error((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- impure pred unlock_globals is det.
:- pred unlock_globals(io.io, io.io).
:- mode unlock_globals((builtin.di), (builtin.uo)) is det.
:- pred unlock_stream_db(io.io, io.io).
:- mode unlock_stream_db((builtin.di), (builtin.uo)) is det.
:- pred unsafe_get_globals(univ.univ, io.io, io.io).
:- mode unsafe_get_globals((builtin.out), (builtin.di), (builtin.uo)) is det.
:- pred unsafe_set_globals(univ.univ, io.io, io.io).
:- mode unsafe_set_globals((builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred whence_to_int(io.whence, int).
:- mode whence_to_int((builtin.in), (builtin.out)) is det.
:- pred with_input_stream(io.input_stream, pred(T, io.io, io.io), T, io.io, io.io).
:- mode with_input_stream((builtin.in), ((pred((builtin.out), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.out), (builtin.di), (builtin.uo)) is det)), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode with_input_stream((builtin.in), ((pred((builtin.out), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.out), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.out), (builtin.di), (builtin.uo)) is cc_multi.
:- pred with_output_stream(io.output_stream, pred(io.io, io.io), io.io, io.io).
:- mode with_output_stream((builtin.in), ((pred((builtin.di), (builtin.uo)) is det) >> (pred((builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- mode with_output_stream((builtin.in), ((pred((builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.di), (builtin.uo)) is cc_multi)), (builtin.di), (builtin.uo)) is cc_multi.
:- pred write_list_lag(T, list.list(T), string, pred(T, io.io, io.io), io.io, io.io).
:- mode write_list_lag((builtin.in), (builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is det) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is det)), (builtin.di), (builtin.uo)) is det.
:- mode write_list_lag((builtin.in), (builtin.in), (builtin.in), ((pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi) >> (pred((builtin.in), (builtin.di), (builtin.uo)) is cc_multi)), (builtin.di), (builtin.uo)) is cc_multi.
