:- module pretty_printer.
:- interface.
:- use_module list.
:- use_module type_desc.
:- use_module univ.
:- type doc
    --->    str(string)
    ;       nl 
    ;       hard_nl 
    ;       docs(pretty_printer.docs)
    ;       format_univ(univ.univ)
    ;       format_list(list.list(univ.univ), pretty_printer.doc)
    ;       format_term(string, list.list(univ.univ))
    ;       format_susp(((func) = pretty_printer.doc))
    ;       pp_internal(pretty_printer.pp_internal).
:- type docs == list.list(pretty_printer.doc).
:- type formatter == (func(univ.univ, list.list(type_desc.type_desc)) = pretty_printer.doc).
:- type formatter_map.
:- type func_symbol_limit
    --->    linear(int)
    ;       triangular(int).
:- type pp_internal.
:- type pp_params
    --->    pp_params((pretty_printer.pp_line_width) :: int, (pretty_printer.pp_max_lines) :: int, (pretty_printer.pp_limit) :: pretty_printer.func_symbol_limit).
:- type_representation(docs, is_eqv_to(list.list(pretty_printer.doc))).
:- type_representation(formatter, is_eqv_to((func(univ.univ, list.list(type_desc.type_desc)) = pretty_printer.doc))).
:- type_representation(formatter_map, is_eqv_to(map.map(string, map.map(string, map.map(int, pretty_printer.formatter))))).
:- type_representation(pp_params, is_word_aligned_ptr).
:- implementation.
:- type formatter_map == map.map(string, map.map(string, map.map(int, pretty_printer.formatter))).
