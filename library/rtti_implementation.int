:- module rtti_implementation.
:- interface.
:- use_module deconstruct.
:- use_module list.
:- use_module univ.
:- pragma foreign_import_module("C#", rtti_implementation).
:- pragma foreign_import_module("Java", rtti_implementation).
:- type pseudo_type_info.
:- type type_ctor_info.
:- type type_info.
:- pred compare_type_infos(builtin.comparison_result, rtti_implementation.type_info, rtti_implementation.type_info).
:- mode compare_type_infos((builtin.out), (builtin.in), (builtin.in)) is det.
:- func construct(rtti_implementation.type_info, int, list.list(univ.univ)) = univ.univ is semidet.
:- func construct_tuple_2(list.list(univ.univ), list.list(rtti_implementation.type_info), int) = univ.univ.
:- pred deconstruct(T, deconstruct.noncanon_handling, string, int, int, list.list(univ.univ)).
:- mode deconstruct((builtin.in), builtin.in((deconstruct.do_not_allow)), (builtin.out), (builtin.out), (builtin.out), (builtin.out)) is det.
:- mode deconstruct((builtin.in), builtin.in((deconstruct.canonicalize)), (builtin.out), (builtin.out), (builtin.out), (builtin.out)) is det.
:- mode deconstruct((builtin.in), builtin.in((deconstruct.include_details_cc)), (builtin.out), (builtin.out), (builtin.out), (builtin.out)) is cc_multi.
:- mode deconstruct((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out)) is cc_multi.
:- pred functor_number_cc(T, int, int).
:- mode functor_number_cc((builtin.in), (builtin.out), (builtin.out)) is semidet.
:- pred generic_compare(builtin.comparison_result, T, T).
:- mode generic_compare((builtin.out), (builtin.in), (builtin.in)) is det.
:- pred generic_unify(T, T).
:- mode generic_unify((builtin.in), (builtin.in)) is semidet.
:- func get_type_ctor_info(rtti_implementation.type_info) = rtti_implementation.type_ctor_info.
:- func get_type_info(T) = rtti_implementation.type_info.
:- mode get_type_info((builtin.unused)) = (builtin.out) is det.
:- pred is_exist_pseudo_type_info(rtti_implementation.pseudo_type_info, int).
:- mode is_exist_pseudo_type_info((builtin.in), (builtin.out)) is semidet.
:- pred is_univ_pseudo_type_info(rtti_implementation.pseudo_type_info, int).
:- mode is_univ_pseudo_type_info((builtin.in), (builtin.out)) is semidet.
:- pred pseudo_type_ctor_and_args(rtti_implementation.pseudo_type_info, rtti_implementation.type_ctor_info, list.list(rtti_implementation.pseudo_type_info)).
:- mode pseudo_type_ctor_and_args((builtin.in), (builtin.out), (builtin.out)) is semidet.
:- pred type_ctor_and_args(rtti_implementation.type_info, rtti_implementation.type_ctor_info, list.list(rtti_implementation.type_info)).
:- mode type_ctor_and_args((builtin.in), (builtin.out), (builtin.out)) is det.
:- pred type_ctor_name_and_arity(rtti_implementation.type_ctor_info, string, string, int).
:- mode type_ctor_name_and_arity((builtin.in), (builtin.out), (builtin.out), (builtin.out)) is det.
:- pred type_info_get_functor(rtti_implementation.type_info, int, string, int, list.list(rtti_implementation.pseudo_type_info)).
:- mode type_info_get_functor((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out)) is semidet.
:- pred type_info_get_functor_lex(rtti_implementation.type_info, int, int).
:- mode type_info_get_functor_lex((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred type_info_get_functor_ordinal(rtti_implementation.type_info, int, int).
:- mode type_info_get_functor_ordinal((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred type_info_get_functor_with_names(rtti_implementation.type_info, int, string, int, list.list(rtti_implementation.pseudo_type_info), list.list(string)).
:- mode type_info_get_functor_with_names((builtin.in), (builtin.in), (builtin.out), (builtin.out), (builtin.out), (builtin.out)) is semidet.
:- pred type_info_num_functors(rtti_implementation.type_info, int).
:- mode type_info_num_functors((builtin.in), (builtin.out)) is semidet.
:- pred univ_named_arg(T, deconstruct.noncanon_handling, string, univ.univ).
:- mode univ_named_arg((builtin.in), builtin.in((deconstruct.do_not_allow)), (builtin.in), (builtin.out)) is semidet.
:- mode univ_named_arg((builtin.in), builtin.in((deconstruct.canonicalize)), (builtin.in), (builtin.out)) is semidet.
:- mode univ_named_arg((builtin.in), builtin.in((deconstruct.include_details_cc)), (builtin.in), (builtin.out)) is semidet.
:- implementation.
:- type pseudo_type_info
    --->    pseudo_type_info(int).
:- pragma foreign_type(java, pseudo_type_info, "jmercury.runtime.PseudoTypeInfo").
:- pragma foreign_type(csharp, pseudo_type_info, "runtime.PseudoTypeInfo").
:- type type_ctor_info
    --->    type_ctor_info(builtin.c_pointer).
:- pragma foreign_type(java, type_ctor_info, "jmercury.runtime.TypeCtorInfo_Struct").
:- pragma foreign_type(csharp, type_ctor_info, "runtime.TypeCtorInfo_Struct").
:- type type_info
    --->    type_info(builtin.c_pointer).
:- pragma foreign_type(java, type_info, "jmercury.runtime.TypeInfo_Struct").
:- pragma foreign_type(csharp, type_info, "runtime.TypeInfo_Struct").
:- type unify_or_compare_pred
    --->    unify_or_compare_pred .
:- pragma foreign_type(java, unify_or_compare_pred, "jmercury.runtime.MethodPtr").
:- pragma foreign_type(csharp, unify_or_compare_pred, "object").
