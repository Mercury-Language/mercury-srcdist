:- module pretty_printer.
:- interface.
:- use_module array.
:- use_module char.
:- use_module deconstruct.
:- use_module io.
:- use_module list.
:- use_module one_or_more.
:- use_module stream.
:- use_module string.
:- use_module tree234.
:- use_module type_desc.
:- use_module univ.
:- use_module version_array.
:- use_module string.builder.
:- type doc
    --->    str(string)
    ;       nl 
    ;       hard_nl 
    ;       docs(list.list(pretty_printer.doc))
    ;       format_univ(univ.univ)
    ;       format_list(list.list(univ.univ), pretty_printer.doc)
    ;       format_term(string, list.list(univ.univ))
    ;       format_susp(((func) = pretty_printer.doc))
    ;       pp_internal(pretty_printer.pp_internal).
:- type docs == list.list(pretty_printer.doc).
:- type formatter == (func(univ.univ, list.list(type_desc.type_desc)) = pretty_printer.doc).
:- type formatter_map.
:- type formatter_map_entry
    --->    formatter_map_entry(string, string, int).
:- type func_symbol_limit
    --->    linear(int)
    ;       triangular(int).
:- type pp_internal.
:- type pp_params
    --->    pp_params(pretty_printer.pp_line_width :: int, pretty_printer.pp_max_lines :: int, pretty_printer.pp_limit :: pretty_printer.func_symbol_limit).
:- func array_to_doc(array.array(T)) = pretty_printer.doc.
:- func char_to_doc(char.char) = pretty_printer.doc.
:- func float_to_doc(float) = pretty_printer.doc.
:- func format(T) = pretty_printer.doc.
:- func format_arg(pretty_printer.doc) = pretty_printer.doc.
:- pred get_default_formatter_map(pretty_printer.formatter_map, io.io, io.io).
:- mode get_default_formatter_map(builtin.out, builtin.di, builtin.uo) is det.
:- pred get_default_params(pretty_printer.pp_params, io.io, io.io).
:- mode get_default_params(builtin.out, builtin.di, builtin.uo) is det.
:- func get_formatter_map_entry_types(pretty_printer.formatter_map) = list.list(pretty_printer.formatter_map_entry).
:- func group(list.list(pretty_printer.doc)) = pretty_printer.doc.
:- func indent(list.list(pretty_printer.doc)) = pretty_printer.doc.
:- func indent(string, list.list(pretty_printer.doc)) = pretty_printer.doc.
:- func int16_to_doc(int16) = pretty_printer.doc.
:- func int32_to_doc(int32) = pretty_printer.doc.
:- func int64_to_doc(int64) = pretty_printer.doc.
:- func int8_to_doc(int8) = pretty_printer.doc.
:- func int_to_doc(int) = pretty_printer.doc.
:- func list_to_doc(list.list(T)) = pretty_printer.doc.
:- func new_formatter_map = pretty_printer.formatter_map.
:- func one_or_more_to_doc(one_or_more.one_or_more(T)) = pretty_printer.doc.
:- pred put_doc(Stream, deconstruct.noncanon_handling, pretty_printer.formatter_map, pretty_printer.pp_params, pretty_printer.doc, State, State) <= (stream.writer(Stream, string, State)).
:- mode put_doc(builtin.in, builtin.in(deconstruct.canonicalize), builtin.in, builtin.in, builtin.in, builtin.di, builtin.uo) is det.
:- mode put_doc(builtin.in, builtin.in(deconstruct.include_details_cc), builtin.in, builtin.in, builtin.in, builtin.di, builtin.uo) is cc_multi.
:- pred set_default_formatter(string, string, int, pretty_printer.formatter, io.io, io.io).
:- mode set_default_formatter(builtin.in, builtin.in, builtin.in, builtin.in, builtin.di, builtin.uo) is det.
:- pred set_default_formatter_map(pretty_printer.formatter_map, io.io, io.io).
:- mode set_default_formatter_map(builtin.in, builtin.di, builtin.uo) is det.
:- pred set_default_params(pretty_printer.pp_params, io.io, io.io).
:- mode set_default_params(builtin.in, builtin.di, builtin.uo) is det.
:- pred set_formatter(string, string, int, pretty_printer.formatter, pretty_printer.formatter_map, pretty_printer.formatter_map).
:- mode set_formatter(builtin.in, builtin.in, builtin.in, builtin.in, builtin.in, builtin.out) is det.
:- func string_to_doc(string) = pretty_printer.doc.
:- func tree234_to_doc(tree234.tree234(K, V)) = pretty_printer.doc.
:- func uint16_to_doc(uint16) = pretty_printer.doc.
:- func uint32_to_doc(uint32) = pretty_printer.doc.
:- func uint64_to_doc(uint64) = pretty_printer.doc.
:- func uint8_to_doc(uint8) = pretty_printer.doc.
:- func uint_to_doc(uint) = pretty_printer.doc.
:- func version_array_to_doc(version_array.version_array(T)) = pretty_printer.doc.
:- pred write_doc(pretty_printer.doc, io.io, io.io).
:- mode write_doc(builtin.in, builtin.di, builtin.uo) is det.
:- pred write_doc(io.text_output_stream, pretty_printer.doc, io.io, io.io).
:- mode write_doc(builtin.in, builtin.in, builtin.di, builtin.uo) is det.
:- pred write_doc_formatted(T, io.io, io.io).
:- mode write_doc_formatted(builtin.in, builtin.di, builtin.uo) is det.
:- pred write_doc_formatted(io.text_output_stream, T, io.io, io.io).
:- mode write_doc_formatted(builtin.in, builtin.in, builtin.di, builtin.uo) is det.
:- pragma type_spec_constrained_preds([    stream.writer(Stream, string, State)
], apply_to_superclasses, [
    subst([Stream = io.text_output_stream, State = io.state]),
    subst([Stream = string.builder.handle, State = string.builder.state])
]).
:- implementation.
:- use_module map.
:- type formatter_map == map.map(string, map.map(string, map.map(int, pretty_printer.formatter))).
