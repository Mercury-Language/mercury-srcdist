:- module mercury_term_lexer.
:- use_module builtin.
:- use_module char.
:- use_module int.
:- use_module integer.
:- use_module io.
:- use_module list.
:- use_module private_builtin.
:- use_module require.
:- use_module string.
:- use_module string.format.
:- use_module string.parse_util.

:- type get_token_action
    --->    action_whitespace 
    ;       action_alpha_lower 
    ;       action_alpha_upper_uscore 
    ;       action_zero 
    ;       action_nonzero_digit 
    ;       action_special_token 
    ;       action_dot 
    ;       action_percent 
    ;       action_quote 
    ;       action_slash 
    ;       action_hash 
    ;       action_backquote 
    ;       action_dollar 
    ;       action_graphic_token .
:- type last_digit_is_underscore
    --->    last_digit_is_underscore 
    ;       last_digit_is_not_underscore .
:- type maybe_have_valid_token
    --->    maybe_have_valid_token(int).
:- type scanned_past_whitespace
    --->    past_ws 
    ;       not_past_ws .
:- type string_token_context == int.
:- type unicode_char_result
    --->    unicode_char(character)
    ;       unicode_nonchar(mercury_term_lexer.token).
:- type unicode_decode_error
    --->    unicode_non_hex_digit(character)
    ;       unicode_hex_seq_incomplete(int, int)
    ;       unicode_char_null 
    ;       unicode_char_not_in_range(int)
    ;       unicode_char_is_surrogate(int).

:- pred mercury_term_lexer.execute_get_token_action(io.text_input_stream, character, mercury_term_lexer.get_token_action, mercury_term_lexer.scanned_past_whitespace, mercury_term_lexer.token, int, io.state, io.state).
:- mode execute_get_token_action(builtin.in, builtin.in, builtin.in, builtin.in, builtin.out, builtin.out, builtin.di, builtin.uo) is det.
:- pred mercury_term_lexer.get_context(io.text_input_stream, int, io.state, io.state).
:- mode get_context(builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- pred mercury_term_lexer.get_token(io.text_input_stream, mercury_term_lexer.scanned_past_whitespace, mercury_term_lexer.token, int, io.state, io.state).
:- mode get_token(builtin.in, builtin.in, builtin.out, builtin.out, builtin.di, builtin.uo) is det.
:- pragma inline(pred(mercury_term_lexer.get_token/6)).
:- pred mercury_term_lexer.get_token_list_loop(io.text_input_stream, mercury_term_lexer.token, int, mercury_term_lexer.token_list, io.state, io.state).
:- mode get_token_list_loop(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo) is det.
:- pred mercury_term_lexer.lookup_token_action(character, mercury_term_lexer.get_token_action).
:- mode lookup_token_action(builtin.in, builtin.out) is semidet.
:- pragma inline(pred(mercury_term_lexer.lookup_token_action/2)).

mercury_term_lexer.get_context(V_5, V_6, V_8, V_9) :-
    io.get_line_number(V_5, V_6, V_8, V_9).

:- pragma inline(pred(mercury_term_lexer.get_token/6)).
mercury_term_lexer.get_token(V_7, V_8, V_9, V_10, V_16, V_17) :-
    io.read_char_unboxed(V_7, V_12, V_13, V_16, V_18),
    ( % disjunction
      V_12 = io.error(V_14) : io.result,
      mercury_term_lexer.get_context(V_7, V_10, V_18, V_17),
      V_9 = mercury_term_lexer.io_error(V_14) : mercury_term_lexer.token
    ;
      V_12 = io.eof : io.result,
      mercury_term_lexer.get_context(V_7, V_10, V_18, V_17),
      V_9 = mercury_term_lexer.eof : mercury_term_lexer.token
    ;
      V_12 = io.ok : io.result,
      ( if
        mercury_term_lexer.lookup_token_action(V_13, V_15)
      then
        mercury_term_lexer.execute_get_token_action(V_7, V_13, V_15, V_8, V_9, V_10, V_18, V_17)
      else
        mercury_term_lexer.get_context(V_7, V_10, V_18, V_17),
        V_9 = mercury_term_lexer.junk(V_13) : mercury_term_lexer.token
      )
    ).

mercury_term_lexer.get_token_list(V_4, V_7, V_8) :-
    io.input_stream(V_6, V_7, V_9),
    mercury_term_lexer.get_token_list(V_6, V_4, V_9, V_8).

mercury_term_lexer.get_token_list(V_5, V_6, V_10, V_11) :-
    V_12 = mercury_term_lexer.not_past_ws : mercury_term_lexer.scanned_past_whitespace,
    mercury_term_lexer.get_token(V_5, V_12, V_8, V_9, V_10, V_13),
    mercury_term_lexer.get_token_list_loop(V_5, V_8, V_9, V_6, V_13, V_11).

:- pragma inline(pred(mercury_term_lexer.lookup_token_action/2)).
mercury_term_lexer.lookup_token_action(V_3, V_4) :-
    ( % disjunction
      ( % disjunction
        V_3 = (' ') : character
      ;
        V_3 = ('\t') : character
      ;
        V_3 = ('\n') : character
      ;
        V_3 = ('\r') : character
      ;
        V_3 = ('\f') : character
      ;
        V_3 = ('\v') : character
      ),
      V_4 = mercury_term_lexer.action_whitespace : mercury_term_lexer.get_token_action
    ;
      ( % disjunction
        V_3 = ('a') : character
      ;
        V_3 = ('b') : character
      ;
        V_3 = ('c') : character
      ;
        V_3 = ('d') : character
      ;
        V_3 = ('e') : character
      ;
        V_3 = ('f') : character
      ;
        V_3 = ('g') : character
      ;
        V_3 = ('h') : character
      ;
        V_3 = ('i') : character
      ;
        V_3 = ('j') : character
      ;
        V_3 = ('k') : character
      ;
        V_3 = ('l') : character
      ;
        V_3 = ('m') : character
      ;
        V_3 = ('n') : character
      ;
        V_3 = ('o') : character
      ;
        V_3 = ('p') : character
      ;
        V_3 = ('q') : character
      ;
        V_3 = ('r') : character
      ;
        V_3 = ('s') : character
      ;
        V_3 = ('t') : character
      ;
        V_3 = ('u') : character
      ;
        V_3 = ('v') : character
      ;
        V_3 = ('w') : character
      ;
        V_3 = ('x') : character
      ;
        V_3 = ('y') : character
      ;
        V_3 = ('z') : character
      ),
      V_4 = mercury_term_lexer.action_alpha_lower : mercury_term_lexer.get_token_action
    ;
      ( % disjunction
        V_3 = ('_') : character
      ;
        V_3 = ('A') : character
      ;
        V_3 = ('B') : character
      ;
        V_3 = ('C') : character
      ;
        V_3 = ('D') : character
      ;
        V_3 = ('E') : character
      ;
        V_3 = ('F') : character
      ;
        V_3 = ('G') : character
      ;
        V_3 = ('H') : character
      ;
        V_3 = ('I') : character
      ;
        V_3 = ('J') : character
      ;
        V_3 = ('K') : character
      ;
        V_3 = ('L') : character
      ;
        V_3 = ('M') : character
      ;
        V_3 = ('N') : character
      ;
        V_3 = ('O') : character
      ;
        V_3 = ('P') : character
      ;
        V_3 = ('Q') : character
      ;
        V_3 = ('R') : character
      ;
        V_3 = ('S') : character
      ;
        V_3 = ('T') : character
      ;
        V_3 = ('U') : character
      ;
        V_3 = ('V') : character
      ;
        V_3 = ('W') : character
      ;
        V_3 = ('X') : character
      ;
        V_3 = ('Y') : character
      ;
        V_3 = ('Z') : character
      ),
      V_4 = mercury_term_lexer.action_alpha_upper_uscore : mercury_term_lexer.get_token_action
    ;
      V_3 = ('0') : character,
      V_4 = mercury_term_lexer.action_zero : mercury_term_lexer.get_token_action
    ;
      ( % disjunction
        V_3 = ('1') : character
      ;
        V_3 = ('2') : character
      ;
        V_3 = ('3') : character
      ;
        V_3 = ('4') : character
      ;
        V_3 = ('5') : character
      ;
        V_3 = ('6') : character
      ;
        V_3 = ('7') : character
      ;
        V_3 = ('8') : character
      ;
        V_3 = ('9') : character
      ),
      V_4 = mercury_term_lexer.action_nonzero_digit : mercury_term_lexer.get_token_action
    ;
      ( % disjunction
        V_3 = ('(') : character
      ;
        V_3 = (')') : character
      ;
        V_3 = ('[') : character
      ;
        V_3 = (']') : character
      ;
        V_3 = ('{') : character
      ;
        V_3 = ('}') : character
      ;
        V_3 = ('|') : character
      ;
        V_3 = (',') : character
      ;
        V_3 = (';') : character
      ),
      V_4 = mercury_term_lexer.action_special_token : mercury_term_lexer.get_token_action
    ;
      V_3 = ('.') : character,
      V_4 = mercury_term_lexer.action_dot : mercury_term_lexer.get_token_action
    ;
      V_3 = ('%') : character,
      V_4 = mercury_term_lexer.action_percent : mercury_term_lexer.get_token_action
    ;
      ( % disjunction
        V_3 = ('\"') : character
      ;
        V_3 = ('\'') : character
      ),
      V_4 = mercury_term_lexer.action_quote : mercury_term_lexer.get_token_action
    ;
      V_3 = ('/') : character,
      V_4 = mercury_term_lexer.action_slash : mercury_term_lexer.get_token_action
    ;
      V_3 = ('#') : character,
      V_4 = mercury_term_lexer.action_hash : mercury_term_lexer.get_token_action
    ;
      V_3 = ('`') : character,
      V_4 = mercury_term_lexer.action_backquote : mercury_term_lexer.get_token_action
    ;
      V_3 = ('$') : character,
      V_4 = mercury_term_lexer.action_dollar : mercury_term_lexer.get_token_action
    ;
      ( % disjunction
        V_3 = ('!') : character
      ;
        V_3 = ('&') : character
      ;
        V_3 = ('*') : character
      ;
        V_3 = ('+') : character
      ;
        V_3 = ('-') : character
      ;
        V_3 = (':') : character
      ;
        V_3 = ('<') : character
      ;
        V_3 = ('=') : character
      ;
        V_3 = ('>') : character
      ;
        V_3 = ('?') : character
      ;
        V_3 = ('@') : character
      ;
        V_3 = ('^') : character
      ;
        V_3 = ('~') : character
      ;
        V_3 = ('\\') : character
      ),
      V_4 = mercury_term_lexer.action_graphic_token : mercury_term_lexer.get_token_action
    ).

mercury_term_lexer.string_get_token_list(V_5, V_6, V_9, V_10) :-
    string.length(V_5, V_8),
    mercury_term_lexer.string_get_token_list_max(V_5, V_8, V_6, V_9, V_10).

:- pragma termination_info(mercury_term_lexer.execute_get_token_action(builtin.in, builtin.in, builtin.in, builtin.in, builtin.out, builtin.out, builtin.di, builtin.uo), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.get_context(builtin.in, builtin.out, builtin.di, builtin.uo), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.get_token(builtin.in, builtin.in, builtin.out, builtin.out, builtin.di, builtin.uo), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.get_token_list(builtin.out, builtin.di, builtin.uo), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.get_token_list(builtin.in, builtin.out, builtin.di, builtin.uo), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.get_token_list_loop(builtin.in, builtin.in, builtin.in, builtin.out, builtin.di, builtin.uo), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.graphic_token_char(builtin.in), finite(0, [no]), cannot_loop).
:- pragma termination_info(mercury_term_lexer.linestr_get_token_list_max(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out, builtin.in, builtin.out), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.lookup_token_action(builtin.in, builtin.out), finite(0, [no, no]), cannot_loop).
:- pragma termination_info(mercury_term_lexer.string_get_token_list(builtin.in, builtin.out, builtin.in, builtin.out), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.string_get_token_list_max(builtin.in, builtin.in, builtin.out, builtin.in, builtin.out), infinite, can_loop).
:- pragma termination_info(mercury_term_lexer.token_to_string(builtin.in, builtin.out), infinite, can_loop).

:- pragma exceptions(predicate, mercury_term_lexer.execute_get_token_action, 8, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.get_context, 4, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.get_token, 6, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.get_token_list, 3, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.get_token_list, 4, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.get_token_list_loop, 6, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.graphic_token_char, 1, 0, will_not_throw).
:- pragma exceptions(predicate, mercury_term_lexer.linestr_get_token_list_max, 7, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.lookup_token_action, 2, 0, will_not_throw).
:- pragma exceptions(predicate, mercury_term_lexer.string_get_token_list, 4, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.string_get_token_list_max, 5, 0, may_throw(user_exception)).
:- pragma exceptions(predicate, mercury_term_lexer.token_to_string, 2, 0, may_throw(user_exception)).
