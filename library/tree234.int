:- module tree234.
:- interface.
:- import_module assoc_list.
:- import_module list.
:- import_module term.
:- type tree234(K, V).
:- inst (uniq_tree234_gg) == unique(empty ; four(ground, ground, ground, ground, ground, ground, (tree234.uniq_tree234_gg), (tree234.uniq_tree234_gg), (tree234.uniq_tree234_gg), (tree234.uniq_tree234_gg)) ; three(ground, ground, ground, ground, (tree234.uniq_tree234_gg), (tree234.uniq_tree234_gg), (tree234.uniq_tree234_gg)) ; two(ground, ground, (tree234.uniq_tree234_gg), (tree234.uniq_tree234_gg))).
:- inst (uniq_tree234(K, V)) == unique(empty ; four(K, V, K, V, K, V, tree234.uniq_tree234(K, V), tree234.uniq_tree234(K, V), tree234.uniq_tree234(K, V), tree234.uniq_tree234(K, V)) ; three(K, V, K, V, tree234.uniq_tree234(K, V), tree234.uniq_tree234(K, V), tree234.uniq_tree234(K, V)) ; two(K, V, tree234.uniq_tree234(K, V), tree234.uniq_tree234(K, V))).
:- mode (di_tree234) == (tree234.uniq_tree234(ground, ground) >> (builtin.dead)).
:- mode (uo_tree234) == (free >> tree234.uniq_tree234(ground, ground)).
:- mode (di_tree234(K, V)) == (tree234.uniq_tree234(K, V) >> (builtin.dead)).
:- mode (uo_tree234(K, V)) == (free >> tree234.uniq_tree234(K, V)).
:- pragma type_spec((tree234.lookup)/3, (K = (term.var(V_2))), (tree234.'TypeSpecOf__pred_or_func__lookup__[K = var(V_2)]')).
:- pragma type_spec((tree234.search)/3, (K = int), (tree234.'TypeSpecOf__pred_or_func__search__[K = int]')).
:- pragma type_spec((tree234.search)/3, (K = (term.var(V_2))), (tree234.'TypeSpecOf__pred_or_func__search__[K = var(V_2)]')).
:- pragma type_spec(tree234.set((builtin.in), (builtin.in), (builtin.in), (builtin.out)), (K = (term.var(V_2))), (tree234.'TypeSpecOf__pred__set__[K = var(V_2)]')).
:- pragma type_spec(tree234.update((builtin.in), (builtin.in), (builtin.in), (builtin.out)), (K = int), (tree234.'TypeSpecOf__pred__update__[K = int]')).
:- pragma type_spec(tree234.update((builtin.in), (builtin.in), (builtin.in), (builtin.out)), (K = (term.var(V_2))), (tree234.'TypeSpecOf__pred__update__[K = var(V_2)]')).
:- func assoc_list_to_tree234((assoc_list.assoc_list(K, V))) = (tree234.tree234(K, V)).
:- pred assoc_list_to_tree234((assoc_list.assoc_list(K, V)), (tree234.tree234(K, V))).
:- mode assoc_list_to_tree234((builtin.in), (builtin.out)) is det.
:- func count((tree234.tree234(K, V))) = int.
:- pred count((tree234.tree234(K, V)), int).
:- mode count((builtin.in), (builtin.out)) is det.
:- func delete((tree234.tree234(K, V)), K) = (tree234.tree234(K, V)).
:- pred delete((tree234.tree234(K, V)), K, (tree234.tree234(K, V))).
:- mode delete((builtin.in), (builtin.in), (builtin.out)) is det.
:- func foldl((func(K, V, A) = A), (tree234.tree234(K, V)), A) = A.
:- pred foldl(pred(K, V, A, A), (tree234.tree234(K, V)), A, A).
:- mode foldl((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out)) is det.
:- mode foldl((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- mode foldl((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred foldl2(pred(K, V, A, A, B, B), (tree234.tree234(K, V)), A, A, B, B).
:- mode foldl2((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldl2((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldl2((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldl2((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- pred foldl3(pred(K, V, A, A, B, B, C, C), (tree234.tree234(K, V)), A, A, B, B, C, C).
:- mode foldl3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldl3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldl3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldl3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- mode foldl3((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- pred foldl4(pred(K, V, A, A, B, B, C, C, D, D), (tree234.tree234(K, V)), A, A, B, B, C, C, D, D).
:- mode foldl4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldl4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldl4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldl4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- mode foldl4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- mode foldl4((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- func foldr((func(K, V, A) = A), (tree234.tree234(K, V)), A) = A.
:- pred foldr(pred(K, V, A, A), (tree234.tree234(K, V)), A, A).
:- mode foldr((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out)) is det.
:- mode foldr((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- mode foldr((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo)) is det.
:- pred foldr2(pred(K, V, A, A, B, B), (tree234.tree234(K, V)), A, A, B, B).
:- mode foldr2((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldr2((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldr2((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldr2((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- pred foldr3(pred(K, V, A, A, B, B, C, C), (tree234.tree234(K, V)), A, A, B, B, C, C).
:- mode foldr3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldr3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldr3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldr3((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- mode foldr3((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- pred foldr4(pred(K, V, A, A, B, B, C, C, D, D), (tree234.tree234(K, V)), A, A, B, B, C, C, D, D).
:- mode foldr4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode foldr4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- mode foldr4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode foldr4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- mode foldr4((pred((builtin.in), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- mode foldr4((pred((builtin.in), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- func init = (tree234.tree234(K, V)).
:- pred init((tree234.tree234(K, V))).
:- mode init((builtin.uo)) is det.
:- pred insert((tree234.tree234(K, V)), K, V, (tree234.tree234(K, V))).
:- mode insert((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred is_empty((tree234.tree234(K, V))).
:- mode is_empty((builtin.in)) is semidet.
:- func keys((tree234.tree234(K, V))) = (list.list(K)).
:- pred keys((tree234.tree234(K, V)), (list.list(K))).
:- mode keys((builtin.in), (builtin.out)) is det.
:- func lookup((tree234.tree234(K, V)), K) = V.
:- pred lookup((tree234.tree234(K, V)), K, V).
:- mode lookup((builtin.in), (builtin.in), (builtin.out)) is det.
:- pred lower_bound_lookup((tree234.tree234(K, V)), K, K, V).
:- mode lower_bound_lookup((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred lower_bound_search((tree234.tree234(K, V)), K, K, V).
:- mode lower_bound_search((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is semidet.
:- pred map_foldl(pred(K, V, W, A, A), (tree234.tree234(K, V)), (tree234.tree234(K, W)), A, A).
:- mode map_foldl((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode map_foldl((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode map_foldl((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- pred map_foldl2(pred(K, V, W, A, A, B, B), (tree234.tree234(K, V)), (tree234.tree234(K, W)), A, A, B, B).
:- mode map_foldl2((pred((builtin.in), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.out), (builtin.di), (builtin.uo), (builtin.di), (builtin.uo)) is det.
:- mode map_foldl2((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.di), (builtin.uo)) is det.
:- mode map_foldl2((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- mode map_foldl2((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.out), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is semidet.
:- func map_values((func(K, V) = W), (tree234.tree234(K, V))) = (tree234.tree234(K, W)).
:- pred map_values(pred(K, V, W), (tree234.tree234(K, V)), (tree234.tree234(K, W))).
:- mode map_values((pred((builtin.in), (builtin.in), (builtin.out)) is det), (builtin.in), (builtin.out)) is det.
:- mode map_values((pred((builtin.in), (builtin.in), (builtin.out)) is semidet), (builtin.in), (builtin.out)) is semidet.
:- func max_key((tree234.tree234(K, V))) = K is semidet.
:- pred member((tree234.tree234(K, V)), K, V).
:- mode member((builtin.in), (builtin.out), (builtin.out)) is nondet.
:- func min_key((tree234.tree234(K, V))) = K is semidet.
:- pred remove((tree234.tree234(K, V)), K, V, (tree234.tree234(K, V))).
:- mode remove((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is semidet.
:- pred remove_smallest((tree234.tree234(K, V)), K, V, (tree234.tree234(K, V))).
:- mode remove_smallest((builtin.in), (builtin.out), (builtin.out), (builtin.out)) is semidet.
:- pred search((tree234.tree234(K, V)), K, V).
:- mode search((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- func set((tree234.tree234(K, V)), K, V) = (tree234.tree234(K, V)).
:- pred set((tree234.tree234(K, V)), K, V, (tree234.tree234(K, V))).
:- mode set((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is det.
:- pred transform_value(pred(V, V), K, (tree234.tree234(K, V)), (tree234.tree234(K, V))).
:- mode transform_value(builtin.in((pred((builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- func tree234_to_assoc_list((tree234.tree234(K, V))) = (assoc_list.assoc_list(K, V)).
:- pred tree234_to_assoc_list((tree234.tree234(K, V)), (assoc_list.assoc_list(K, V))).
:- mode tree234_to_assoc_list((builtin.in), (builtin.out)) is det.
:- pred update((tree234.tree234(K, V)), K, V, (tree234.tree234(K, V))).
:- mode update((builtin.in), (builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred upper_bound_lookup((tree234.tree234(K, V)), K, K, V).
:- mode upper_bound_lookup((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred upper_bound_search((tree234.tree234(K, V)), K, K, V).
:- mode upper_bound_search((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is semidet.
:- func values((tree234.tree234(K, V))) = (list.list(V)).
:- pred values((tree234.tree234(K, V)), (list.list(V))).
:- mode values((builtin.in), (builtin.out)) is det.
