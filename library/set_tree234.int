:- module set_tree234.
:- interface.
:- import_module bool.
:- import_module list.
:- type set_tree234(_T).
:- pred contains(set_tree234.set_tree234(T), T).
:- mode contains((builtin.in), (builtin.in)) is semidet.
:- func count(set_tree234.set_tree234(T)) = int.
:- pred delete(T, set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode delete((builtin.in), (builtin.in), (builtin.out)) is det.
:- func delete(T, set_tree234.set_tree234(T)) = set_tree234.set_tree234(T).
:- pred delete_list(list.list(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode delete_list((builtin.in), (builtin.in), (builtin.out)) is det.
:- func delete_list(list.list(T), set_tree234.set_tree234(T)) = set_tree234.set_tree234(T).
:- pred difference(set_tree234.set_tree234(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode difference((builtin.in), (builtin.in), (builtin.out)) is det.
:- func difference(set_tree234.set_tree234(T), set_tree234.set_tree234(T)) = set_tree234.set_tree234(T).
:- pred divide((pred T), set_tree234.set_tree234(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode divide(builtin.in((pred((builtin.in)) is semidet)), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred divide_by_set(set_tree234.set_tree234(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode divide_by_set((builtin.in), (builtin.in), (builtin.out), (builtin.out)) is det.
:- pred empty(set_tree234.set_tree234(_T)).
:- mode empty((builtin.in)) is semidet.
:- pred equal(set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode equal((builtin.in), (builtin.in)) is semidet.
:- pred filter_map(pred(T1, T2), set_tree234.set_tree234(T1), set_tree234.set_tree234(T2)).
:- mode filter_map(builtin.in((pred((builtin.in), (builtin.out)) is semidet)), (builtin.in), (builtin.out)) is det.
:- func filter_map(((func T1) = T2), set_tree234.set_tree234(T1)) = set_tree234.set_tree234(T2).
:- mode filter_map((func((builtin.in)) = (builtin.out) is semidet), (builtin.in)) = (builtin.out) is det.
:- pred fold(pred(T1, T2, T2), set_tree234.set_tree234(T1), T2, T2).
:- mode fold(builtin.in((pred((builtin.in), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out)) is det.
:- func fold((func(T1, T2) = T2), set_tree234.set_tree234(T1), T2) = T2.
:- pred fold2(pred(T1, T2, T2, T3, T3), set_tree234.set_tree234(T1), T2, T2, T3, T3).
:- mode fold2(builtin.in((pred((builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.in), (builtin.out), (builtin.in), (builtin.out)) is det.
:- func init = set_tree234.set_tree234(T).
:- pred insert(T, set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode insert((builtin.in), (builtin.in), (builtin.out)) is det.
:- func insert(T, set_tree234.set_tree234(T)) = set_tree234.set_tree234(T).
:- pred insert_list(list.list(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode insert_list((builtin.in), (builtin.in), (builtin.out)) is det.
:- func insert_list(list.list(T), set_tree234.set_tree234(T)) = set_tree234.set_tree234(T).
:- pred intersect(set_tree234.set_tree234(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode intersect((builtin.in), (builtin.in), (builtin.out)) is det.
:- func intersect(set_tree234.set_tree234(T), set_tree234.set_tree234(T)) = set_tree234.set_tree234(T).
:- func intersect_list(list.list(set_tree234.set_tree234(T))) = set_tree234.set_tree234(T).
:- pred is_member(set_tree234.set_tree234(T), T, bool.bool).
:- mode is_member((builtin.in), (builtin.in), (builtin.out)) is det.
:- func is_member(set_tree234.set_tree234(T), T) = bool.bool.
:- func list_to_set(list.list(T)) = set_tree234.set_tree234(T).
:- func make_singleton_set(T) = set_tree234.set_tree234(T).
:- pred map(pred(T1, T2), set_tree234.set_tree234(T1), set_tree234.set_tree234(T2)).
:- mode map(builtin.in((pred((builtin.in), (builtin.out)) is det)), (builtin.in), (builtin.out)) is det.
:- func map(((func T1) = T2), set_tree234.set_tree234(T1)) = set_tree234.set_tree234(T2).
:- pred member(set_tree234.set_tree234(T), T).
:- mode member((builtin.in), (builtin.in)) is semidet.
:- mode member((builtin.in), (builtin.out)) is nondet.
:- func power_intersect(set_tree234.set_tree234(set_tree234.set_tree234(T))) = set_tree234.set_tree234(T).
:- pred power_union(set_tree234.set_tree234(set_tree234.set_tree234(T)), set_tree234.set_tree234(T)).
:- mode power_union((builtin.in), (builtin.out)) is det.
:- func power_union(set_tree234.set_tree234(set_tree234.set_tree234(T))) = set_tree234.set_tree234(T).
:- pred remove(T, set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode remove((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred remove_least(T, set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode remove_least((builtin.out), (builtin.in), (builtin.out)) is semidet.
:- pred remove_list(list.list(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode remove_list((builtin.in), (builtin.in), (builtin.out)) is semidet.
:- pred singleton_set(T, set_tree234.set_tree234(T)).
:- mode singleton_set((builtin.in), (builtin.out)) is det.
:- mode singleton_set((builtin.out), (builtin.in)) is semidet.
:- func sorted_list_to_set(list.list(T)) = set_tree234.set_tree234(T).
:- pred subset(set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode subset((builtin.in), (builtin.in)) is semidet.
:- pred superset(set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode superset((builtin.in), (builtin.in)) is semidet.
:- func to_sorted_list(set_tree234.set_tree234(T)) = list.list(T).
:- pred union(set_tree234.set_tree234(T), set_tree234.set_tree234(T), set_tree234.set_tree234(T)).
:- mode union((builtin.in), (builtin.in), (builtin.out)) is det.
:- func union(set_tree234.set_tree234(T), set_tree234.set_tree234(T)) = set_tree234.set_tree234(T).
:- pred union_list(list.list(set_tree234.set_tree234(T)), set_tree234.set_tree234(T)).
:- mode union_list((builtin.in), (builtin.out)) is det.
:- func union_list(list.list(set_tree234.set_tree234(T))) = set_tree234.set_tree234(T).
